<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>环境配置 on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link><description>Recent content in 环境配置 on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Nov 2021 18:10:01 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/index.xml" rel="self" type="application/rss+xml"/><item><title>无题</title><link>https://amiaaaz.github.io/2021/11/14/maybe-help-someone/</link><pubDate>Sun, 14 Nov 2021 18:10:01 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/14/maybe-help-someone/</guid><description>&lt;details>
&lt;summary>
&lt;h4 class="inline">
本地搭建Visual Regexp
&lt;/h4>
&lt;/summary>
&lt;p>搭建原因大家应该都懂吧，一个是正则可视化实在是很香很必要，其次线下没网的话没有个离线工具就很容易gg，同类工具还有&lt;a href="https://github.com/gchq/CyberChef/releases/tag/v9.32.3">cyberchef&lt;/a>等&lt;/p>
&lt;p>&lt;a href="https://wangwl.net/static/projects/visualRegex/#">Visual Regexp在线地址&lt;/a> | &lt;a href="https://github.com/relax-code-relax-life/visualRegexPage">github仓库&lt;/a>&lt;/p>
&lt;p>在&lt;code>git clone&lt;/code>之后首先肯定是&lt;code>npm install&lt;/code>，出现vulnerabilities很正常，直接&lt;code>npm audit fix --force&lt;/code>，一次不行就两次&lt;/p>
&lt;p>奇葩的是作者自己的visual-regex包一直是以快捷方式的形式被安装（后来发现是整个项目的package.json编写的问题）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114182010887.png" alt="image-20211114182010887">&lt;/p>
&lt;p>解决方法：删除快捷方式，单独安装&lt;code>npm i visual-regex&lt;/code>，用everything查找到该包具体存在的位置，复制到node_modules目录下&lt;/p>
&lt;p>之后到build目录下&lt;code>node .\build.js&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114182307150.png" alt="image-20211114182307150">&lt;/p>
&lt;p>报错hightlight.js并没有引入./lib/highlight，查看\highlight.js\package.json的exports部分，发现第90行的引用是&amp;quot;.&amp;quot;，将其改为&amp;quot;./lib/highlight&amp;quot;&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/JQW8B657%60%241JG%5BFOWY1I%7BBW.png" alt="img">&lt;/p>
&lt;p>再次build提示*&amp;lsquo;NODE_ENV&amp;rsquo; is not recognized as an internal or external command, operable program or batch file.*（此处截图走丢了），解决方法&lt;code>npm install -g win-node-env&lt;/code>&lt;/p>
&lt;p>之后&lt;code>node .\build.js&lt;/code>即可成功build，在devlist文件夹下的index.html即可正常使用相关功能&lt;/p>
&lt;/details>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
无法打开jar包应用
&lt;/h4>
&lt;/summary>
&lt;p>这个应该属于常见问题了，一般原因是java版本不对&lt;/p>
&lt;p>很多人选择设置不同名字的环境变量，比如java8，java11，我的话是只有java11是环境变量，在有些jar需要java8的环境时直接用everything搜索java.exe，复制路径之后&lt;code>xxx\java.exe -jar xyz.jar&lt;/code>这样来运行&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211117132839594.png" alt="image-20211117132839594">&lt;/p>
&lt;/details>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
远程调试Node.js
&lt;/h4>
&lt;/summary>
&lt;p>场景：用vulhub或其它已经打包好的docker环境复现cve需要远程调试&lt;/p>
&lt;p>首先修改对应的docker文件：package.json的&amp;quot;scripts&amp;quot;字段的&amp;quot;start&amp;quot;部分增加&lt;code>--inspect=0.0.0.0:port&lt;/code>，指名调试时的监听端口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211117160017724.png" alt="image-20211117160017724">&lt;/p>
&lt;p>docker-compose.yml中增加监听端口&amp;quot;8000:9229&amp;quot;，之后正常&lt;code>docker-compose up -d&lt;/code>&lt;/p>
&lt;p>本地先下载好一样的文件，用vscode生成一个调试文档lauch.json&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211117155743006.png" alt="image-20211117155743006">&lt;/p>
&lt;p>需要改的配置有address（远程ip），port（远程监听端口），localRoot（本地路径），remote（远程路径），之后即可打断点调试&lt;/p>
&lt;p>出现unbound breakpoint正常，大概率是你的交互就没执行到打断点的地方，所以没什么反应&lt;/p>
&lt;/details></description></item></channel></rss>