<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go学习笔记 on AmiaaaZ's Site</title><link>https://amiaaaz.github.io/series/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><description>Recent content in Go学习笔记 on AmiaaaZ's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 26 Feb 2022 15:58:41 +0800</lastBuildDate><atom:link href="https://amiaaaz.github.io/series/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>Go学习笔记Ⅰ</title><link>https://amiaaaz.github.io/2022/02/26/go-study-notes-01/</link><pubDate>Sat, 26 Feb 2022 15:58:41 +0800</pubDate><guid>https://amiaaaz.github.io/2022/02/26/go-study-notes-01/</guid><description>&lt;h2 id="arrayslice-变量覆盖">array&amp;amp;slice 变量覆盖&lt;/h2>
&lt;blockquote>
&lt;p>A slice is a descriptor of an array segment. It consists of a pointer to the array, the length of the segment, and its capacity (the maximum length of the segment).&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://go.dev/blog/slices-intro">Go Slices: usage and internals&lt;/a>（建议直接看官方文档，我这里简单写一下&lt;/p>
&lt;p>go中定义数组的基本操作是这样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span> &lt;span style="color:#75715e">// int型 4个元素
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">// 下标为1的元素值为1
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#75715e">// i == 1
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本类似于c的写法，数组变量代表整个数组，但是它并不是一个指向第一个数组元素的指针，所以说我们在操作数组中的值时实际上是在用它值的copy&lt;/p>
&lt;p>对于slice，既可以直接声明&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75af00">letters&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;b&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;d&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以用内置的&lt;code>make&lt;/code>函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75715e">// func make([]T, len, cap) []T
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75715e">// s == []byte{0, 0, 0, 0, 0}
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>[]T&lt;/code>表示type，&lt;code>len&lt;/code>表示长度，而第三个参数&lt;code>cap&lt;/code>是可以缺省的，默认等于length&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>关于slice的细节是我们关注的重点；它包含了一个指向数组的指针ptr，段的长度len，还有段的最大长度cap ————其实说到这里，如果有经验的已经能知道问题所在了&lt;/p>
&lt;p>&lt;img src="https://go.dev/blog/slices-intro/slice-struct.png" alt="img">&lt;/p>
&lt;p>以上面的&lt;code>s&lt;/code>为例（缺省cap），结构是这样的&lt;/p>
&lt;p>&lt;img src="https://go.dev/blog/slices-intro/slice-1.png" alt="img">&lt;/p>
&lt;p>当我们对&lt;code>s&lt;/code>进行切片操作&lt;code>s = s[2:4]&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://go.dev/blog/slices-intro/slice-2.png" alt="img">&lt;/p>
&lt;p>切片创建了一个新的slice（len和cap均不同），ptr仍指向原数组&lt;/p>
&lt;p>所以修改新的slice的元素会修改原始slice的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75af00">d&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;r&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;o&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;d&amp;#39;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">e&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">d&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">:]&lt;/span>
&lt;span style="color:#75715e">// e == []byte{&amp;#39;a&amp;#39;, &amp;#39;d&amp;#39;}
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">e&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;m&amp;#39;&lt;/span>
&lt;span style="color:#75715e">// e == []byte{&amp;#39;a&amp;#39;, &amp;#39;m&amp;#39;}
&lt;/span>&lt;span style="color:#75715e">// d == []byte{&amp;#39;r&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;m&amp;#39;}
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>元素的个数总是不能超过cap代表的上限，为了动态分配数组大小，我们有时会选择这样的操作&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cap&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// +1 in case cap(s) == 0
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">t&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">t&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个新的slice 并把原来的值复制进来，有一个内置函数可以直接做&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#111">copy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">dst&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">src&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#75af00">T&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>copy允许传入length不同的两个slice，它会帮我们处理好可能存在的潜在问题，直接&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75af00">t&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cap&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">copy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">t&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">s&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">t&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>即可&lt;/p>
&lt;p>单纯向slice中添加元素可以使用内置函数&lt;code>append&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">s&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#75af00">T&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">x&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#75af00">T&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#75af00">T&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当大于cap时它会自动调整，如果要append一个slice也是可以的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;John&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Paul&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#34;George&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Ringo&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;Pete&amp;#34;&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// equivalent to &amp;#34;append(a, b[0], b[1], b[2])&amp;#34;
&lt;/span>&lt;span style="color:#75715e">// a == []string{&amp;#34;John&amp;#34;, &amp;#34;Paul&amp;#34;, &amp;#34;George&amp;#34;, &amp;#34;Ringo&amp;#34;, &amp;#34;Pete&amp;#34;}
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这分析了半天，终于到重点了）&lt;/p>
&lt;p>上面提到了，re-slicing a slice doesn&amp;rsquo;t make a copy of the underlying array, the full array will by kept in memory until it is no longer referenced&lt;/p>
&lt;p>举个例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">int&lt;/span>
&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">a&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">a&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">b&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>[1 1 1 3] [1 1 1 3]
&lt;/code>&lt;/pre>&lt;p>我们发现3之前的2被覆盖了&lt;/p>
&lt;p>假设当a数组在append一个元素时，ptr指向0x1(假设0x1为数组地址), len=1, cap=2；append第二个元素时ptr不变，len=2, cap=2；append第三个元素时容量不够了就会动态扩容，cap=4, len=3，所以ptr指向新的0x2&lt;/p>
&lt;p>此时ptr=0x2, len=3, cap=4，再append第四个元素也就是2的时候还不需要扩容，返回ptr=0x2, len=4, cap=4给b，但此时对于a而言len=3，相当于是添加元素然后另存为了，对原数组不影响，c也是一样的情况&lt;/p>
&lt;p>————不知道我有没有解释清楚QwQ&lt;/p>
&lt;h3 id="teaser-confidence-ctf-2019the-lottery">[Teaser CONFidence CTF 2019]The Lottery&lt;/h3>
&lt;p>参考：&lt;a href="https://github.com/mwarzynski/confidence2019_teaser_lottery">wp&lt;/a> | &lt;a href="https://blog.luckycat.moe/post/teaser-confidence-ctf-2019-the-lottery-writeup/">wp &lt;/a> | &lt;a href="https://ce-automne.github.io/2019/03/27/CONFidence%20-CTF-2019-The%20Lottery%20-WriteUp/">wp2&lt;/a>&lt;/p>
&lt;h3 id="roarctf-2019dist">[RoarCTF 2019]Dist&lt;/h3>
&lt;p>是上面那个题的改编&lt;/p>
&lt;p>参考：&lt;a href="https://blog.szfszf.top/tech/roarctf2019-web-writeup/">wp1&lt;/a>&lt;/p>
&lt;h2 id="cve-2019-14809-解析host">CVE-2019-14809 解析host&lt;/h2>
&lt;pre tabindex="0">&lt;code>javascript://%250aalert(1)+'aa@google.com/a'a
http://[google.com]:80
http://google.com]:80
http://google.com]:80__Anything_you'd_like_sir
http://[google.com]FreeTextZoneHere]:80
&lt;/code>&lt;/pre>&lt;p>由于net/url库的问题，这些URI解析出来Host都是google.com&lt;/p>
&lt;h3 id="某不知名题">某不知名题&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;net/url&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;strings&amp;#34;&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">SanCheck&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">input&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">error&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Parse&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">input&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">err&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Scheme&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;http&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Scheme [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Scheme&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Opaque&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: WHAT AER YOU DOING ?!!! (%s)&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Opaque&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Hostname&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;127.0.0.1&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Hostname [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Hostname&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Port&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Port&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;80&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Port [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Port&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Authorization Required&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Username&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;root&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Username [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Username&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">set&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">User&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Password&lt;/span>&lt;span style="color:#111">();&lt;/span> &lt;span style="color:#111">!&lt;/span>&lt;span style="color:#75af00">set&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#75af00">password&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;P@ssw0rd!&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Password [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">password&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RequestURI&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;/flag.php&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid RequestURI [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">RequestURI&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fragment&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: Invalid Fragment [%s]&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fragment&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">!&lt;/span>&lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Contains&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#39;Pwned!&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Errorf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;err: San Check failed&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#75af00">u&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">String&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>payload&lt;/p>
&lt;pre tabindex="0">&lt;code>http://root:P@ssw0rd!@[127.0.0.1]['Pwned!']:80/flag.php
&lt;/code>&lt;/pre>&lt;h2 id="randseed-种子小的情况下可爆破">rand.Seed 种子小的情况下可爆破&lt;/h2>
&lt;h3 id="ractf-2021military-grade">[RACTF 2021]Military Grade&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#d88200">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;crypto/aes&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;crypto/cipher&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;encoding/hex&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;log&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;sync&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;time&amp;#34;&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">rawFlag&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#d88200">&amp;#34;[REDACTED]&amp;#34;&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">flagmu&lt;/span> &lt;span style="color:#75af00">sync&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Mutex&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">PKCS5Padding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">blockSize&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">after&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">padding&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">blockSize&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#75af00">blockSize&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">padtext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">bytes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Repeat&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">{&lt;/span>&lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">padding&lt;/span>&lt;span style="color:#111">)},&lt;/span> &lt;span style="color:#75af00">padding&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">padtext&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">encrypt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">plaintext&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bKey&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bIV&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">blockSize&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">bPlaintext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">PKCS5Padding&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">plaintext&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#75af00">blockSize&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">plaintext&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCipher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bKey&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">err&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">ciphertext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">bPlaintext&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">mode&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">cipher&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCBCEncrypter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bIV&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">mode&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">CryptBlocks&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">bPlaintext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">hex&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">EncodeToString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">changer&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">ticker&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewTicker&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Millisecond&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">672&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">C&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#00a8c8">range&lt;/span> &lt;span style="color:#75af00">ticker&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">time&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Now&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">UnixNano&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#111">^&lt;/span>&lt;span style="color:#ae81ff">0x7FFFFFFFFEFFF000&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Int63&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">BlockSize&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Lock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#75af00">encrypt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rawFlag&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">BlockSize&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Unlock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">handler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span> &lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ResponseWriter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">req&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Request&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Lock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fprint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">w&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">flagmu&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Unlock&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Println&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Challenge starting up&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">HandleFunc&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">handler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">go&lt;/span> &lt;span style="color:#75af00">changer&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Fatal&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">http&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">ListenAndServe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;:80&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">nil&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>flag 被 AES CBC 加密，加密本身没问题，问题出在种子上&lt;/p>
&lt;p>种子生成是靠 &lt;code>rand.Seed(time.Now().UnixNano() &amp;amp; ^0x7FFFFFFFFEFFF000)&lt;/code> 完成，这样得到的种子很小 可以被我们爆破出来&lt;/p>
&lt;p>exp.go&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;crypto/aes&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;crypto/cipher&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;encoding/hex&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;strings&amp;#34;&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">hextext&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#d88200">&amp;#34;35e57017892d2c615ed057d20eeee56f82c7b02d2d1b7efed6944c3cc660c914&amp;#34;&lt;/span> &lt;span style="color:#75715e">// Encrypted Flag
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#f92672">:=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#f92672">&amp;lt;=&lt;/span>&lt;span style="color:#ae81ff">19777868&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">int64&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">seed&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Int63&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">key&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span> &lt;span style="color:#111">&amp;lt;&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">BlockSize&lt;/span>&lt;span style="color:#111">;&lt;/span> &lt;span style="color:#75af00">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">iv&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">append&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">byte&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Intn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">aes&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCipher&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">key&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">mode&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">cipher&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewCBCDecrypter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">block&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">iv&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">_&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">hex&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">DecodeString&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">hextext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">flagBytes&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">mode&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">CryptBlocks&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flagBytes&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">ciphertext&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">flag&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">string&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flagBytes&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#75af00">strings&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Contains&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;ractf&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">fmt&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Printf&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Flag: %s\n&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">flag&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">break&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ractf{int3rEst1ng_M4sk_paTt3rn}&lt;/code>&lt;/p>
&lt;h2 id="mathrand未调用seed默认种子为1">math/rand未调用Seed默认种子为1&lt;/h2>
&lt;h3 id="wmctf2020gogogo">[WMCTF2020]GOGOGO&lt;/h3>
&lt;p>参考：&lt;a href="https://annevi.cn/2020/08/14/wmctf2020-gogogo-writeup/">wp&lt;/a>&lt;/p>
&lt;h2 id="uint32整数溢出">uint32整数溢出&lt;/h2>
&lt;p>uint32的范围是0~4294967295&lt;/p>
&lt;h3 id="羊城杯2021checkin_go">[羊城杯2021]Checkin_Go&lt;/h3>
&lt;pre tabindex="0">&lt;code>u1, err1 := strconv.ParseUint(nowMoney,10,32)
u2, err2 := strconv.ParseUint(addMoney,10,32)
....
newMoney = uint32(u1) + uint32(u2)
&lt;/code>&lt;/pre>&lt;p>flag price是uint32，以admin身份（伪造cookie）加到溢出，变小，就可以买了&lt;/p>
&lt;p>参考：&lt;a href="https://yyz9.cn/2021/09/12/%E7%BE%8A%E5%9F%8E%E6%9D%AF2021-checkin_go%E8%AF%A6%E7%BB%86%E9%A2%98%E8%A7%A3/">wp&lt;/a>&lt;/p>
&lt;h2 id="gin框架伪造cookie">gin框架伪造cookie&lt;/h2>
&lt;h3 id="secure-cookie-faker">secure-cookie-faker&lt;/h3>
&lt;p>工具：&lt;a href="https://github.com/EddieIvan01/secure-cookie-faker">secure-cookie-faker&lt;/a>&lt;/p>
&lt;p>decode:&lt;/p>
&lt;pre tabindex="0">&lt;code>.\secure-cookie-faker.exe dec -c &amp;quot;&amp;quot;
&lt;/code>&lt;/pre>&lt;p>有type detail的就是object string&lt;/p>
&lt;p>encode:&lt;/p>
&lt;pre tabindex="0">&lt;code>.\secure-cookie-faker.exe enc -n &amp;quot;mysession&amp;quot; -k &amp;quot;secret&amp;quot; -o &amp;quot;{user: admin, id: 0[int]}&amp;quot;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>-o &lt;/code>: object string，its like a K-V map, it should have type hints&lt;/li>
&lt;li>&lt;code>-n&lt;/code> : cookie name, its required because the HMAC hash&amp;rsquo;s generation relies on it&lt;/li>
&lt;li>&lt;code>-k&lt;/code> : secret key(s), could be multiple: &lt;code>-k &amp;quot;key1, key2&amp;quot;&lt;/code>, the first is hash key, and the second is encrypt block key&lt;/li>
&lt;/ul>
&lt;p>when element&amp;rsquo;s type is &lt;code>string&lt;/code>, the type tag can be omitted&lt;/p>
&lt;p>type tag can only be &lt;code>int&lt;/code>, &lt;code>uint&lt;/code>, &lt;code>float&lt;/code>, &lt;code>bool&lt;/code>, &lt;code>string&lt;/code>, &lt;code>byte&lt;/code>&lt;/p>
&lt;p>change serializer&lt;/p>
&lt;pre tabindex="0">&lt;code>.\secure-cookie-faker.exe enc -n &amp;quot;mysession&amp;quot; -k &amp;quot;secret&amp;quot; -o &amp;quot;some-string&amp;quot; -way json
.\secure-cookie-faker.exe enc -n &amp;quot;mysession&amp;quot; -k &amp;quot;secret&amp;quot; -o &amp;quot;{id: 0[int]}&amp;quot; -way json
.\secure-cookie-faker.exe enc -n &amp;quot;mysession&amp;quot; -k &amp;quot;secret&amp;quot; -o &amp;quot;some-string&amp;quot; -way nop
.\secure-cookie-faker.exe dec -c &amp;quot;MTU2NjkxMjI4NXxleUoxYzJWeUlqb2lZV1J0YVc0aWZRbz18OibftwH33BZStXtep7TbN_mbyk8RftQe9t_wxCJXhHo=&amp;quot; -way json
&lt;/code>&lt;/pre>&lt;h3 id="脚本">脚本&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#75af00">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#d88200">&amp;#34;github.com/gin-contrib/sessions&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;github.com/gin-contrib/sessions/cookie&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span>
&lt;span style="color:#d88200">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">gin&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Default&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#75af00">storage&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">cookie&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">NewStore&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">randomChar&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Use&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">sessions&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Sessions&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;o&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">storage&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">GET&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">cookieHandler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">r&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Run&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;0.0.0.0:8002&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">cookieHandler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">c&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#75af00">gin&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Context&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">session&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#75af00">sessions&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Default&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Set&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;uname&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#75715e">// 修改处
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">session&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Save&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">randomChar&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">l&lt;/span> &lt;span style="color:#00a8c8">int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">[]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#75af00">output&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#111">make&lt;/span>&lt;span style="color:#111">([]&lt;/span>&lt;span style="color:#00a8c8">byte&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">l&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#75af00">rand&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">Read&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">output&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">output&lt;/span>
&lt;span style="color:#111">}&lt;/span> &lt;span style="color:#75715e">// 伪随机
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vnctf-2022gocalc0">[VNCTF 2022]gocalc0&lt;/h3>
&lt;p>据说是y老师出题有误，导致异常简单&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/AmiaaaZ/ImageOverCloud/master/wpImg/image-20220213002805727.png" alt="image-20220213002805727">&lt;/p>
&lt;p>emmmm&lt;/p>
&lt;h2 id="go111-netheep存在crlf漏洞">go&amp;lt;=1.11 net/heep存在CRLF漏洞&lt;/h2>
&lt;p>&lt;a href="https://github.com/go/go/issues/30794">https://github.com/go/go/issues/30794&lt;/a>&lt;/p>
&lt;h3 id="wmctf2020gogogo-1">[WMCTF2020]GOGOGO&lt;/h3>
&lt;p>参考：&lt;a href="https://annevi.cn/2020/08/14/wmctf2020-gogogo-writeup/">wp&lt;/a>&lt;/p></description></item></channel></rss>